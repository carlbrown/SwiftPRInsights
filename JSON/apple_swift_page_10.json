{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11063",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11063/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11063/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11063/events",
      "html_url": "https://github.com/apple/swift/pull/11063",
      "id": 244188483,
      "number": 11063,
      "title": "[QoI] Add test-case for SR-5505 (attempting to use function name as a type)",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-19T22:06:27Z",
      "updated_at": "2017-07-19T22:43:22Z",
      "closed_at": "2017-07-19T22:43:22Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11063",
        "html_url": "https://github.com/apple/swift/pull/11063",
        "diff_url": "https://github.com/apple/swift/pull/11063.diff",
        "patch_url": "https://github.com/apple/swift/pull/11063.patch"
      },
      "body": "<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.7028114
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11065",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11065/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11065/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11065/events",
      "html_url": "https://github.com/apple/swift/pull/11065",
      "id": 244192517,
      "number": 11065,
      "title": "[CS] Dump the number of viable solutions with -debug-constraints.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-19T22:25:39Z",
      "updated_at": "2017-07-20T07:09:44Z",
      "closed_at": "2017-07-20T07:09:41Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11065",
        "html_url": "https://github.com/apple/swift/pull/11065",
        "diff_url": "https://github.com/apple/swift/pull/11065.diff",
        "patch_url": "https://github.com/apple/swift/pull/11065.patch"
      },
      "body": "",
      "score": 1.7055964
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11067",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11067/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11067/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11067/events",
      "html_url": "https://github.com/apple/swift/pull/11067",
      "id": 244194392,
      "number": 11067,
      "title": "Sema: Fix capture analysis for 'defer'",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-19T22:34:43Z",
      "updated_at": "2017-07-20T02:09:18Z",
      "closed_at": "2017-07-20T02:09:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11067",
        "html_url": "https://github.com/apple/swift/pull/11067",
        "diff_url": "https://github.com/apple/swift/pull/11067.diff",
        "patch_url": "https://github.com/apple/swift/pull/11067.patch"
      },
      "body": "A 'defer' parses as a DeferStmt and an implicit FuncDecl. The\r\nimplicit FuncDecl does not have a valid source location, so\r\nbe sure to consistently use the outer function's source\r\nlocation instead.\r\n\r\nFixes <rdar://problem/33353035> / <https://bugs.swift.org/browse/SR-5464>.\r\n",
      "score": 1.7041321
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11068",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11068/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11068/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11068/events",
      "html_url": "https://github.com/apple/swift/pull/11068",
      "id": 244196902,
      "number": 11068,
      "title": "Sema: Fix capture analysis for 'defer' [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-19T22:48:25Z",
      "updated_at": "2017-07-20T20:09:42Z",
      "closed_at": "2017-07-20T20:09:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11068",
        "html_url": "https://github.com/apple/swift/pull/11068",
        "diff_url": "https://github.com/apple/swift/pull/11068.diff",
        "patch_url": "https://github.com/apple/swift/pull/11068.patch"
      },
      "body": "* Description: A 'defer' that uses generic parameters inside of a closure had incorrect capture info computed by Sema, which could trigger various SILGen assertions.\r\n\r\n* Scope of the issue: Reported externally and pretty easy to reproduce.\r\n\r\n* Origination: User reports this as a regression, but I think this is because capture analysis got more accurate recently. The underlying problem was always there.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: New test added.\r\n\r\n* Reviewed by: @jckarter \r\n\r\n* Radar: <rdar://problem/33353035>",
      "score": 1.7098392
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11069",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11069/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11069/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11069/events",
      "html_url": "https://github.com/apple/swift/pull/11069",
      "id": 244200550,
      "number": 11069,
      "title": "Disable -Xlinker argument reordering test on macOS.",
      "user": {
        "login": "spevans",
        "id": 1093011,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1093011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/spevans",
        "html_url": "https://github.com/spevans",
        "followers_url": "https://api.github.com/users/spevans/followers",
        "following_url": "https://api.github.com/users/spevans/following{/other_user}",
        "gists_url": "https://api.github.com/users/spevans/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/spevans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/spevans/subscriptions",
        "organizations_url": "https://api.github.com/users/spevans/orgs",
        "repos_url": "https://api.github.com/users/spevans/repos",
        "events_url": "https://api.github.com/users/spevans/events{/privacy}",
        "received_events_url": "https://api.github.com/users/spevans/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-19T23:09:26Z",
      "updated_at": "2017-07-20T00:05:15Z",
      "closed_at": "2017-07-20T00:05:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11069",
        "html_url": "https://github.com/apple/swift/pull/11069",
        "diff_url": "https://github.com/apple/swift/pull/11069.diff",
        "patch_url": "https://github.com/apple/swift/pull/11069.patch"
      },
      "body": "Fixes broken test introduced by https://github.com/apple/swift/pull/9958\r\n\r\nThe linker argument reordering test should only be run on Linux.\r\n",
      "score": 1.703814
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11071",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11071/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11071/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11071/events",
      "html_url": "https://github.com/apple/swift/pull/11071",
      "id": 244206775,
      "number": 11071,
      "title": "[docs] Describe the Swift, LLVM, and LLDB branch structure.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-19T23:48:37Z",
      "updated_at": "2017-07-21T16:24:47Z",
      "closed_at": "2017-07-21T03:53:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11071",
        "html_url": "https://github.com/apple/swift/pull/11071",
        "diff_url": "https://github.com/apple/swift/pull/11071.diff",
        "patch_url": "https://github.com/apple/swift/pull/11071.patch"
      },
      "body": "I've promised to write this up for a while. :-) cc @llvm-beanz, @fredriss, @shahmishal, @tkremenek, @modocache, @gottesmm ",
      "score": 1.7128037
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11072",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11072/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11072/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11072/events",
      "html_url": "https://github.com/apple/swift/pull/11072",
      "id": 244209051,
      "number": 11072,
      "title": "[code-completion] Add a new custom completion context for a for-each …",
      "user": {
        "login": "benlangmuir",
        "id": 3412956,
        "avatar_url": "https://avatars2.githubusercontent.com/u/3412956?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benlangmuir",
        "html_url": "https://github.com/benlangmuir",
        "followers_url": "https://api.github.com/users/benlangmuir/followers",
        "following_url": "https://api.github.com/users/benlangmuir/following{/other_user}",
        "gists_url": "https://api.github.com/users/benlangmuir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/benlangmuir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/benlangmuir/subscriptions",
        "organizations_url": "https://api.github.com/users/benlangmuir/orgs",
        "repos_url": "https://api.github.com/users/benlangmuir/repos",
        "events_url": "https://api.github.com/users/benlangmuir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/benlangmuir/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-20T00:04:10Z",
      "updated_at": "2017-07-20T16:55:27Z",
      "closed_at": "2017-07-20T16:40:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11072",
        "html_url": "https://github.com/apple/swift/pull/11072",
        "diff_url": "https://github.com/apple/swift/pull/11072.diff",
        "patch_url": "https://github.com/apple/swift/pull/11072.patch"
      },
      "body": "* Explanation: This adds a new context kind for `for x in <HERE>` completions that can be used by clients to provide a custom code-completion snippet in that position (e.g. a snippet for `1…<#N#>`).\r\n* Scope: Affects code-completion of the sequence for a for-each loop if the client has provided a custom snippet for that position.\r\n* Radar: rdar://problem/29910383\r\n* Risk: Low; this will only affect clients that opt-in, and other than adding the new kind of context to match it behaves the same as PostfixExprBeginning like it always has.\r\n* Testing: Regression tests added.",
      "score": 1.7094551
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11073",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11073/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11073/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11073/events",
      "html_url": "https://github.com/apple/swift/pull/11073",
      "id": 244240206,
      "number": 11073,
      "title": "Add some more tests I've been meaning to add for a while",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 11,
      "created_at": "2017-07-20T04:08:56Z",
      "updated_at": "2017-07-24T20:25:49Z",
      "closed_at": "2017-07-24T17:46:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11073",
        "html_url": "https://github.com/apple/swift/pull/11073",
        "diff_url": "https://github.com/apple/swift/pull/11073.diff",
        "patch_url": "https://github.com/apple/swift/pull/11073.patch"
      },
      "body": "- Can we instantiate a struct with the same name as a function? (yes)\r\n- Factor out a module just for objc_nonnull_lie_hack.swift (and re-enable it)\r\n- More tests for array/string-to-optional-pointer conversions.",
      "score": 1.7432331
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11074",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11074/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11074/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11074/events",
      "html_url": "https://github.com/apple/swift/pull/11074",
      "id": 244246557,
      "number": 11074,
      "title": "Staging for __shared and __owned",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-07-20T05:06:13Z",
      "updated_at": "2017-07-25T20:41:57Z",
      "closed_at": "2017-07-24T17:13:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11074",
        "html_url": "https://github.com/apple/swift/pull/11074",
        "diff_url": "https://github.com/apple/swift/pull/11074.diff",
        "patch_url": "https://github.com/apple/swift/pull/11074.patch"
      },
      "body": "This is the bare minimum to get the frontend to accept `__shared` and `__owned`.  `@guarantee`d semantics and `__owned`<=>`__shared` conversions are coming next.",
      "score": 1.7515954
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11076",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11076/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11076/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11076/events",
      "html_url": "https://github.com/apple/swift/pull/11076",
      "id": 244254294,
      "number": 11076,
      "title": "AST: Check return value of ProtocolConformance::getTypeWitness()",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-20T06:05:34Z",
      "updated_at": "2017-07-20T06:33:15Z",
      "closed_at": "2017-07-20T06:33:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11076",
        "html_url": "https://github.com/apple/swift/pull/11076",
        "diff_url": "https://github.com/apple/swift/pull/11076.diff",
        "patch_url": "https://github.com/apple/swift/pull/11076.patch"
      },
      "body": "This method returns an empty Type if the conformance is currently\r\nbeing checked. The other caller of this method in the\r\nGenericSignatureBuilder checked the return value and bailed out,\r\nbut one place did not.\r\n\r\nThis is probably not the right long-term fix, but it matches what\r\nthe other caller of getTypeWitness() does in this file.\r\n\r\nI don't have a reduced test case either; the repro involves\r\nbuilding a specific revision of the standard library with a patch\r\napplied. However, the fix can't really do any harm, since passing\r\nan empty Type here quickly crashes.\r\n\r\nFixes <rdar://problem/32296747>, <https://bugs.swift.org/browse/SR-4945>.",
      "score": 1.7096652
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11077",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11077/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11077/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11077/events",
      "html_url": "https://github.com/apple/swift/pull/11077",
      "id": 244254853,
      "number": 11077,
      "title": "AST: Check return value of ProtocolConformance::getTypeWitness() [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-20T06:09:04Z",
      "updated_at": "2017-07-20T20:09:56Z",
      "closed_at": "2017-07-20T20:09:56Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11077",
        "html_url": "https://github.com/apple/swift/pull/11077",
        "diff_url": "https://github.com/apple/swift/pull/11077.diff",
        "patch_url": "https://github.com/apple/swift/pull/11077.patch"
      },
      "body": "* Description: Fixes a null pointer dereference that occurs if we're building a generic signature containing a same type constraint involving a type for which we're in the process of checking conformance.\r\n\r\n* Scope of the issue: I don't have a reduced test case; the repro requires building the stdlib from a specific git revision, with a patch attached (see the JIRA).\r\n\r\n* Origination: The code in question was recently completely redone, but we've had various hard-to-track-down circularity issues involving the standard library forever.\r\n\r\n* Risk: Very low, we're bailing out in a code path that used to unconditionally crash.\r\n\r\n* Tested: Existing tests pass, and the stdlib no longer crashes with the patch, but I don't have a reduction.\r\n\r\n* Reviewed by: @rudkx \r\n\r\n* Radar: <rdar://problem/32296747>",
      "score": 1.7139194
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11081",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11081/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11081/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11081/events",
      "html_url": "https://github.com/apple/swift/pull/11081",
      "id": 244418015,
      "number": 11081,
      "title": "[4.0] NSKeyed{Una,A}rchiver should support Codable",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-20T16:09:45Z",
      "updated_at": "2017-07-20T22:40:07Z",
      "closed_at": "2017-07-20T22:40:04Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11081",
        "html_url": "https://github.com/apple/swift/pull/11081",
        "diff_url": "https://github.com/apple/swift/pull/11081.diff",
        "patch_url": "https://github.com/apple/swift/pull/11081.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #11025 to `swift-4.0-branch`.\r\n\r\n**Explanation:** Adds methods to `NSKeyedArchiver` and `NSKeyedUnarchiver` to encode and decode `Codable` objects\r\n**Scope:** Allows anyone using `NSKeyedArchiver` and `NSKeyedUnarchiver` in Swift to encode `Codable` subgraphs.\r\n**Radar:** rdar://problem/30472067\r\n**Risk:** Low\r\n**Testing:** This adds unit tests to confirm expected behavior.",
      "score": 1.7202915
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11082",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11082/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11082/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11082/events",
      "html_url": "https://github.com/apple/swift/pull/11082",
      "id": 244457346,
      "number": 11082,
      "title": "Substantially rework how IRGen handles function pointers.",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-20T18:34:59Z",
      "updated_at": "2017-07-20T23:56:50Z",
      "closed_at": "2017-07-20T23:56:48Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11082",
        "html_url": "https://github.com/apple/swift/pull/11082",
        "diff_url": "https://github.com/apple/swift/pull/11082.diff",
        "patch_url": "https://github.com/apple/swift/pull/11082.patch"
      },
      "body": "The goals here are four-fold:\r\n  - provide cleaner internal abstractions\r\n  - avoid IR bloat from extra bitcasts\r\n  - avoid recomputing function-type lowering information\r\n  - allow more information to be propagated from the function\r\n    access site (e.g. class_method) to the call site\r\n\r\nUse this framework immediately for class and protocol methods.\r\n\r\nNot NFC but pretty close.",
      "score": 1.7220474
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11085",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11085/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11085/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11085/events",
      "html_url": "https://github.com/apple/swift/pull/11085",
      "id": 244476835,
      "number": 11085,
      "title": "[ConstraintSolver] NFC: Add option to control early termination of shrinking phase",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-20T19:48:37Z",
      "updated_at": "2017-07-21T00:02:00Z",
      "closed_at": "2017-07-21T00:02:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11085",
        "html_url": "https://github.com/apple/swift/pull/11085",
        "diff_url": "https://github.com/apple/swift/pull/11085.diff",
        "patch_url": "https://github.com/apple/swift/pull/11085.patch"
      },
      "body": "Currently we have a number of unsolved disjunctions hard-coded to 5,\r\nwhich breaks some existing code by terminating shrinking too early.\r\nThis patch makes it a command-line option so users have control over\r\nwhat that threshold can be.\r\n\r\nResolves: rdar://problem/33433595\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.7227639
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11089",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11089/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11089/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11089/events",
      "html_url": "https://github.com/apple/swift/pull/11089",
      "id": 244520291,
      "number": 11089,
      "title": "[4.0] Don't consider KeyPathApplication operations when looking up non-SubscriptExprs.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-20T23:01:41Z",
      "updated_at": "2017-07-21T03:43:26Z",
      "closed_at": "2017-07-21T03:39:37Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11089",
        "html_url": "https://github.com/apple/swift/pull/11089",
        "diff_url": "https://github.com/apple/swift/pull/11089.diff",
        "patch_url": "https://github.com/apple/swift/pull/11089.patch"
      },
      "body": "Explanation: Introducing the global key path subscript operation introduced an ambiguity bug for code that tried to reference functions named `subscript` (using backtick quoted identifiers). This is fixed more deeply on master by #9989; this is a focused compatibility fix for 4.0.\r\n\r\nScope: Source compatibility regression; impacts ability to use AppKit because `NSText` has a `-subscript:` action.\r\n\r\nIssue: SR-5513 | rdar://problem/33413614\r\n\r\nRisk: Low, targeted bug fix\r\n\r\nTesting: Swift CI, example from Jira",
      "score": 1.7257042
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11090",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11090/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11090/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11090/events",
      "html_url": "https://github.com/apple/swift/pull/11090",
      "id": 244520854,
      "number": 11090,
      "title": "Sema: Avoid asking for the SecondType of Constraints that don't have them.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-20T23:05:16Z",
      "updated_at": "2017-07-21T00:20:14Z",
      "closed_at": "2017-07-21T00:20:14Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11090",
        "html_url": "https://github.com/apple/swift/pull/11090",
        "diff_url": "https://github.com/apple/swift/pull/11090.diff",
        "patch_url": "https://github.com/apple/swift/pull/11090.patch"
      },
      "body": "Assertions tripped while trying to reproduce SR-5513.",
      "score": 1.7247027
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11091",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11091/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11091/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11091/events",
      "html_url": "https://github.com/apple/swift/pull/11091",
      "id": 244526179,
      "number": 11091,
      "title": "[SR-5498] swift-api-digester: More strict conditions when detecting member hoist API changes. ",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-20T23:39:31Z",
      "updated_at": "2017-07-21T00:07:07Z",
      "closed_at": "2017-07-21T00:07:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11091",
        "html_url": "https://github.com/apple/swift/pull/11091",
        "diff_url": "https://github.com/apple/swift/pull/11091.diff",
        "patch_url": "https://github.com/apple/swift/pull/11091.patch"
      },
      "body": "We observed several false positives of function hoist API changes. This patch\r\nstrictly checks the new module doesn't contain a declaration with the\r\nidentical name of the old function before hoisting to eliminate such\r\nfalse positives.\r\n\r\nThis case is too complex to come up with an actual test case.",
      "score": 1.7249563
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11094",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11094/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11094/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11094/events",
      "html_url": "https://github.com/apple/swift/pull/11094",
      "id": 244532299,
      "number": 11094,
      "title": "[4.0] [ConstraintSolver] NFC: Add option to control early termination of shrinking phase",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-21T00:23:52Z",
      "updated_at": "2017-07-21T06:06:21Z",
      "closed_at": "2017-07-21T06:06:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11094",
        "html_url": "https://github.com/apple/swift/pull/11094",
        "diff_url": "https://github.com/apple/swift/pull/11094.diff",
        "patch_url": "https://github.com/apple/swift/pull/11094.patch"
      },
      "body": "* Description: Currently we have a number of unsolved disjunctions hard-coded to 5,\r\nwhich breaks some existing code by terminating shrinking too early.\r\nThis patch makes it a command-line option so users have control over\r\nwhat that threshold can be.\r\n\r\n* Origination: Check added for the shrinking phase of the solver is sometimes too aggressive.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: Updated related tests, Swift CI.\r\n\r\n* Reviewed by: Mark Lacey.\r\n\r\n* Resolves: rdar://problem/33433595\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.7272388
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11095",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11095/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11095/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11095/events",
      "html_url": "https://github.com/apple/swift/pull/11095",
      "id": 244534441,
      "number": 11095,
      "title": "Add frontend flag to serialize Syntax tree",
      "user": {
        "login": "harlanhaskins",
        "id": 853032,
        "avatar_url": "https://avatars1.githubusercontent.com/u/853032?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harlanhaskins",
        "html_url": "https://github.com/harlanhaskins",
        "followers_url": "https://api.github.com/users/harlanhaskins/followers",
        "following_url": "https://api.github.com/users/harlanhaskins/following{/other_user}",
        "gists_url": "https://api.github.com/users/harlanhaskins/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/harlanhaskins/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/harlanhaskins/subscriptions",
        "organizations_url": "https://api.github.com/users/harlanhaskins/orgs",
        "repos_url": "https://api.github.com/users/harlanhaskins/repos",
        "events_url": "https://api.github.com/users/harlanhaskins/events{/privacy}",
        "received_events_url": "https://api.github.com/users/harlanhaskins/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-21T00:41:35Z",
      "updated_at": "2017-07-21T21:23:58Z",
      "closed_at": "2017-07-21T21:23:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11095",
        "html_url": "https://github.com/apple/swift/pull/11095",
        "diff_url": "https://github.com/apple/swift/pull/11095.diff",
        "patch_url": "https://github.com/apple/swift/pull/11095.patch"
      },
      "body": "This patch adds a hidden frontend flag to serialize the libSyntax tree to JSON and print it to stdout. ",
      "score": 1.7321879
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11096",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11096/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11096/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11096/events",
      "html_url": "https://github.com/apple/swift/pull/11096",
      "id": 244631089,
      "number": 11096,
      "title": "[QoI] Ignore implicit conversions during mutation diagnostics",
      "user": {
        "login": "davezarzycki",
        "id": 1071982,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1071982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davezarzycki",
        "html_url": "https://github.com/davezarzycki",
        "followers_url": "https://api.github.com/users/davezarzycki/followers",
        "following_url": "https://api.github.com/users/davezarzycki/following{/other_user}",
        "gists_url": "https://api.github.com/users/davezarzycki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davezarzycki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davezarzycki/subscriptions",
        "organizations_url": "https://api.github.com/users/davezarzycki/orgs",
        "repos_url": "https://api.github.com/users/davezarzycki/repos",
        "events_url": "https://api.github.com/users/davezarzycki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davezarzycki/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-21T10:35:32Z",
      "updated_at": "2017-07-22T05:27:59Z",
      "closed_at": "2017-07-21T20:36:45Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11096",
        "html_url": "https://github.com/apple/swift/pull/11096",
        "diff_url": "https://github.com/apple/swift/pull/11096.diff",
        "patch_url": "https://github.com/apple/swift/pull/11096.patch"
      },
      "body": "This change helps diagnoseSubElementFailure() avoid the unknown error\r\npath in more scenarios.\r\n\r\n@swift-ci Please smoke test",
      "score": 1.7375436
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11097",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11097/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11097/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11097/events",
      "html_url": "https://github.com/apple/swift/pull/11097",
      "id": 244631240,
      "number": 11097,
      "title": "[Sema] NFC: Remove dead code",
      "user": {
        "login": "davezarzycki",
        "id": 1071982,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1071982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davezarzycki",
        "html_url": "https://github.com/davezarzycki",
        "followers_url": "https://api.github.com/users/davezarzycki/followers",
        "following_url": "https://api.github.com/users/davezarzycki/following{/other_user}",
        "gists_url": "https://api.github.com/users/davezarzycki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davezarzycki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davezarzycki/subscriptions",
        "organizations_url": "https://api.github.com/users/davezarzycki/orgs",
        "repos_url": "https://api.github.com/users/davezarzycki/repos",
        "events_url": "https://api.github.com/users/davezarzycki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davezarzycki/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-21T10:36:07Z",
      "updated_at": "2017-07-22T05:27:59Z",
      "closed_at": "2017-07-21T20:17:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11097",
        "html_url": "https://github.com/apple/swift/pull/11097",
        "diff_url": "https://github.com/apple/swift/pull/11097.diff",
        "patch_url": "https://github.com/apple/swift/pull/11097.patch"
      },
      "body": "ReferenceStorageTypes are handled elsewhere.\r\n\r\n@swift-ci Please smoke test",
      "score": 1.737448
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11098",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11098/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11098/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11098/events",
      "html_url": "https://github.com/apple/swift/pull/11098",
      "id": 244653734,
      "number": 11098,
      "title": "[CMake] Infer -Werror=switch via asserts being enabled",
      "user": {
        "login": "davezarzycki",
        "id": 1071982,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1071982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davezarzycki",
        "html_url": "https://github.com/davezarzycki",
        "followers_url": "https://api.github.com/users/davezarzycki/followers",
        "following_url": "https://api.github.com/users/davezarzycki/following{/other_user}",
        "gists_url": "https://api.github.com/users/davezarzycki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/davezarzycki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/davezarzycki/subscriptions",
        "organizations_url": "https://api.github.com/users/davezarzycki/orgs",
        "repos_url": "https://api.github.com/users/davezarzycki/repos",
        "events_url": "https://api.github.com/users/davezarzycki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/davezarzycki/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 15,
      "created_at": "2017-07-21T12:26:08Z",
      "updated_at": "2017-08-01T17:38:29Z",
      "closed_at": "2017-08-01T16:23:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11098",
        "html_url": "https://github.com/apple/swift/pull/11098",
        "diff_url": "https://github.com/apple/swift/pull/11098.diff",
        "patch_url": "https://github.com/apple/swift/pull/11098.patch"
      },
      "body": "LLVM-style projects like Swift make heavy use of switch statements and\r\ntherefore -Werror=switch is very useful during feature development. That\r\nbeing said, if asserts are disabled, then you're probably not actively\r\nhacking on the project and -Werror (or warnings in general) aren't\r\nhelpful.\r\n\r\n@swift-ci Please smoke test",
      "score": 1.8242097
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11100",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11100/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11100/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11100/events",
      "html_url": "https://github.com/apple/swift/pull/11100",
      "id": 244740749,
      "number": 11100,
      "title": "Rename encodeWeak to encodeConditional",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-21T17:57:04Z",
      "updated_at": "2017-07-21T20:37:57Z",
      "closed_at": "2017-07-21T20:37:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11100",
        "html_url": "https://github.com/apple/swift/pull/11100",
        "diff_url": "https://github.com/apple/swift/pull/11100.diff",
        "patch_url": "https://github.com/apple/swift/pull/11100.patch"
      },
      "body": "**What's in this pull request?**\r\nAs laid out in a [proposed update to SE-0166 and SE-0167](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170619/037672.html), there are changes to reference semantics that we want to introduce to the Codable API. This renames `encodeWeak` to `encodeConditional`.\r\n\r\nThis shouldn't be a breaking change for any internal APIs here or require changes to swift-corelibs-foundation because `encodeConditional` is given a default implementation.",
      "score": 1.7417386
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11101",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11101/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11101/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11101/events",
      "html_url": "https://github.com/apple/swift/pull/11101",
      "id": 244745871,
      "number": 11101,
      "title": "StackPromotion: a big simplification of the algorithm",
      "user": {
        "login": "eeckstein",
        "id": 15270291,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eeckstein",
        "html_url": "https://github.com/eeckstein",
        "followers_url": "https://api.github.com/users/eeckstein/followers",
        "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
        "organizations_url": "https://api.github.com/users/eeckstein/orgs",
        "repos_url": "https://api.github.com/users/eeckstein/repos",
        "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eeckstein/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-21T18:18:50Z",
      "updated_at": "2017-07-21T22:44:21Z",
      "closed_at": "2017-07-21T21:56:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11101",
        "html_url": "https://github.com/apple/swift/pull/11101",
        "diff_url": "https://github.com/apple/swift/pull/11101.diff",
        "patch_url": "https://github.com/apple/swift/pull/11101.patch"
      },
      "body": "Instead of having the complicated logic of finding the end of an object's lifetime we now use the existing ValueLifetimeAnalysis and StackNesting tools.\r\nThis simplifies the implementation a lot and does not use dominator and post-dominator trees anymore.\r\n\r\nIt's not a NFC because the way how to ensure proper nesting of stack allocations is now different.\r\nTo correct the stack nesting, the deallocations are moved down (instead of moving the allocations up).\r\nAlso it's now required that there is a final release for the allocation on all paths (which was not the case in some hand-written SIL tests).\r\nBut there are no significant effects on the benchmark performance and code size.\r\n\r\nIn addition, computation of dead-end blocks and escape analysis are now only done on demand. This saves compile time in case a function has no alloc_refs at all.\r\n",
      "score": 1.7423575
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11102",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11102/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11102/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11102/events",
      "html_url": "https://github.com/apple/swift/pull/11102",
      "id": 244755967,
      "number": 11102,
      "title": "Disable some tests this time for real.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-21T19:01:12Z",
      "updated_at": "2017-07-21T21:09:24Z",
      "closed_at": "2017-07-21T21:09:22Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11102",
        "html_url": "https://github.com/apple/swift/pull/11102",
        "diff_url": "https://github.com/apple/swift/pull/11102.diff",
        "patch_url": "https://github.com/apple/swift/pull/11102.patch"
      },
      "body": "rdar://33358110",
      "score": 1.7425132
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11103",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11103/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11103/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11103/events",
      "html_url": "https://github.com/apple/swift/pull/11103",
      "id": 244778360,
      "number": 11103,
      "title": "[4.0] Rename encodeWeak to encodeConditional",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-21T20:41:55Z",
      "updated_at": "2017-07-21T23:08:48Z",
      "closed_at": "2017-07-21T23:08:13Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11103",
        "html_url": "https://github.com/apple/swift/pull/11103",
        "diff_url": "https://github.com/apple/swift/pull/11103.diff",
        "patch_url": "https://github.com/apple/swift/pull/11103.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #11000 to `swift-4.0-branch`.\r\n\r\n**Explanation:** As laid out in a [proposed update to SE-0166 and SE-0167](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170619/037672.html), there are changes to reference semantics that we want to introduce to the Codable API. This renames `encodeWeak` to `encodeConditional`.\r\n\r\nThis shouldn't be a breaking change for any internal APIs here or require changes to swift-corelibs-foundation because `encodeConditional` is given a default implementation.\r\n**Scope:** Affects those implementing and using the new Codable protocols.\r\n**Radar:** rdar://problem/33456260\r\n**Risk:** Low\r\n**Testing:** Manual verification; the method has a default implementation",
      "score": 1.7440937
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11104",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11104/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11104/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11104/events",
      "html_url": "https://github.com/apple/swift/pull/11104",
      "id": 244779097,
      "number": 11104,
      "title": "Be a little more permissive in emoji grapheme literals.",
      "user": {
        "login": "milseman",
        "id": 235334,
        "avatar_url": "https://avatars0.githubusercontent.com/u/235334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/milseman",
        "html_url": "https://github.com/milseman",
        "followers_url": "https://api.github.com/users/milseman/followers",
        "following_url": "https://api.github.com/users/milseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/milseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/milseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/milseman/subscriptions",
        "organizations_url": "https://api.github.com/users/milseman/orgs",
        "repos_url": "https://api.github.com/users/milseman/repos",
        "events_url": "https://api.github.com/users/milseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/milseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-21T20:45:14Z",
      "updated_at": "2017-07-26T19:49:47Z",
      "closed_at": "2017-07-24T19:34:52Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11104",
        "html_url": "https://github.com/apple/swift/pull/11104",
        "diff_url": "https://github.com/apple/swift/pull/11104.diff",
        "patch_url": "https://github.com/apple/swift/pull/11104.patch"
      },
      "body": "The user experience with extended grapheme literals is currently:\r\n\r\n1. Strict: we hard error on \"invalid\" grapheme literals.\r\n\r\n2. Complete: we validate all literals to either be\r\nknown-single-grapheme or not.\r\n\r\n3. Incorrect: we have Unicode 8 semantics implemented but applications\r\nwill have some other version of Unicode as dictated by the OS they are\r\nrunning on.\r\n\r\nIn Swift 4.0, this incorrectness mostly crops up in obscure corner\r\ncase areas, where we are overly restrictive in some ways and overly\r\nrelaxed in others. But, there is one particularly embarrassing area\r\nwhere it does come up: we reject emoji introduced after Unicode 8 as\r\ngrapheme literals, counter to common user expectations.\r\n\r\nIn a future (sub-)version of Swift we should completely re-evaluate\r\nthis user story, but doing so in time for Swift 4.0 is untenable. This\r\npatch attempts to tweak the way in which we are incorrect in the most\r\nminimally invasive way possible to preserve the same user experience\r\nwhile permitting many post-Unicode-8 emoji as valid grapheme literals.\r\n\r\nThis change overrides processing of ZWJ and emoji modifiers to not\r\ndeclare a grapheme break after/before, respectively.\r\n\r\n<!-- What's in this pull request? -->\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves [SR-4546](https://bugs.swift.org/browse/SR-4546).\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->",
      "score": 1.7658564
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11105",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11105/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11105/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11105/events",
      "html_url": "https://github.com/apple/swift/pull/11105",
      "id": 244782696,
      "number": 11105,
      "title": "[4.0] Be a little more permissive in emoji grapheme literals.",
      "user": {
        "login": "milseman",
        "id": 235334,
        "avatar_url": "https://avatars0.githubusercontent.com/u/235334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/milseman",
        "html_url": "https://github.com/milseman",
        "followers_url": "https://api.github.com/users/milseman/followers",
        "following_url": "https://api.github.com/users/milseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/milseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/milseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/milseman/subscriptions",
        "organizations_url": "https://api.github.com/users/milseman/orgs",
        "repos_url": "https://api.github.com/users/milseman/repos",
        "events_url": "https://api.github.com/users/milseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/milseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "tkremenek",
        "id": 3087023,
        "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tkremenek",
        "html_url": "https://github.com/tkremenek",
        "followers_url": "https://api.github.com/users/tkremenek/followers",
        "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
        "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
        "organizations_url": "https://api.github.com/users/tkremenek/orgs",
        "repos_url": "https://api.github.com/users/tkremenek/repos",
        "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tkremenek/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "tkremenek",
          "id": 3087023,
          "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tkremenek",
          "html_url": "https://github.com/tkremenek",
          "followers_url": "https://api.github.com/users/tkremenek/followers",
          "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
          "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
          "organizations_url": "https://api.github.com/users/tkremenek/orgs",
          "repos_url": "https://api.github.com/users/tkremenek/repos",
          "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tkremenek/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-21T21:02:07Z",
      "updated_at": "2017-07-26T19:49:44Z",
      "closed_at": "2017-07-26T00:57:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11105",
        "html_url": "https://github.com/apple/swift/pull/11105",
        "diff_url": "https://github.com/apple/swift/pull/11105.diff",
        "patch_url": "https://github.com/apple/swift/pull/11105.patch"
      },
      "body": "(This is a 4.0 cherry-pick of https://github.com/apple/swift/pull/11104)\r\n\r\nCCC:\r\n* Explanation: While Swift 4.0 supports emoji newer than Unicode 8, the compiler’s grapheme literal validation does not. This tries the most minimally invasive change to allow the compiler to support newer emoji while not affecting the overall user model.\r\n* Scope: Limited to complex graphemes containing a ZWJ or emoji modifier in them.\r\n* Radar (and possibly SR Issue): https://bugs.swift.org/browse/SR-4546\r\n* Risk: Very low. Biggest risk is that we might permit a grapheme literal in obscure corner cases that’s not really a single grapheme at runtime. Note that this is already the case due to Unicode 8 allowing arbitrary strings of regional indicators as graphemes, but Unicode 9 and later doesn’t.\r\n* Testing: Full CI validation\r\n\r\n----\r\n\r\nFrom the master PR:\r\nThe user experience with extended grapheme literals is currently:\r\n\r\n1. Strict: we hard error on \"invalid\" grapheme literals.\r\n\r\n2. Complete: we validate all literals to either be\r\nknown-single-grapheme or not.\r\n\r\n3. Incorrect: we have Unicode 8 semantics implemented but applications\r\nwill have some other version of Unicode as dictated by the OS they are\r\nrunning on.\r\n\r\nIn Swift 4.0, this incorrectness mostly crops up in obscure corner\r\ncase areas, where we are overly restrictive in some ways and overly\r\nrelaxed in others. But, there is one particularly embarrassing area\r\nwhere it does come up: we reject emoji introduced after Unicode 8 as\r\ngrapheme literals, counter to common user expectations.\r\n\r\nIn a future (sub-)version of Swift we should completely re-evaluate\r\nthis user story, but doing so in time for Swift 4.0 is untenable. This\r\npatch attempts to tweak the way in which we are incorrect in the most\r\nminimally invasive way possible to preserve the same user experience\r\nwhile permitting many post-Unicode-8 emoji as valid grapheme literals.\r\n\r\nThis change overrides processing of ZWJ and emoji modifiers to not\r\ndeclare a grapheme break after/before, respectively.\r\n\r\n<!-- What's in this pull request? -->\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves [SR-4546](https://bugs.swift.org/browse/SR-4546).\r\n\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.7755015
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11106",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11106/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11106/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11106/events",
      "html_url": "https://github.com/apple/swift/pull/11106",
      "id": 244792858,
      "number": 11106,
      "title": "[RangeInfo] Using the underlying token array reference to represent the content of a range under selection.",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-21T21:56:10Z",
      "updated_at": "2017-07-21T23:19:26Z",
      "closed_at": "2017-07-21T23:19:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11106",
        "html_url": "https://github.com/apple/swift/pull/11106",
        "diff_url": "https://github.com/apple/swift/pull/11106.diff",
        "patch_url": "https://github.com/apple/swift/pull/11106.patch"
      },
      "body": "Comparing to CharSourceRange, token stream is a better way because we can preserve comment information at the start of the range.\r\n\r\nNeeded for rdar://33437855",
      "score": 1.7448602
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11107",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11107/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11107/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11107/events",
      "html_url": "https://github.com/apple/swift/pull/11107",
      "id": 244801553,
      "number": 11107,
      "title": "SILGen: The allocator entry point for an initializer is never `dynamic`.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-21T22:54:47Z",
      "updated_at": "2017-07-24T17:53:20Z",
      "closed_at": "2017-07-22T03:13:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11107",
        "html_url": "https://github.com/apple/swift/pull/11107",
        "diff_url": "https://github.com/apple/swift/pull/11107.diff",
        "patch_url": "https://github.com/apple/swift/pull/11107.patch"
      },
      "body": "The allocating thunk handles the `dynamic`-ness of the initializing entry point, which maps to an underlying `-initWith*:` ObjC method, and cannot itself be treated as `dynamic`. Fixes SR-5223 | rdar://problem/32778104.",
      "score": 1.7665484
    }
  ]
}

