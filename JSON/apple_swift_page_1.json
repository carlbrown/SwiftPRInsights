{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/7188",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/7188/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/7188/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/7188/events",
      "html_url": "https://github.com/apple/swift/pull/7188",
      "id": 204671150,
      "number": 7188,
      "title": "fix SR-3819: add -ldl to static executables (almost certainly needed …",
      "user": {
        "login": "weissi",
        "id": 624238,
        "avatar_url": "https://avatars2.githubusercontent.com/u/624238?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/weissi",
        "html_url": "https://github.com/weissi",
        "followers_url": "https://api.github.com/users/weissi/followers",
        "following_url": "https://api.github.com/users/weissi/following{/other_user}",
        "gists_url": "https://api.github.com/users/weissi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/weissi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/weissi/subscriptions",
        "organizations_url": "https://api.github.com/users/weissi/orgs",
        "repos_url": "https://api.github.com/users/weissi/repos",
        "events_url": "https://api.github.com/users/weissi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/weissi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 19,
      "created_at": "2017-02-01T18:50:36Z",
      "updated_at": "2017-07-18T19:42:23Z",
      "closed_at": "2017-07-18T19:42:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/7188",
        "html_url": "https://github.com/apple/swift/pull/7188",
        "diff_url": "https://github.com/apple/swift/pull/7188.diff",
        "patch_url": "https://github.com/apple/swift/pull/7188.patch"
      },
      "body": "…by ICU)\r\n\r\nResolves [SR-3819](https://bugs.swift.org/browse/SR-3819). ICU compiled in default mode (without `--disable-dyload`) needs to be linked with `-ldl` as it needs `dl{open,close,sym}` (even in its static version `libdl.a`). This adds `-ldl` to the linker flags for static executables.",
      "score": 0.93951404
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/8354",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/8354/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/8354/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/8354/events",
      "html_url": "https://github.com/apple/swift/pull/8354",
      "id": 217070470,
      "number": 8354,
      "title": "[stdlib] 0-ary tuples should be equatable",
      "user": {
        "login": "anayini",
        "id": 712215,
        "avatar_url": "https://avatars0.githubusercontent.com/u/712215?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/anayini",
        "html_url": "https://github.com/anayini",
        "followers_url": "https://api.github.com/users/anayini/followers",
        "following_url": "https://api.github.com/users/anayini/following{/other_user}",
        "gists_url": "https://api.github.com/users/anayini/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/anayini/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anayini/subscriptions",
        "organizations_url": "https://api.github.com/users/anayini/orgs",
        "repos_url": "https://api.github.com/users/anayini/repos",
        "events_url": "https://api.github.com/users/anayini/events{/privacy}",
        "received_events_url": "https://api.github.com/users/anayini/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 32,
      "created_at": "2017-03-26T17:45:10Z",
      "updated_at": "2017-07-12T23:13:19Z",
      "closed_at": "2017-07-12T23:12:52Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/8354",
        "html_url": "https://github.com/apple/swift/pull/8354",
        "diff_url": "https://github.com/apple/swift/pull/8354.diff",
        "patch_url": "https://github.com/apple/swift/pull/8354.patch"
      },
      "body": "Add an == method for comparing two empty tuples.\r\n\r\nResolves: SR-4172 (https://bugs.swift.org/browse/SR-4172)\r\n\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 0.96770436
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/9605",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/9605/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/9605/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/9605/events",
      "html_url": "https://github.com/apple/swift/pull/9605",
      "id": 228610289,
      "number": 9605,
      "title": "[stdlib] Fixed image inspection for Win32",
      "user": {
        "login": "tinysun212",
        "id": 12603793,
        "avatar_url": "https://avatars0.githubusercontent.com/u/12603793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tinysun212",
        "html_url": "https://github.com/tinysun212",
        "followers_url": "https://api.github.com/users/tinysun212/followers",
        "following_url": "https://api.github.com/users/tinysun212/following{/other_user}",
        "gists_url": "https://api.github.com/users/tinysun212/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tinysun212/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tinysun212/subscriptions",
        "organizations_url": "https://api.github.com/users/tinysun212/orgs",
        "repos_url": "https://api.github.com/users/tinysun212/repos",
        "events_url": "https://api.github.com/users/tinysun212/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tinysun212/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-05-15T05:35:31Z",
      "updated_at": "2017-07-12T21:44:19Z",
      "closed_at": "2017-07-12T21:44:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/9605",
        "html_url": "https://github.com/apple/swift/pull/9605",
        "diff_url": "https://github.com/apple/swift/pull/9605.diff",
        "patch_url": "https://github.com/apple/swift/pull/9605.patch"
      },
      "body": "Removed calling FreeLibrary().\r\nSee GetModuleHandle function in MSDN.\r\n",
      "score": 1.1193002
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/9647",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/9647/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/9647/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/9647/events",
      "html_url": "https://github.com/apple/swift/pull/9647",
      "id": 229075242,
      "number": 9647,
      "title": "Set default CPU for s390x to support conversion between unsigned inte…",
      "user": {
        "login": "vivkong",
        "id": 18469525,
        "avatar_url": "https://avatars1.githubusercontent.com/u/18469525?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vivkong",
        "html_url": "https://github.com/vivkong",
        "followers_url": "https://api.github.com/users/vivkong/followers",
        "following_url": "https://api.github.com/users/vivkong/following{/other_user}",
        "gists_url": "https://api.github.com/users/vivkong/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vivkong/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vivkong/subscriptions",
        "organizations_url": "https://api.github.com/users/vivkong/orgs",
        "repos_url": "https://api.github.com/users/vivkong/repos",
        "events_url": "https://api.github.com/users/vivkong/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vivkong/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "jrose-apple",
          "id": 15097531,
          "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jrose-apple",
          "html_url": "https://github.com/jrose-apple",
          "followers_url": "https://api.github.com/users/jrose-apple/followers",
          "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
          "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
          "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
          "repos_url": "https://api.github.com/users/jrose-apple/repos",
          "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-05-16T15:30:02Z",
      "updated_at": "2017-07-14T12:28:26Z",
      "closed_at": "2017-07-13T18:20:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/9647",
        "html_url": "https://github.com/apple/swift/pull/9647",
        "diff_url": "https://github.com/apple/swift/pull/9647.diff",
        "patch_url": "https://github.com/apple/swift/pull/9647.patch"
      },
      "body": "…gers and floating point numbers\r\n\r\nOn System z, instructions for conversion between unsigned integers and floating point numbers was added in z196. We want to have this support by the default on Swift.\r\n\r\nThe missing support was exposed by the test swift/validation-test/stdlib/FixedPointConversion.swift.gyb. With this change, the test case passes on s390x.\r\n\r\nThe `-target-cpu` option is issuing the incorrect Clang option as I got this error:\r\n```\r\n> swiftc -target-cpu z196 testFloatingPoint.swift\r\n<unknown>:0: warning: argument unused during compilation: '-mcpu=z196'\r\n```\r\nI have changed `-mcpu` to `-march`  in this PR.  From Clang's man page:\r\n```\r\n-arch <architecture>\r\n              Specify the architecture to build for.\r\n-march=<cpu>\r\n              Specify that Clang should generate code for a specific processor family member and later.  For example, if you specify -march=i486, the compiler is allowed to generate instructions that are valid on  i486  and  later\r\n              processors, but which may not exist on earlier ones.\r\n```\r\n\r\nThis is the fix for master - content is the same as #9645.\r\n",
      "score": 1.131781
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/9806",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/9806/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/9806/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/9806/events",
      "html_url": "https://github.com/apple/swift/pull/9806",
      "id": 230164798,
      "number": 9806,
      "title": "[stdlib] String index interchange, etc.",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 89,
      "created_at": "2017-05-20T16:42:36Z",
      "updated_at": "2017-07-07T19:00:24Z",
      "closed_at": "2017-07-07T16:04:12Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/9806",
        "html_url": "https://github.com/apple/swift/pull/9806",
        "diff_url": "https://github.com/apple/swift/pull/9806.diff",
        "patch_url": "https://github.com/apple/swift/pull/9806.patch"
      },
      "body": "",
      "score": 1.1091846
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/9958",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/9958/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/9958/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/9958/events",
      "html_url": "https://github.com/apple/swift/pull/9958",
      "id": 231805957,
      "number": 9958,
      "title": "SR-648: Allow swiftpm to statically link binaries on Linux",
      "user": {
        "login": "spevans",
        "id": 1093011,
        "avatar_url": "https://avatars2.githubusercontent.com/u/1093011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/spevans",
        "html_url": "https://github.com/spevans",
        "followers_url": "https://api.github.com/users/spevans/followers",
        "following_url": "https://api.github.com/users/spevans/following{/other_user}",
        "gists_url": "https://api.github.com/users/spevans/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/spevans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/spevans/subscriptions",
        "organizations_url": "https://api.github.com/users/spevans/orgs",
        "repos_url": "https://api.github.com/users/spevans/repos",
        "events_url": "https://api.github.com/users/spevans/events{/privacy}",
        "received_events_url": "https://api.github.com/users/spevans/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 20,
      "created_at": "2017-05-27T14:50:37Z",
      "updated_at": "2017-07-19T21:06:33Z",
      "closed_at": "2017-07-19T19:52:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/9958",
        "html_url": "https://github.com/apple/swift/pull/9958",
        "diff_url": "https://github.com/apple/swift/pull/9958.diff",
        "patch_url": "https://github.com/apple/swift/pull/9958.patch"
      },
      "body": "This PR requires https://github.com/apple/swift-corelibs-foundation/pull/1011 and \r\nhttps://github.com/apple/swift-corelibs-xctest/pull/190 to be merged beforehand.\r\n\r\n- If --build-swift-static-stdlib option is used then also produce\r\n  static versions of libXCTest.a and libdispatch.a and put them\r\n  into the lib/swift_static/linux/ toolchain directory.\r\n  libFoundation.a is already being built and deployed there.\r\n\r\n- Binaries with the swift libs statically linked in can then be\r\n  built with using the command:\r\n\r\n  swift build -Xswiftc -static-stdlib -Xlinker -lcurl -Xlinker -lxml2 -Xlinker -lbsd -Xlinker --allow-multiple-definition\r\n\r\n  Note: This is a dynamic binary with the libswiftCore,  libFoundation and libdispatch libraries statically linked in.\r\n\r\n- Further fixes should reduce the complexity of the above command.\r\n\r\nThere arent any unit tests in this PR, however I will add a followup one which builds a static version of TestFoundation to test xctest, libdispatch and libfoundation together.\r\n\r\n\r\n",
      "score": 1.2312393
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/9989",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/9989/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/9989/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/9989/events",
      "html_url": "https://github.com/apple/swift/pull/9989",
      "id": 232381603,
      "number": 9989,
      "title": "Introduce special decl names",
      "user": {
        "login": "ahoppen",
        "id": 4062178,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4062178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ahoppen",
        "html_url": "https://github.com/ahoppen",
        "followers_url": "https://api.github.com/users/ahoppen/followers",
        "following_url": "https://api.github.com/users/ahoppen/following{/other_user}",
        "gists_url": "https://api.github.com/users/ahoppen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ahoppen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ahoppen/subscriptions",
        "organizations_url": "https://api.github.com/users/ahoppen/orgs",
        "repos_url": "https://api.github.com/users/ahoppen/repos",
        "events_url": "https://api.github.com/users/ahoppen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ahoppen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 14,
      "created_at": "2017-05-30T21:04:33Z",
      "updated_at": "2017-07-12T14:12:09Z",
      "closed_at": "2017-07-11T20:22:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/9989",
        "html_url": "https://github.com/apple/swift/pull/9989",
        "diff_url": "https://github.com/apple/swift/pull/9989.diff",
        "patch_url": "https://github.com/apple/swift/pull/9989.patch"
      },
      "body": "After a long way we're finally here: The PR to introduce special names for subscripts and fix SR-2575.\r\n\r\nSpecial DeclNames represent names that do not have an identifier in the surface language. This implies serializing the information about whether a name is special together with its identifier (if it is not special) in both the module file and the swift lookup table.",
      "score": 1.1921879
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10350",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10350/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10350/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10350/events",
      "html_url": "https://github.com/apple/swift/pull/10350",
      "id": 236641709,
      "number": 10350,
      "title": "Let CodingKey inherit CustomStringConvertible for better debugging",
      "user": {
        "login": "inamiy",
        "id": 138476,
        "avatar_url": "https://avatars2.githubusercontent.com/u/138476?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/inamiy",
        "html_url": "https://github.com/inamiy",
        "followers_url": "https://api.github.com/users/inamiy/followers",
        "following_url": "https://api.github.com/users/inamiy/following{/other_user}",
        "gists_url": "https://api.github.com/users/inamiy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/inamiy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/inamiy/subscriptions",
        "organizations_url": "https://api.github.com/users/inamiy/orgs",
        "repos_url": "https://api.github.com/users/inamiy/repos",
        "events_url": "https://api.github.com/users/inamiy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/inamiy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "itaiferber",
          "id": 33716,
          "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/itaiferber",
          "html_url": "https://github.com/itaiferber",
          "followers_url": "https://api.github.com/users/itaiferber/followers",
          "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
          "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
          "organizations_url": "https://api.github.com/users/itaiferber/orgs",
          "repos_url": "https://api.github.com/users/itaiferber/repos",
          "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
          "received_events_url": "https://api.github.com/users/itaiferber/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-17T06:00:53Z",
      "updated_at": "2017-07-21T17:45:33Z",
      "closed_at": "2017-07-20T22:19:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10350",
        "html_url": "https://github.com/apple/swift/pull/10350",
        "diff_url": "https://github.com/apple/swift/pull/10350.diff",
        "patch_url": "https://github.com/apple/swift/pull/10350.patch"
      },
      "body": "```swift\r\nstruct MyStruct: Codable {\r\n    let test: String\r\n}\r\n\r\nlet json = \"{}\".data(using: .utf8)!\r\n\r\ndo {\r\n    let decoder = JSONDecoder()\r\n    let decoded = try decoder.decode(MyStruct.self, from: json)\r\n    print(decoded)\r\n}\r\ncatch {\r\n    print(error)\r\n}\r\n```\r\n\r\n### Result\r\n\r\n```\r\nkeyNotFound(CodableDemo.MyStruct.(CodingKeys in _CCD964A2735AA22BDC9F8350D8585760).test, Swift.DecodingError.Context(codingPath: [Optional(CodableDemo.MyStruct.(CodingKeys in _CCD964A2735AA22BDC9F8350D8585760).test)], debugDescription: \"Key not found when expecting non-optional type String for coding key \\\"test\\\"\"))\r\n```\r\n\r\nCurrent `DecodingError` and `EncodingError` is hard to read when printing to the console, so I think `protocol CodingKey` should inherit `CustomStringConvertible` for better debugging.",
      "score": 1.3806645
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10376",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10376/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10376/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10376/events",
      "html_url": "https://github.com/apple/swift/pull/10376",
      "id": 236972884,
      "number": 10376,
      "title": "[overlay] Port Foundation String extensions to StringProtocol",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 24,
      "created_at": "2017-06-19T18:03:35Z",
      "updated_at": "2017-07-13T21:53:22Z",
      "closed_at": "2017-07-13T21:50:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10376",
        "html_url": "https://github.com/apple/swift/pull/10376",
        "diff_url": "https://github.com/apple/swift/pull/10376.diff",
        "patch_url": "https://github.com/apple/swift/pull/10376.patch"
      },
      "body": "\r\n",
      "score": 1.3434807
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10436",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10436/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10436/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10436/events",
      "html_url": "https://github.com/apple/swift/pull/10436",
      "id": 237399661,
      "number": 10436,
      "title": "Remove DeclContext walk from resolveTypeInContext()",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-21T02:44:46Z",
      "updated_at": "2017-07-19T08:10:56Z",
      "closed_at": "2017-07-19T08:10:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10436",
        "html_url": "https://github.com/apple/swift/pull/10436",
        "diff_url": "https://github.com/apple/swift/pull/10436.diff",
        "patch_url": "https://github.com/apple/swift/pull/10436.patch"
      },
      "body": "Unqualified name lookup starts from an innermost context and walks up through parent contexts until it finds a declaration with the given name. For example, consider something like this:\r\n\r\n```\r\nclass Base<T> {\r\n  typealias A = [T]\r\n}\r\n\r\nclass Derived : Base<Int> {\r\n  class Nested {\r\n    func foo() -> A { ... }\r\n  }\r\n}\r\n```\r\n\r\nThe lookup of 'A' inside 'Nested' finds the typealias 'A' inside 'Base<T>'. Since the lookup is done from a nested type of 'Derived', we have to use 'Base<Int>' as the base type to get the substitution `T := Int`.\r\n\r\nPreviously, we would find the base type by performing a walk over all parent contexts, checking their superclasses and adopted protocols until we found the nested type in question. This duplicates work already done by name lookup, and has the potential to go out of sync with the name lookup implementation.\r\n\r\nThe new implementation instead saves the DeclContext resulting from the name lookup, avoiding the walk altogether.",
      "score": 1.393734
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10488",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10488/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10488/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10488/events",
      "html_url": "https://github.com/apple/swift/pull/10488",
      "id": 237732781,
      "number": 10488,
      "title": "Switch over function input matching to use Params",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-22T05:04:50Z",
      "updated_at": "2017-07-12T01:32:38Z",
      "closed_at": "2017-07-12T01:32:36Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10488",
        "html_url": "https://github.com/apple/swift/pull/10488",
        "diff_url": "https://github.com/apple/swift/pull/10488.diff",
        "patch_url": "https://github.com/apple/swift/pull/10488.patch"
      },
      "body": "",
      "score": 1.3508333
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10513",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10513/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10513/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10513/events",
      "html_url": "https://github.com/apple/swift/pull/10513",
      "id": 237966782,
      "number": 10513,
      "title": "[Foundation] Add fast paths for Data initialization for common sequences",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-06-22T20:37:33Z",
      "updated_at": "2017-07-06T16:55:27Z",
      "closed_at": "2017-07-06T16:45:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10513",
        "html_url": "https://github.com/apple/swift/pull/10513",
        "diff_url": "https://github.com/apple/swift/pull/10513.diff",
        "patch_url": "https://github.com/apple/swift/pull/10513.patch"
      },
      "body": "There were some unfortunate slower than expected initializers on Data that were inherited from Collection adoption. This allows Data initialization to take the fast path in a select group of initializations; previously it would create a Data and then iterate byte by byte appending. Albeit that was relatively quick, we have faster options available.\r\n\r\nThis addresses the issue:\r\nrdar://problem/32359974",
      "score": 1.3199283
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10541",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10541/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10541/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10541/events",
      "html_url": "https://github.com/apple/swift/pull/10541",
      "id": 238249747,
      "number": 10541,
      "title": "[Markup] Print Tags in documentation comment XML",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-23T20:47:01Z",
      "updated_at": "2017-07-07T23:55:35Z",
      "closed_at": "2017-07-07T23:55:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10541",
        "html_url": "https://github.com/apple/swift/pull/10541",
        "diff_url": "https://github.com/apple/swift/pull/10541.diff",
        "patch_url": "https://github.com/apple/swift/pull/10541.patch"
      },
      "body": "This information needs to be picked up through SourceKit. It might be\r\nuseful as both metadata for sorting/filtering as well as presentation,\r\nso it makes sense to print it in the normal XML inside CommentParts.\r\n\r\nrdar://problem/32877771",
      "score": 1.337182
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10561",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10561/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10561/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10561/events",
      "html_url": "https://github.com/apple/swift/pull/10561",
      "id": 238286228,
      "number": 10561,
      "title": "[runtime] swift_getObjectType() must ignore KVO's artificial subclasses.",
      "user": {
        "login": "gparker42",
        "id": 992218,
        "avatar_url": "https://avatars2.githubusercontent.com/u/992218?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gparker42",
        "html_url": "https://github.com/gparker42",
        "followers_url": "https://api.github.com/users/gparker42/followers",
        "following_url": "https://api.github.com/users/gparker42/following{/other_user}",
        "gists_url": "https://api.github.com/users/gparker42/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gparker42/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gparker42/subscriptions",
        "organizations_url": "https://api.github.com/users/gparker42/orgs",
        "repos_url": "https://api.github.com/users/gparker42/repos",
        "events_url": "https://api.github.com/users/gparker42/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gparker42/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-24T01:54:08Z",
      "updated_at": "2017-07-28T18:17:15Z",
      "closed_at": "2017-07-13T03:37:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10561",
        "html_url": "https://github.com/apple/swift/pull/10561",
        "diff_url": "https://github.com/apple/swift/pull/10561.diff",
        "patch_url": "https://github.com/apple/swift/pull/10561.patch"
      },
      "body": "Fixes SR-4363 and <rdar://problem/31275541> ",
      "score": 1.4910396
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10595",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10595/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10595/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10595/events",
      "html_url": "https://github.com/apple/swift/pull/10595",
      "id": 238682814,
      "number": 10595,
      "title": "[Exclusivity] Relax closure enforcement on separate stored properties",
      "user": {
        "login": "devincoughlin",
        "id": 2623655,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2623655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devincoughlin",
        "html_url": "https://github.com/devincoughlin",
        "followers_url": "https://api.github.com/users/devincoughlin/followers",
        "following_url": "https://api.github.com/users/devincoughlin/following{/other_user}",
        "gists_url": "https://api.github.com/users/devincoughlin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devincoughlin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devincoughlin/subscriptions",
        "organizations_url": "https://api.github.com/users/devincoughlin/orgs",
        "repos_url": "https://api.github.com/users/devincoughlin/repos",
        "events_url": "https://api.github.com/users/devincoughlin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devincoughlin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-26T22:03:36Z",
      "updated_at": "2017-07-06T03:19:45Z",
      "closed_at": "2017-07-06T01:52:57Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10595",
        "html_url": "https://github.com/apple/swift/pull/10595",
        "diff_url": "https://github.com/apple/swift/pull/10595.diff",
        "patch_url": "https://github.com/apple/swift/pull/10595.patch"
      },
      "body": "Make the static enforcement of accesses in noescape closures stored-property\r\nsensitive. This will relax the existing enforcement so that the following is\r\nnot diagnosed:\r\n\r\nstruct MyStruct {\r\n   var x = X()\r\n   var y = Y()\r\n\r\n  mutating\r\n  func foo() {\r\n    x.mutatesAndTakesClosure() {\r\n      _ = y.read()\r\n   }\r\n  }\r\n}\r\n\r\nTo do this, update the access summary analysis to be stored-property sensitive.\r\n\r\nrdar://problem/32987932\r\n",
      "score": 1.35188
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10687",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10687/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10687/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10687/events",
      "html_url": "https://github.com/apple/swift/pull/10687",
      "id": 239314172,
      "number": 10687,
      "title": "[Foundation] slices of slices that use range expressions incorrectly calculated relative indexing",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-28T22:18:05Z",
      "updated_at": "2017-07-06T17:30:10Z",
      "closed_at": "2017-07-06T17:29:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10687",
        "html_url": "https://github.com/apple/swift/pull/10687",
        "diff_url": "https://github.com/apple/swift/pull/10687.diff",
        "patch_url": "https://github.com/apple/swift/pull/10687.patch"
      },
      "body": "The RangeExpression variants of slicing incorrectly passed 0..<R.Bounds.max which should be the slice region of the Data.\r\n\r\nThis resolves the issues:\r\nrdar://problem/32982494\r\nrdar://problem/32983214 aka [SR-5292]: Another Data slice-related crash\r\n\r\n\r\nExplanation:\r\nThe RangeExpression variants of slicing incorrectly passed 0..<R.Bounds.max which should be the slice region of the Data.\r\n\r\nScope:\r\nThis is validation of expectations of regions and appropriate slicing behavior for Data at runtime. No compile time or API changes were made here\r\n\r\nOrigination:\r\nFeedback provided via radars (and the original version of the proposal had this behavior as well…)\r\n\r\nRadar (and possibly SR Issue):\r\nrdar://problem/32982494\r\nrdar://problem/32983214 aka [SR-5292]: Another Data slice-related crash\r\n\r\nRisk:\r\nThis does have the risk involved that it may catch inappropriate behavior in assertion enabled builds\r\n\r\nTesting:\r\nAdditional unit tests were added and passed on master\r\n",
      "score": 1.3743757
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10725",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10725/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10725/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10725/events",
      "html_url": "https://github.com/apple/swift/pull/10725",
      "id": 239856406,
      "number": 10725,
      "title": "[4.0] IRGen: Sort the target-features string",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T18:31:59Z",
      "updated_at": "2017-07-07T18:44:38Z",
      "closed_at": "2017-07-07T18:44:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10725",
        "html_url": "https://github.com/apple/swift/pull/10725",
        "diff_url": "https://github.com/apple/swift/pull/10725.diff",
        "patch_url": "https://github.com/apple/swift/pull/10725.patch"
      },
      "body": "Function merging will not identify two otherwise equivalent if the order of the target-features list differs.\r\n\r\n• Explanation: We perform an optimization that merge function bodies if they are determined to be indentical. This some times gets foiled today because the order of entries in the target features string is different leading to otherwise identical functions not to get merged. This means in WMO mode identical implementations of array operations don’t always get merged.\r\n\r\n• Scope of Issue: Code size impact. Identical functions don’t get merged.\r\n\r\n• Origination: Unknown.\r\n\r\n• Risk: Low. The order of the target features string should not affect many transformations in LLVM.\r\n\r\nrdar://33057710\r\n",
      "score": 1.3989798
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10727",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10727/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10727/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10727/events",
      "html_url": "https://github.com/apple/swift/pull/10727",
      "id": 239868592,
      "number": 10727,
      "title": "[4.0] GSB] Stop creating unresolved potential archetypes.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-06-30T19:27:15Z",
      "updated_at": "2017-07-08T16:08:22Z",
      "closed_at": "2017-07-08T16:08:14Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10727",
        "html_url": "https://github.com/apple/swift/pull/10727",
        "diff_url": "https://github.com/apple/swift/pull/10727.diff",
        "patch_url": "https://github.com/apple/swift/pull/10727.patch"
      },
      "body": "**Explanation**: Stop creating \"unresolved\" potential archetypes in the `GenericSignatureBuilder`, which eliminates an class of invalid states that led to crashes in the `GenericSignatureBuilder`.\r\n**Scope**: This change will affect all generic code. It will make us reject (rather than crash on) some invalid code (the awfully opaque SR-2796 crasher is one such example), provide better typo corrections for some invalid code using generics, but otherwise should not actually change the externally-visible behavior of any well-formed code.\r\n**Radar**: SR-2796 / rdar://problem/28544316\r\n**Risk**: Moderately low. It's a significant change to the `GenericSignatureBuilder`, which is where the risk comes from because it's so ubiquitous. On the other hand, the `GenericSignatureBuilder` is fairly well tested, and we've simplified the code considerably with this change, so I suspect it's less likely to actually fail in the real world after this change.\r\n**Testing**: Compiler regression tests.",
      "score": 1.4053454
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10740",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10740/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10740/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10740/events",
      "html_url": "https://github.com/apple/swift/pull/10740",
      "id": 239921468,
      "number": 10740,
      "title": "[stdlib] Correct UnsafeBufferPointer._copyContents",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-01T02:29:02Z",
      "updated_at": "2017-07-07T17:39:31Z",
      "closed_at": "2017-07-07T17:39:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10740",
        "html_url": "https://github.com/apple/swift/pull/10740",
        "diff_url": "https://github.com/apple/swift/pull/10740.diff",
        "patch_url": "https://github.com/apple/swift/pull/10740.patch"
      },
      "body": "The implementation imposed stricter requirements on its inputs than those allowed by Sequence\r\n",
      "score": 1.401895
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10741",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10741/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10741/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10741/events",
      "html_url": "https://github.com/apple/swift/pull/10741",
      "id": 239921494,
      "number": 10741,
      "title": "Handle generic computed properties in key paths.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-01T02:29:42Z",
      "updated_at": "2017-07-07T20:50:28Z",
      "closed_at": "2017-07-07T20:50:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10741",
        "html_url": "https://github.com/apple/swift/pull/10741",
        "diff_url": "https://github.com/apple/swift/pull/10741.diff",
        "patch_url": "https://github.com/apple/swift/pull/10741.patch"
      },
      "body": "rdar://problem/31768590",
      "score": 1.4027888
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10743",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10743/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10743/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10743/events",
      "html_url": "https://github.com/apple/swift/pull/10743",
      "id": 239927247,
      "number": 10743,
      "title": "[viewcfg] Reformulate, expand the docs on viewcfg.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-01T04:58:41Z",
      "updated_at": "2017-07-17T20:08:28Z",
      "closed_at": "2017-07-17T18:52:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10743",
        "html_url": "https://github.com/apple/swift/pull/10743",
        "diff_url": "https://github.com/apple/swift/pull/10743.diff",
        "patch_url": "https://github.com/apple/swift/pull/10743.patch"
      },
      "body": "Specifically, I tried to make it clearer that viewcfg does not rely on any type\r\ninformation or declarations (i.e. it can dump raw textual CFGs). This also means\r\nthat it can be used in an editor to dump CFGs at your cursor?!\r\n\r\nThanks Erik for showing me this!",
      "score": 1.4730852
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10744",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10744/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10744/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10744/events",
      "html_url": "https://github.com/apple/swift/pull/10744",
      "id": 239944327,
      "number": 10744,
      "title": "Diagnostic adjustment DeclBaseName -> Identifier",
      "user": {
        "login": "ahoppen",
        "id": 4062178,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4062178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ahoppen",
        "html_url": "https://github.com/ahoppen",
        "followers_url": "https://api.github.com/users/ahoppen/followers",
        "following_url": "https://api.github.com/users/ahoppen/following{/other_user}",
        "gists_url": "https://api.github.com/users/ahoppen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ahoppen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ahoppen/subscriptions",
        "organizations_url": "https://api.github.com/users/ahoppen/orgs",
        "repos_url": "https://api.github.com/users/ahoppen/repos",
        "events_url": "https://api.github.com/users/ahoppen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ahoppen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-01T11:38:59Z",
      "updated_at": "2017-07-12T14:12:14Z",
      "closed_at": "2017-07-06T11:26:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10744",
        "html_url": "https://github.com/apple/swift/pull/10744",
        "diff_url": "https://github.com/apple/swift/pull/10744.diff",
        "patch_url": "https://github.com/apple/swift/pull/10744.patch"
      },
      "body": "This addresses the outstanding change from https://github.com/apple/swift/pull/9976#pullrequestreview-43264141",
      "score": 1.3972409
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10745",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10745/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10745/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10745/events",
      "html_url": "https://github.com/apple/swift/pull/10745",
      "id": 239944350,
      "number": 10745,
      "title": "[Diag] Change function diagnostics to take a DeclName parameter",
      "user": {
        "login": "ahoppen",
        "id": 4062178,
        "avatar_url": "https://avatars3.githubusercontent.com/u/4062178?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ahoppen",
        "html_url": "https://github.com/ahoppen",
        "followers_url": "https://api.github.com/users/ahoppen/followers",
        "following_url": "https://api.github.com/users/ahoppen/following{/other_user}",
        "gists_url": "https://api.github.com/users/ahoppen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ahoppen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ahoppen/subscriptions",
        "organizations_url": "https://api.github.com/users/ahoppen/orgs",
        "repos_url": "https://api.github.com/users/ahoppen/repos",
        "events_url": "https://api.github.com/users/ahoppen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ahoppen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-01T11:39:45Z",
      "updated_at": "2017-07-12T14:12:30Z",
      "closed_at": "2017-07-06T11:26:57Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10745",
        "html_url": "https://github.com/apple/swift/pull/10745",
        "diff_url": "https://github.com/apple/swift/pull/10745.diff",
        "patch_url": "https://github.com/apple/swift/pull/10745.patch"
      },
      "body": "The second commit changes several diagnostic parameters from `Identifier` or `DeclBaseName` to `DeclName` so that they provide richer error messages that include the function's parameters. @jrose-apple and me composed the list of diagnostics to change during a WWDC lab.",
      "score": 1.3972477
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10766",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10766/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10766/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10766/events",
      "html_url": "https://github.com/apple/swift/pull/10766",
      "id": 240777058,
      "number": 10766,
      "title": "JSONEncoder conditional conformance workarounds",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2017-07-05T21:09:53Z",
      "updated_at": "2017-07-07T20:20:59Z",
      "closed_at": "2017-07-07T20:20:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10766",
        "html_url": "https://github.com/apple/swift/pull/10766",
        "diff_url": "https://github.com/apple/swift/pull/10766.diff",
        "patch_url": "https://github.com/apple/swift/pull/10766.patch"
      },
      "body": "**What's in this pull request?**\r\nAddresses [SR-5206](https://bugs.swift.org/browse/SR-5206) for `JSONEncoder` and `JSONDecoder`.\r\n\r\nOne of the limitations of not having conditional conformance at the moment is that the implementation of `init(from:)` and `encode(to:)` on types which require it is that failure to cast dependent types to `Encodable` or `Decodable` is a runtime failure. There is no way to statically guarantee that the wrapped type is `Encodable` or `Decodable`.\r\n\r\nAs such, in those implementations, at best we can directly call `(element as! Encodable).encode(to: encoder)`, or similar. However, this encodes the element directly into an encoder, without giving the encoder a chance to intercept the type. This is problematic for `JSONEncoder` because it cannot apply a strategy if it doesn't get to intercept the type.\r\n\r\nThis gives a temporary workaround for JSON strategies because of internal Foundation knowledge.",
      "score": 1.4510856
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10772",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10772/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10772/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10772/events",
      "html_url": "https://github.com/apple/swift/pull/10772",
      "id": 240794567,
      "number": 10772,
      "title": "Sema: Simplifying a KeyPathExpr's type should *bind* to the specific type, not accept a subtype constraint.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-05T22:31:22Z",
      "updated_at": "2017-07-06T04:05:34Z",
      "closed_at": "2017-07-06T04:05:34Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10772",
        "html_url": "https://github.com/apple/swift/pull/10772",
        "diff_url": "https://github.com/apple/swift/pull/10772.diff",
        "patch_url": "https://github.com/apple/swift/pull/10772.patch"
      },
      "body": "We want the type of a KeyPathExpr to be the specific *KeyPath<T, U> subclass appropriate for the literal, with upcasts to a more general contextual type, since we rely on that invariant elsewhere to extract the base and projected value types. Fixes SR-5008 | rdar://problem/32395076.",
      "score": 1.4405167
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10773",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10773/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10773/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10773/events",
      "html_url": "https://github.com/apple/swift/pull/10773",
      "id": 240795665,
      "number": 10773,
      "title": "[4.0] Sema: Simplifying a KeyPathExpr's type should *bind* to the specific type, not accept a subtype constraint.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 16,
      "created_at": "2017-07-05T22:37:22Z",
      "updated_at": "2017-07-09T18:19:09Z",
      "closed_at": "2017-07-09T18:19:09Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10773",
        "html_url": "https://github.com/apple/swift/pull/10773",
        "diff_url": "https://github.com/apple/swift/pull/10773.diff",
        "patch_url": "https://github.com/apple/swift/pull/10773.patch"
      },
      "body": "Explanation: The compiler would crash when a key path literal was used in an expression with `Any` or `AnyObject` contextual type.\r\n\r\nScope: Affects users trying to `print` key paths or use them in `Mirror`s.\r\n\r\nIssue: SR-5008 | rdar://problem/32395076.\r\n\r\nRisk: Low, only impacts key paths.\r\n\r\nTesting: Swift CI",
      "score": 1.4646674
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10774",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10774/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10774/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10774/events",
      "html_url": "https://github.com/apple/swift/pull/10774",
      "id": 240796331,
      "number": 10774,
      "title": "[Markup] Actually collect multiple - Tag fields",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-05T22:41:12Z",
      "updated_at": "2017-07-06T05:36:22Z",
      "closed_at": "2017-07-06T05:36:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10774",
        "html_url": "https://github.com/apple/swift/pull/10774",
        "diff_url": "https://github.com/apple/swift/pull/10774.diff",
        "patch_url": "https://github.com/apple/swift/pull/10774.patch"
      },
      "body": "This was erasing the set of tags each time a - Tag simple field\r\nwas encountered.\r\n\r\nrdar://problem/32877771",
      "score": 1.4410053
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10775",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10775/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10775/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10775/events",
      "html_url": "https://github.com/apple/swift/pull/10775",
      "id": 240800735,
      "number": 10775,
      "title": "Hack: allow dropping noescape-ness when overriding ObjC methods",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-05T23:08:42Z",
      "updated_at": "2017-07-10T23:03:40Z",
      "closed_at": "2017-07-10T23:03:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10775",
        "html_url": "https://github.com/apple/swift/pull/10775",
        "diff_url": "https://github.com/apple/swift/pull/10775.diff",
        "patch_url": "https://github.com/apple/swift/pull/10775.patch"
      },
      "body": "In today's Swift, only non-optional function parameters can be non-escaping (and are by default). An optional function parameter uses a function type as a generic argument to Optional, and like any other generics that's considered an opaque and therefore possibly escaping use of the type. This is certainly unfortunate since it means a function parameter cannot be both Optional and non-escaping.\r\n\r\nHowever, this \"unfortunate\" becomes a concrete problem when dealing with Objective-C, which *does* allow applying its `noescape` attribute to a callback block marked `nullable`. This is fine for *uses* of methods with such parameters, but prevents anyone from *overriding* these methods.\r\n\r\nThis patch pokes a very narrow hole into the override checking to accomodate this: if a declaration comes from Objective-C, and it has an optional, non-escaping closure parameter, it's okay to override it in Swift with an optional, escaping closure parameter. This isn't strictly safe because a caller could be relying on the non-escaping-ness, but we don't have anything better for now. (This behavior will probably be deprecated in the future.)\r\n\r\n(Some people have noted that the old `noescape` type attribute in Swift still works, albeit with a warning. That's not something people should have to type, though—we want to remove it from the language, as described in [SE-0103](https://github.com/apple/swift-evolution/blob/master/proposals/0103-make-noescape-default.md).)\r\n\r\nrdar://problem/32903155",
      "score": 1.4730926
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10777",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10777/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10777/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10777/events",
      "html_url": "https://github.com/apple/swift/pull/10777",
      "id": 240805159,
      "number": 10777,
      "title": "SIL pass names. Allow command line options to specific the pass tag.",
      "user": {
        "login": "atrick",
        "id": 2165663,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2165663?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atrick",
        "html_url": "https://github.com/atrick",
        "followers_url": "https://api.github.com/users/atrick/followers",
        "following_url": "https://api.github.com/users/atrick/following{/other_user}",
        "gists_url": "https://api.github.com/users/atrick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atrick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atrick/subscriptions",
        "organizations_url": "https://api.github.com/users/atrick/orgs",
        "repos_url": "https://api.github.com/users/atrick/repos",
        "events_url": "https://api.github.com/users/atrick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atrick/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-07-05T23:39:36Z",
      "updated_at": "2017-07-06T21:10:28Z",
      "closed_at": "2017-07-06T21:10:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10777",
        "html_url": "https://github.com/apple/swift/pull/10777",
        "diff_url": "https://github.com/apple/swift/pull/10777.diff",
        "patch_url": "https://github.com/apple/swift/pull/10777.patch"
      },
      "body": "A pass has an ID (C++ identifier), Tag (shell identifier),\r\nand Name (human identifier).\r\n\r\nCommand line options that identify passes should obviously be compatibile with\r\nwith the pass' command line identifier. This is also what the user is used to\r\ntyping for the -debug-only option.",
      "score": 1.4457357
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10778",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10778/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10778/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10778/events",
      "html_url": "https://github.com/apple/swift/pull/10778",
      "id": 240807962,
      "number": 10778,
      "title": "[tests] More granular tests for faster builds",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-07-05T23:59:43Z",
      "updated_at": "2017-07-27T20:51:58Z",
      "closed_at": "2017-07-27T20:51:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10778",
        "html_url": "https://github.com/apple/swift/pull/10778",
        "diff_url": "https://github.com/apple/swift/pull/10778.diff",
        "patch_url": "https://github.com/apple/swift/pull/10778.patch"
      },
      "body": "There are a few validation tests that take a very long time to execute. Say, there are 2 tests that take 1000 seconds each, and the rest are single seconds. It is possible that a single executor will get both of those long tests, while all the other fast ones land on other executors. So the test time would be 2000 seconds, and roughly half of this time will be spent in just one thread.\r\n\r\nThis change splits the long running tests into (even) smaller pieces, thus halving the maximum duration of a single test file execution.",
      "score": 1.5982562
    }
  ]
}

