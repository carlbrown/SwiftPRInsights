{
  "total_count": 1407,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10254",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10254/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10254/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10254/events",
      "html_url": "https://github.com/apple/swift/pull/10254",
      "id": 236003563,
      "number": 10254,
      "title": "[ClangImporter] Fix indirection mismatch surrounding swift_newtype",
      "user": {
        "login": "milseman",
        "id": 235334,
        "avatar_url": "https://avatars0.githubusercontent.com/u/235334?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/milseman",
        "html_url": "https://github.com/milseman",
        "followers_url": "https://api.github.com/users/milseman/followers",
        "following_url": "https://api.github.com/users/milseman/following{/other_user}",
        "gists_url": "https://api.github.com/users/milseman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/milseman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/milseman/subscriptions",
        "organizations_url": "https://api.github.com/users/milseman/orgs",
        "repos_url": "https://api.github.com/users/milseman/repos",
        "events_url": "https://api.github.com/users/milseman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/milseman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 19,
      "created_at": "2017-06-14T20:42:17Z",
      "updated_at": "2017-07-11T23:14:59Z",
      "closed_at": "2017-06-23T13:15:31Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10254",
        "html_url": "https://github.com/apple/swift/pull/10254",
        "diff_url": "https://github.com/apple/swift/pull/10254.diff",
        "patch_url": "https://github.com/apple/swift/pull/10254.patch"
      },
      "body": "Previously, we did not properly handle levels of indirection for\r\nswift_newtype-ed typedefs of pointer types. We imported them in a way\r\nthat tried to present the value semantics of the pointee rather than\r\nof the pointer. We then tried (sometimes incorrectly) to detect and\r\nfix this up during SILGen.\r\n\r\nInstead, model with the value semantics of the pointer itself. SILGen\r\ncan then be simplified to just pass swift_newtypes the same as any\r\nother struct: directly for non-mutating and indirectly for mutating\r\n(i.e. inout self). Tests added.\r\n\r\n<!-- What's in this pull request? -->\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\n<rdar://problem/26899737>\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->",
      "score": 1.1737379
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10255",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10255/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10255/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10255/events",
      "html_url": "https://github.com/apple/swift/pull/10255",
      "id": 236007295,
      "number": 10255,
      "title": "ClosureSpecializer: We don't need to insert releases for inlined thin_to_thick functions",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-14T20:56:18Z",
      "updated_at": "2017-06-15T15:44:06Z",
      "closed_at": "2017-06-15T15:44:06Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10255",
        "html_url": "https://github.com/apple/swift/pull/10255",
        "diff_url": "https://github.com/apple/swift/pull/10255.diff",
        "patch_url": "https://github.com/apple/swift/pull/10255.patch"
      },
      "body": "Makes sure we inline thin_to_thick closures into functions that may throw.\r\n\r\n• Explanation: Enables inlining of non-capturing closures into throwing functions (like Collection map).\r\n\r\n• Scope of Issue: MapReduceString regressed recently because of this. With this optimization we recover most of a 40% regression.\r\n\r\n• Origination: N/A\r\n\r\n• Risk: Low.\r\nrdar://32595213\r\n",
      "score": 1.1282604
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10256",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10256/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10256/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10256/events",
      "html_url": "https://github.com/apple/swift/pull/10256",
      "id": 236007982,
      "number": 10256,
      "title": "[PrintAsObjC] Silence -Wnullability for the generated declarations.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-14T20:59:05Z",
      "updated_at": "2017-06-16T00:04:57Z",
      "closed_at": "2017-06-15T23:59:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10256",
        "html_url": "https://github.com/apple/swift/pull/10256",
        "diff_url": "https://github.com/apple/swift/pull/10256.diff",
        "patch_url": "https://github.com/apple/swift/pull/10256.patch"
      },
      "body": "- **Explanation**: Since Swift 3 and Swift 4 might have different views of an Objective-C API's nullability, we can end up with incompatible overrides, including with inherited initializers. This is unfortunate but also realistic; the Swift 3 code is *not* set up to handle the new nullability used by Swift 4 and Objective-C. This change silences -Wnullability for declarations in the generated Objective-C header (\"MyApp-Swift.h\"), to allow these mismatches.\r\n- **Scope**: Affects warnings emitted in generated headers.\r\n- **Radar**: rdar://problem/32571301\r\n- **Reviewed by**: @milseman  \r\n- **Risk**: Low\r\n- **Testing**: Passed updated compiler regression tests.",
      "score": 1.130196
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10258",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10258/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10258/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10258/events",
      "html_url": "https://github.com/apple/swift/pull/10258",
      "id": 236012993,
      "number": 10258,
      "title": "[overlay] Adding back dependencies on os and XPC to CloudKit",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-14T21:18:52Z",
      "updated_at": "2017-06-15T20:39:18Z",
      "closed_at": "2017-06-15T18:50:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10258",
        "html_url": "https://github.com/apple/swift/pull/10258",
        "diff_url": "https://github.com/apple/swift/pull/10258.diff",
        "patch_url": "https://github.com/apple/swift/pull/10258.patch"
      },
      "body": "",
      "score": 1.1291018
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10260",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10260/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10260/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10260/events",
      "html_url": "https://github.com/apple/swift/pull/10260",
      "id": 236014750,
      "number": 10260,
      "title": "Upstream lib/Migrator to Open Source",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-14T21:26:48Z",
      "updated_at": "2017-06-15T17:19:40Z",
      "closed_at": "2017-06-15T17:19:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10260",
        "html_url": "https://github.com/apple/swift/pull/10260",
        "diff_url": "https://github.com/apple/swift/pull/10260.diff",
        "patch_url": "https://github.com/apple/swift/pull/10260.patch"
      },
      "body": "A collection of patches to upstream all lib/Migrator functionality to open source.",
      "score": 1.1287888
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10261",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10261/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10261/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10261/events",
      "html_url": "https://github.com/apple/swift/pull/10261",
      "id": 236019113,
      "number": 10261,
      "title": "[4.0] Allow SingleValueContainers to decode collections",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-06-14T21:46:48Z",
      "updated_at": "2017-06-22T00:45:26Z",
      "closed_at": "2017-06-17T00:35:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10261",
        "html_url": "https://github.com/apple/swift/pull/10261",
        "diff_url": "https://github.com/apple/swift/pull/10261.diff",
        "patch_url": "https://github.com/apple/swift/pull/10261.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10249 for swift-4.0-branch. Addresses [SR-5089](https://bugs.swift.org/browse/SR-5089).\r\n\r\n* **Explanation:** `SingleValueDecondingContainer`s in JSON and Plist previously held the assertion that attempting to decode an array or dictionary from them was a type mismatch (since those represented unkeyed and keyed containers, respectively). This assertion is no longer true, though, since `encode<T : Encodable>(_:)` and `decode<T : Decodable>(_:)` allow you to do just that.\r\n\r\n  This lifts the assertion and adds unit tests to both implementations to ensure this works.\r\n* **Scope:** Affects those using the new Codable API to encode and decode from a single value container.\r\n* **Radar:** rdar://problem/32567981\r\n* **Risk:** Low\r\n* **Testing:** This adds new unit tests to confirm expected behavior.",
      "score": 1.165067
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10262",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10262/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10262/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10262/events",
      "html_url": "https://github.com/apple/swift/pull/10262",
      "id": 236019499,
      "number": 10262,
      "title": "Use clang's effective llvm triple for IR generation",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-14T21:48:37Z",
      "updated_at": "2017-06-15T21:28:13Z",
      "closed_at": "2017-06-15T21:28:13Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10262",
        "html_url": "https://github.com/apple/swift/pull/10262",
        "diff_url": "https://github.com/apple/swift/pull/10262.diff",
        "patch_url": "https://github.com/apple/swift/pull/10262.patch"
      },
      "body": "Transform armv7 llvm triples to thumbv7 triples in the swift frontend (like clang does for c) on  darwin/ios platforms such that we generate smaller code.\r\n\r\n• Explanation: armv7 llvm triples to thumbv7 triples in the swift frontend\r\n\r\n• Scope of Issue: New ‘feature’ to reduce the code size on armv7(s/k) architectures \r\n\r\n• Origination: N/A\r\n\r\n• Testing: Existing Swift CI and benchmark tests",
      "score": 1.1298666
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10263",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10263/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10263/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10263/events",
      "html_url": "https://github.com/apple/swift/pull/10263",
      "id": 236023758,
      "number": 10263,
      "title": "Reduce the code size of the standard library by about 5%-6%",
      "user": {
        "login": "swiftix",
        "id": 15327066,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15327066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/swiftix",
        "html_url": "https://github.com/swiftix",
        "followers_url": "https://api.github.com/users/swiftix/followers",
        "following_url": "https://api.github.com/users/swiftix/following{/other_user}",
        "gists_url": "https://api.github.com/users/swiftix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/swiftix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/swiftix/subscriptions",
        "organizations_url": "https://api.github.com/users/swiftix/orgs",
        "repos_url": "https://api.github.com/users/swiftix/repos",
        "events_url": "https://api.github.com/users/swiftix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/swiftix/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 16,
      "created_at": "2017-06-14T22:08:21Z",
      "updated_at": "2017-06-15T23:02:21Z",
      "closed_at": "2017-06-15T23:02:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10263",
        "html_url": "https://github.com/apple/swift/pull/10263",
        "diff_url": "https://github.com/apple/swift/pull/10263.diff",
        "patch_url": "https://github.com/apple/swift/pull/10263.patch"
      },
      "body": "Reduce the code size of the standard library by about 5%-6% by adding annotations preventing inlining and/or generic specialization in a couple of places. These places were identified by means of the cmpcodesize utility.\r\n\r\n• Explanation: Reduce the code size of the standard library dylib.\r\n\r\n• Scope of Issue: Inlining and specialization of some generic functions were causing significant code increase without providing any performance improvements. This PR addresses this issue.\r\n\r\n• Origination: N/A\r\n\r\n• Risk: Very low. This patch is cherry-picked from the master, where these changes have been landed a week ago and have not caused any issues or performance regressions. The only effect of this PR is the reduced code size of the stdlib.\r\n\r\nrdar://problem/32776747",
      "score": 1.1303346
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10264",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10264/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10264/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10264/events",
      "html_url": "https://github.com/apple/swift/pull/10264",
      "id": 236025901,
      "number": 10264,
      "title": "[NFC] Decompose function input types",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 14,
      "created_at": "2017-06-14T22:18:52Z",
      "updated_at": "2017-06-15T21:33:51Z",
      "closed_at": "2017-06-15T21:33:49Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10264",
        "html_url": "https://github.com/apple/swift/pull/10264",
        "diff_url": "https://github.com/apple/swift/pull/10264.diff",
        "patch_url": "https://github.com/apple/swift/pull/10264.patch"
      },
      "body": "Prepares the AST for future work to eliminate `getInput()` and perform function type argument matching in a less ad-hoc manner.\r\n",
      "score": 1.1300453
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10265",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10265/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10265/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10265/events",
      "html_url": "https://github.com/apple/swift/pull/10265",
      "id": 236029039,
      "number": 10265,
      "title": "Benchmark_Driver: Support custom baseline branches",
      "user": {
        "login": "lplarson",
        "id": 15789776,
        "avatar_url": "https://avatars1.githubusercontent.com/u/15789776?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lplarson",
        "html_url": "https://github.com/lplarson",
        "followers_url": "https://api.github.com/users/lplarson/followers",
        "following_url": "https://api.github.com/users/lplarson/following{/other_user}",
        "gists_url": "https://api.github.com/users/lplarson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lplarson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lplarson/subscriptions",
        "organizations_url": "https://api.github.com/users/lplarson/orgs",
        "repos_url": "https://api.github.com/users/lplarson/repos",
        "events_url": "https://api.github.com/users/lplarson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lplarson/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-14T22:35:31Z",
      "updated_at": "2017-06-15T17:56:28Z",
      "closed_at": "2017-06-15T17:56:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10265",
        "html_url": "https://github.com/apple/swift/pull/10265",
        "diff_url": "https://github.com/apple/swift/pull/10265.diff",
        "patch_url": "https://github.com/apple/swift/pull/10265.patch"
      },
      "body": "Support specifying a baseline branch to compare the current results\r\nagainst. Previously, the master branch was hardcoded.\r\n\r\nFixes: rdar://problem/32751587",
      "score": 1.1292877
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10266",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10266/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10266/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10266/events",
      "html_url": "https://github.com/apple/swift/pull/10266",
      "id": 236029711,
      "number": 10266,
      "title": "[overlay] Add mising dependencies to WatchKit overlay",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-14T22:39:15Z",
      "updated_at": "2017-06-15T16:51:36Z",
      "closed_at": "2017-06-15T04:17:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10266",
        "html_url": "https://github.com/apple/swift/pull/10266",
        "diff_url": "https://github.com/apple/swift/pull/10266.diff",
        "patch_url": "https://github.com/apple/swift/pull/10266.patch"
      },
      "body": "Fixes: <rdar://problem/32776189>\r\n",
      "score": 1.1261374
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10267",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10267/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10267/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10267/events",
      "html_url": "https://github.com/apple/swift/pull/10267",
      "id": 236037962,
      "number": 10267,
      "title": "SILGen: Fix problems with local generic functions [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-06-14T23:31:03Z",
      "updated_at": "2017-06-16T05:29:24Z",
      "closed_at": "2017-06-16T05:29:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10267",
        "html_url": "https://github.com/apple/swift/pull/10267",
        "diff_url": "https://github.com/apple/swift/pull/10267.diff",
        "patch_url": "https://github.com/apple/swift/pull/10267.patch"
      },
      "body": "* Description: Fixes some issues with local functions in generic context reported by a user on Twitter.\r\n\r\n* Origination: Has been broken since 3.1.\r\n\r\n* Scope of the issue: Affects anyone defining local functions inside generic types or functions.\r\n\r\n* Tested: New tests added.\r\n\r\n* Risk: Low, we're using the \"lowered\" captures in a couple more places to get the transitive closure, and fixing an invalid code path for accessors.\r\n\r\n* Radar: rdar://problem/32761305\r\n\r\n* Reviewed by: @jckarter ",
      "score": 1.1322693
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10270",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10270/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10270/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10270/events",
      "html_url": "https://github.com/apple/swift/pull/10270",
      "id": 236041508,
      "number": 10270,
      "title": "[capture-promotion] When checking if a (struct_element_addr (project_box box)) is written to, check that all of the operands are loads, instead of returning early when we find one.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-14T23:56:25Z",
      "updated_at": "2017-06-15T05:40:33Z",
      "closed_at": "2017-06-15T02:28:49Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10270",
        "html_url": "https://github.com/apple/swift/pull/10270",
        "diff_url": "https://github.com/apple/swift/pull/10270.diff",
        "patch_url": "https://github.com/apple/swift/pull/10270.patch"
      },
      "body": "[capture-promotion] When checking if a (struct_element_addr (project_box box)) is written to, check that all of the operands are loads, instead of returning early when we find one.\r\n\r\nI found this bug by inspection.\r\n\r\nThis is an important bug to fix since this pass runs at -Onone and the bug\r\nresults in the compiler hitting an unreachable.\r\n\r\nThe way the unreachable is triggered is that when we detect that we are going to\r\npromote a box, if we see a (struct_element_addr (project_box box)), we don't map\r\nthe struct_element_addr to a cloned value. If we have a load, this is not an\r\nissue, since we are mapping the load to the struct_extract. But if we have /any/\r\nother non-load users of the struct_element_addr, the cloner will attempt to look\r\nup the struct_element_addr and will be unable to find it, hitting an\r\nunreachable.\r\n\r\nrdar://32776202\r\n",
      "score": 1.126118
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10272",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10272/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10272/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10272/events",
      "html_url": "https://github.com/apple/swift/pull/10272",
      "id": 236049692,
      "number": 10272,
      "title": "FixCode: when inserting protocol stubs, avoid inserting @available. rdar://32645956",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T01:01:46Z",
      "updated_at": "2017-06-15T21:04:11Z",
      "closed_at": "2017-06-15T03:49:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10272",
        "html_url": "https://github.com/apple/swift/pull/10272",
        "diff_url": "https://github.com/apple/swift/pull/10272.diff",
        "patch_url": "https://github.com/apple/swift/pull/10272.patch"
      },
      "body": "",
      "score": 1.1307751
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10273",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10273/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10273/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10273/events",
      "html_url": "https://github.com/apple/swift/pull/10273",
      "id": 236071473,
      "number": 10273,
      "title": "[Exclusivity] Remove erroneous no-error comments from tests. NFC.",
      "user": {
        "login": "devincoughlin",
        "id": 2623655,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2623655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devincoughlin",
        "html_url": "https://github.com/devincoughlin",
        "followers_url": "https://api.github.com/users/devincoughlin/followers",
        "following_url": "https://api.github.com/users/devincoughlin/following{/other_user}",
        "gists_url": "https://api.github.com/users/devincoughlin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devincoughlin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devincoughlin/subscriptions",
        "organizations_url": "https://api.github.com/users/devincoughlin/orgs",
        "repos_url": "https://api.github.com/users/devincoughlin/repos",
        "events_url": "https://api.github.com/users/devincoughlin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devincoughlin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T04:03:52Z",
      "updated_at": "2017-06-15T13:45:50Z",
      "closed_at": "2017-06-15T05:20:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10273",
        "html_url": "https://github.com/apple/swift/pull/10273",
        "diff_url": "https://github.com/apple/swift/pull/10273.diff",
        "patch_url": "https://github.com/apple/swift/pull/10273.patch"
      },
      "body": "Copy-pasta strikes again!",
      "score": 1.128068
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10274",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10274/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10274/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10274/events",
      "html_url": "https://github.com/apple/swift/pull/10274",
      "id": 236074269,
      "number": 10274,
      "title": "[SIL Utils] Move IndexTrieNode into its own header in Utils. NFC.",
      "user": {
        "login": "devincoughlin",
        "id": 2623655,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2623655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devincoughlin",
        "html_url": "https://github.com/devincoughlin",
        "followers_url": "https://api.github.com/users/devincoughlin/followers",
        "following_url": "https://api.github.com/users/devincoughlin/following{/other_user}",
        "gists_url": "https://api.github.com/users/devincoughlin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devincoughlin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devincoughlin/subscriptions",
        "organizations_url": "https://api.github.com/users/devincoughlin/orgs",
        "repos_url": "https://api.github.com/users/devincoughlin/repos",
        "events_url": "https://api.github.com/users/devincoughlin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devincoughlin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T04:29:36Z",
      "updated_at": "2017-06-15T14:18:59Z",
      "closed_at": "2017-06-15T14:18:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10274",
        "html_url": "https://github.com/apple/swift/pull/10274",
        "diff_url": "https://github.com/apple/swift/pull/10274.diff",
        "patch_url": "https://github.com/apple/swift/pull/10274.patch"
      },
      "body": "Move IndexTrieNode from DeadObjectElimination into its own header. I plan to\r\nuse this data structure when diagnosing static violations of exclusive access.\r\n",
      "score": 1.1302836
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10275",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10275/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10275/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10275/events",
      "html_url": "https://github.com/apple/swift/pull/10275",
      "id": 236079542,
      "number": 10275,
      "title": "[stdlib] Move Dictionary(grouping:by) down a level",
      "user": {
        "login": "natecook1000",
        "id": 7053374,
        "avatar_url": "https://avatars1.githubusercontent.com/u/7053374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/natecook1000",
        "html_url": "https://github.com/natecook1000",
        "followers_url": "https://api.github.com/users/natecook1000/followers",
        "following_url": "https://api.github.com/users/natecook1000/following{/other_user}",
        "gists_url": "https://api.github.com/users/natecook1000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/natecook1000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/natecook1000/subscriptions",
        "organizations_url": "https://api.github.com/users/natecook1000/orgs",
        "repos_url": "https://api.github.com/users/natecook1000/repos",
        "events_url": "https://api.github.com/users/natecook1000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/natecook1000/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 23,
      "created_at": "2017-06-15T05:17:04Z",
      "updated_at": "2017-06-20T03:39:37Z",
      "closed_at": "2017-06-19T23:56:05Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10275",
        "html_url": "https://github.com/apple/swift/pull/10275",
        "diff_url": "https://github.com/apple/swift/pull/10275.diff",
        "patch_url": "https://github.com/apple/swift/pull/10275.patch"
      },
      "body": "This moves the grouping operation in `Dictionary(grouping:by:)` down to the buffer level so the value arrays can be created without copying their contents on every insertion.",
      "score": 1.1555362
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10276",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10276/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10276/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10276/events",
      "html_url": "https://github.com/apple/swift/pull/10276",
      "id": 236081382,
      "number": 10276,
      "title": "Fold ConstraintSolver::coerceToRValue into TypeChecker::coerceToRValue()",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T05:30:41Z",
      "updated_at": "2017-06-15T06:45:28Z",
      "closed_at": "2017-06-15T06:43:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10276",
        "html_url": "https://github.com/apple/swift/pull/10276",
        "diff_url": "https://github.com/apple/swift/pull/10276.diff",
        "patch_url": "https://github.com/apple/swift/pull/10276.patch"
      },
      "body": "Fold `ConstraintSolver::coerceToRValue()` into `TypeChecker::coerceToRValue()`\r\n\r\n`ConstraintSolver::coerceToRValue()` missed a bunch of cases where we\r\nshould be dealing with lvalues, e.g., tuples, \"try\" expressions, and\r\nso on. Extend `TypeChecker::coerceToRValue()` to deal with the\r\nexpression type side-tables and `ConstraintSolver::coerceToRValue()` to\r\nit.\r\n\r\nFixes rdar://problem/32700180, a crash-on-valid.",
      "score": 1.1288393
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10277",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10277/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10277/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10277/events",
      "html_url": "https://github.com/apple/swift/pull/10277",
      "id": 236124995,
      "number": 10277,
      "title": "Unqualified lookup cleanup",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T09:10:45Z",
      "updated_at": "2017-06-16T08:45:25Z",
      "closed_at": "2017-06-16T08:45:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10277",
        "html_url": "https://github.com/apple/swift/pull/10277",
        "diff_url": "https://github.com/apple/swift/pull/10277.diff",
        "patch_url": "https://github.com/apple/swift/pull/10277.patch"
      },
      "body": "",
      "score": 1.1360499
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10278",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10278/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10278/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10278/events",
      "html_url": "https://github.com/apple/swift/pull/10278",
      "id": 236249704,
      "number": 10278,
      "title": "[capture-promotion] Be sure to copy_value a struct_extracted value from a promoted capture even though the value is borrowed.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T16:39:45Z",
      "updated_at": "2017-06-15T17:05:21Z",
      "closed_at": "2017-06-15T17:00:37Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10278",
        "html_url": "https://github.com/apple/swift/pull/10278",
        "diff_url": "https://github.com/apple/swift/pull/10278.diff",
        "patch_url": "https://github.com/apple/swift/pull/10278.patch"
      },
      "body": "[capture-promotion] Be sure to copy_value a struct_extracted value from a promoted capture even though the value is borrowed.\r\n\r\nThe issue here is that we know that the given value is already borrowed, so\r\ntechnically, we do not need a copy. The problem is that there is still\r\npotentially a destroy of the value that will be cloned by the closure cloner.\r\nThis results in use-after-frees.\r\n\r\nThis commit fixes the problem by inserting the relevant copy_value and changing\r\nthe borrowed value into a +1 copy.\r\n\r\nThis is a bug that would have been caught by the Ownership verifier since a\r\nborrowed value can not be destroyed (so the verifier would have tripped).\r\n\r\nrdar://32625475\r\n",
      "score": 1.1347262
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10279",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10279/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10279/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10279/events",
      "html_url": "https://github.com/apple/swift/pull/10279",
      "id": 236251632,
      "number": 10279,
      "title": "[benchmark] Add benchmark for Dictionary(group:by:)",
      "user": {
        "login": "natecook1000",
        "id": 7053374,
        "avatar_url": "https://avatars1.githubusercontent.com/u/7053374?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/natecook1000",
        "html_url": "https://github.com/natecook1000",
        "followers_url": "https://api.github.com/users/natecook1000/followers",
        "following_url": "https://api.github.com/users/natecook1000/following{/other_user}",
        "gists_url": "https://api.github.com/users/natecook1000/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/natecook1000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/natecook1000/subscriptions",
        "organizations_url": "https://api.github.com/users/natecook1000/orgs",
        "repos_url": "https://api.github.com/users/natecook1000/repos",
        "events_url": "https://api.github.com/users/natecook1000/events{/privacy}",
        "received_events_url": "https://api.github.com/users/natecook1000/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T16:47:44Z",
      "updated_at": "2017-06-15T17:32:08Z",
      "closed_at": "2017-06-15T17:32:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10279",
        "html_url": "https://github.com/apple/swift/pull/10279",
        "diff_url": "https://github.com/apple/swift/pull/10279.diff",
        "patch_url": "https://github.com/apple/swift/pull/10279.patch"
      },
      "body": "A benchmark for #10275.",
      "score": 1.1348903
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10280",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10280/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10280/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10280/events",
      "html_url": "https://github.com/apple/swift/pull/10280",
      "id": 236257127,
      "number": 10280,
      "title": "[capture-promotion] When checking if a (struct_element_addr (project_box box)) is written to, check that all of the operands are loads, instead of returning early when we find one.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-06-15T17:10:17Z",
      "updated_at": "2017-06-15T22:19:56Z",
      "closed_at": "2017-06-15T22:19:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10280",
        "html_url": "https://github.com/apple/swift/pull/10280",
        "diff_url": "https://github.com/apple/swift/pull/10280.diff",
        "patch_url": "https://github.com/apple/swift/pull/10280.patch"
      },
      "body": "[capture-promotion] When checking if a (struct_element_addr (project_box box)) is written to, check that all of the operands are loads, instead of returning early when we find one.\r\n\r\nI found this bug by inspection.\r\n\r\nThis is an important bug to fix since this pass runs at -Onone and the bug\r\nresults in the compiler hitting an unreachable.\r\n\r\nThe way the unreachable is triggered is that when we detect that we are going to\r\npromote a box, if we see a (struct_element_addr (project_box box)), we don't map\r\nthe struct_element_addr to a cloned value. If we have a load, this is not an\r\nissue, since we are mapping the load to the struct_extract. But if we have /any/\r\nother non-load users of the struct_element_addr, the cloner will attempt to look\r\nup the struct_element_addr and will be unable to find it, hitting an\r\nunreachable.\r\n\r\nrdar://32776202\r\n(cherry picked from commit cf99e5c522ff2dfaabca8b3af2cf4e00ff8fdff7)\r\n",
      "score": 1.136126
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10281",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10281/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10281/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10281/events",
      "html_url": "https://github.com/apple/swift/pull/10281",
      "id": 236263852,
      "number": 10281,
      "title": "[cast-optimizer] Improve casting of P.Protocol to P.Type",
      "user": {
        "login": "swiftix",
        "id": 15327066,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15327066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/swiftix",
        "html_url": "https://github.com/swiftix",
        "followers_url": "https://api.github.com/users/swiftix/followers",
        "following_url": "https://api.github.com/users/swiftix/following{/other_user}",
        "gists_url": "https://api.github.com/users/swiftix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/swiftix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/swiftix/subscriptions",
        "organizations_url": "https://api.github.com/users/swiftix/orgs",
        "repos_url": "https://api.github.com/users/swiftix/repos",
        "events_url": "https://api.github.com/users/swiftix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/swiftix/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 30,
      "created_at": "2017-06-15T17:39:08Z",
      "updated_at": "2017-06-16T17:23:08Z",
      "closed_at": "2017-06-16T17:23:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10281",
        "html_url": "https://github.com/apple/swift/pull/10281",
        "diff_url": "https://github.com/apple/swift/pull/10281.diff",
        "patch_url": "https://github.com/apple/swift/pull/10281.patch"
      },
      "body": "If the source and target are the same existential type, but the source is P.Protocol and the dest is P.Type, then we need to consider whether the protocol is self-conforming.\r\nThe only cases where a protocol self-conforms are objc protocols, but  we're going to expect P.Type to hold a class object. And this case doesn't matter since for a self-conforming protocol type there can't be any type-level methods.\r\n\r\nThus we consider this kind of cast to always fail.\r\n\r\nFixes rdar://32682967\r\n",
      "score": 1.1407338
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10283",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10283/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10283/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10283/events",
      "html_url": "https://github.com/apple/swift/pull/10283",
      "id": 236271992,
      "number": 10283,
      "title": "[capture-promotion] Be sure to copy_value a struct_extracted value from a promoted capture even though the value is borrowed.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2017-06-15T18:11:39Z",
      "updated_at": "2017-06-15T22:20:23Z",
      "closed_at": "2017-06-15T22:20:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10283",
        "html_url": "https://github.com/apple/swift/pull/10283",
        "diff_url": "https://github.com/apple/swift/pull/10283.diff",
        "patch_url": "https://github.com/apple/swift/pull/10283.patch"
      },
      "body": "[capture-promotion] Be sure to copy_value a struct_extracted value from a promoted capture even though the value is borrowed.\r\n\r\nThe issue here is that we know that the given value is already borrowed, so\r\ntechnically, we do not need a copy. The problem is that there is still\r\npotentially a destroy of the value that will be cloned by the closure cloner.\r\nThis results in use-after-frees.\r\n\r\nThis commit fixes the problem by inserting the relevant copy_value and changing\r\nthe borrowed value into a +1 copy.\r\n\r\nThis is a bug that would have been caught by the Ownership verifier since a\r\nborrowed value can not be destroyed (so the verifier would have tripped).\r\n\r\nrdar://32625475\r\n(cherry picked from commit ac67f337e9c62b6b3f58a7fa959eb79c8886e93e)\r\n",
      "score": 1.13645
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10284",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10284/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10284/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10284/events",
      "html_url": "https://github.com/apple/swift/pull/10284",
      "id": 236274211,
      "number": 10284,
      "title": "[StdlibUnittest] Avoid serializing references to ObjC runtime APIs.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T18:20:31Z",
      "updated_at": "2017-06-15T20:36:12Z",
      "closed_at": "2017-06-15T19:00:52Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10284",
        "html_url": "https://github.com/apple/swift/pull/10284",
        "diff_url": "https://github.com/apple/swift/pull/10284.diff",
        "patch_url": "https://github.com/apple/swift/pull/10284.patch"
      },
      "body": "Specifically, objc_setUncaughtExceptionHandler, whose nullability is now annotated in Swift 4 mode when using the Xcode 9 SDKs. That means it has a different signature in Swift 3 and Swift 4 mode, which means that references from SIL will fail when deserialized in the other mode. (The recovery support added in earlier commits doesn't cover serialized SIL.)\r\n\r\nThis resulted in crashes when building with -build-serialized-stdlib-unittest, which enables -sil-serialize-all / \"magic performance mode\" when building the StdlibUnittest module like it does the standard library.\r\n\r\nNone of this affects developer code, because developer code doesn't serialize anything (if they're playing by the rules).",
      "score": 1.1357219
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10286",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10286/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10286/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10286/events",
      "html_url": "https://github.com/apple/swift/pull/10286",
      "id": 236286282,
      "number": 10286,
      "title": "[Migrator] Expand tuple destructuring to support tuple input types",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T19:09:25Z",
      "updated_at": "2017-06-15T21:27:04Z",
      "closed_at": "2017-06-15T21:27:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10286",
        "html_url": "https://github.com/apple/swift/pull/10286",
        "diff_url": "https://github.com/apple/swift/pull/10286.diff",
        "patch_url": "https://github.com/apple/swift/pull/10286.patch"
      },
      "body": "The migrator pass that converts single-argument function input types\r\ndoesn't handle the case when the function input has a label and is\r\ntherefore a tuple. Expand it to handle that possibility.\r\n\r\nrdar://problem/32477319",
      "score": 1.1365465
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10287",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10287/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10287/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10287/events",
      "html_url": "https://github.com/apple/swift/pull/10287",
      "id": 236286483,
      "number": 10287,
      "title": "Tweak test to make it fail to compile regardless of SE-0110.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T19:10:23Z",
      "updated_at": "2017-06-15T20:27:53Z",
      "closed_at": "2017-06-15T20:27:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10287",
        "html_url": "https://github.com/apple/swift/pull/10287",
        "diff_url": "https://github.com/apple/swift/pull/10287.diff",
        "patch_url": "https://github.com/apple/swift/pull/10287.patch"
      },
      "body": "",
      "score": 1.1363206
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10288",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10288/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10288/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10288/events",
      "html_url": "https://github.com/apple/swift/pull/10288",
      "id": 236295049,
      "number": 10288,
      "title": "[4.0] Fold ConstraintSolver::coerceToRValue() into TypeChecker::coerceToRValue()",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 4,
      "created_at": "2017-06-15T19:47:04Z",
      "updated_at": "2017-06-15T23:06:23Z",
      "closed_at": "2017-06-15T23:06:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10288",
        "html_url": "https://github.com/apple/swift/pull/10288",
        "diff_url": "https://github.com/apple/swift/pull/10288.diff",
        "patch_url": "https://github.com/apple/swift/pull/10288.patch"
      },
      "body": "**Explanation**: The type checker failed to handle tuples containing lvalues (e.g., references to \"var\" properties in a class) along some paths, causing crashes in SILGen and (for asserts builds) AST verifier errors.\r\n**Scope**: It's not clear that this ever worked, but seems fairly common. I think we've just made users suffer needlessly by getting this wrong.\r\n**Radar**: rdar://problem/32700180\r\n**Risk**: Low; re-use an established code path to fix the problems here rather than a poor duplication of it.\r\n**Testing**: Tested example from radar, plus normal compiler qualification.\r\n",
      "score": 1.1371304
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10289",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10289/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10289/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10289/events",
      "html_url": "https://github.com/apple/swift/pull/10289",
      "id": 236305034,
      "number": 10289,
      "title": "[syntax-coloring] Rework the syntax map to use offset + length and simplify the delta logic",
      "user": {
        "login": "nathawes",
        "id": 23247203,
        "avatar_url": "https://avatars3.githubusercontent.com/u/23247203?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nathawes",
        "html_url": "https://github.com/nathawes",
        "followers_url": "https://api.github.com/users/nathawes/followers",
        "following_url": "https://api.github.com/users/nathawes/following{/other_user}",
        "gists_url": "https://api.github.com/users/nathawes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nathawes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nathawes/subscriptions",
        "organizations_url": "https://api.github.com/users/nathawes/orgs",
        "repos_url": "https://api.github.com/users/nathawes/repos",
        "events_url": "https://api.github.com/users/nathawes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nathawes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-15T20:28:37Z",
      "updated_at": "2017-06-19T20:26:26Z",
      "closed_at": "2017-06-19T20:26:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10289",
        "html_url": "https://github.com/apple/swift/pull/10289",
        "diff_url": "https://github.com/apple/swift/pull/10289.diff",
        "patch_url": "https://github.com/apple/swift/pull/10289.patch"
      },
      "body": "<!-- What's in this pull request? -->\r\nThis patch changes the syntax map data structure to be offset based rather than line/col based in order to avoid calling `getLineAndColumn` for the start and end offset of every token. This removes the 30% of time spent in `getLineAndColumn` during this request for large files (rdar://problem/28965123).\r\n\r\nThe logic for returning the affected range and the token ranges to highlight following an edit also made several assumptions that no longer hold. This patch changes it to compare the syntax maps from before and after the edit, find the first mismtaching tokens from the start and end of the syntax maps\r\nand return the tokens in that range (adjusted to line boundaries). This fixes syntax highlighting issues with interpolated multi-line strings (rdar://problem/32148117) and block comments.\r\n\r\nWith the above changes the per-keystroke time spent for syntax highlighting (with sematic info disabled) drops from ~80ms to just under 50ms for a 12KLOC file.\r\n\r\nThis patch also changes unterminated/invalid regular and multi-line strings to now be highlighted as strings.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves rdar://problem/28965123 and rdar://problem/32148117.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->",
      "score": 1.159466
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10292",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10292/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10292/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10292/events",
      "html_url": "https://github.com/apple/swift/pull/10292",
      "id": 236323162,
      "number": 10292,
      "title": "[Type checker] Consistently mark used protocol conformances as \"used\".",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-15T21:45:28Z",
      "updated_at": "2017-06-15T23:07:46Z",
      "closed_at": "2017-06-15T22:59:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10292",
        "html_url": "https://github.com/apple/swift/pull/10292",
        "diff_url": "https://github.com/apple/swift/pull/10292.diff",
        "patch_url": "https://github.com/apple/swift/pull/10292.patch"
      },
      "body": "Keep track of the protocol conformances required to form a particular\r\nsolution. At the point where we apply a solution, mark each of those\r\nconformances as \"used\" so we're sure they are complete for later\r\nphases (SILGen, SIL optimizer, IRGen). This general mechanism makes\r\nsure we don't miss any cases in CSApply, such as the multi-case\r\nillustrated in the new test where CSApply doesn't form any AST notes\r\ndescribing the type erasure in a function conversion, so it otherwise\r\nwouldn't see the conformance to mark it \"used\".\r\n\r\nPavel went most of the way down this path to track conformances last\r\nmonth for unrelated reasons (that didn't really pan out). Resurrect\r\nhis work to track conformances, but only use them to mark as \"used\".\r\n\r\nFixes rdar://problem/32111710.",
      "score": 1.1377264
    }
  ]
}

