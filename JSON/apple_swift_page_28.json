{
  "total_count": 1407,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10570",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10570/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10570/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10570/events",
      "html_url": "https://github.com/apple/swift/pull/10570",
      "id": 238355881,
      "number": 10570,
      "title": "spelling",
      "user": {
        "login": "Coeur",
        "id": 839992,
        "avatar_url": "https://avatars2.githubusercontent.com/u/839992?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Coeur",
        "html_url": "https://github.com/Coeur",
        "followers_url": "https://api.github.com/users/Coeur/followers",
        "following_url": "https://api.github.com/users/Coeur/following{/other_user}",
        "gists_url": "https://api.github.com/users/Coeur/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Coeur/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Coeur/subscriptions",
        "organizations_url": "https://api.github.com/users/Coeur/orgs",
        "repos_url": "https://api.github.com/users/Coeur/repos",
        "events_url": "https://api.github.com/users/Coeur/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Coeur/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-25T02:42:30Z",
      "updated_at": "2017-06-25T07:36:36Z",
      "closed_at": "2017-06-25T05:22:05Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10570",
        "html_url": "https://github.com/apple/swift/pull/10570",
        "diff_url": "https://github.com/apple/swift/pull/10570.diff",
        "patch_url": "https://github.com/apple/swift/pull/10570.patch"
      },
      "body": "",
      "score": 1.2669468
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10571",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10571/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10571/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10571/events",
      "html_url": "https://github.com/apple/swift/pull/10571",
      "id": 238367106,
      "number": 10571,
      "title": "[QoI] Improve contextual error diagnostics related to calls",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-25T08:08:44Z",
      "updated_at": "2017-06-26T21:08:42Z",
      "closed_at": "2017-06-26T21:08:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10571",
        "html_url": "https://github.com/apple/swift/pull/10571",
        "diff_url": "https://github.com/apple/swift/pull/10571.diff",
        "patch_url": "https://github.com/apple/swift/pull/10571.patch"
      },
      "body": "Currently some contextual errors are discovered too late\r\nwhich leads to diagnostics of unrelated problems like argument\r\nmismatches, these changes attempt to improve the situation\r\nand try to diagnose contextual errors related to calls\r\nbefore everything else.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves [SR-5045](https://bugs.swift.org/browse/).\r\nResolves rdar://problem/32934129\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.2790308
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10572",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10572/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10572/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10572/events",
      "html_url": "https://github.com/apple/swift/pull/10572",
      "id": 238382180,
      "number": 10572,
      "title": "[test] Add missing ':' for FileCheck directives",
      "user": {
        "login": "rintaro",
        "id": 142081,
        "avatar_url": "https://avatars1.githubusercontent.com/u/142081?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rintaro",
        "html_url": "https://github.com/rintaro",
        "followers_url": "https://api.github.com/users/rintaro/followers",
        "following_url": "https://api.github.com/users/rintaro/following{/other_user}",
        "gists_url": "https://api.github.com/users/rintaro/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rintaro/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rintaro/subscriptions",
        "organizations_url": "https://api.github.com/users/rintaro/orgs",
        "repos_url": "https://api.github.com/users/rintaro/repos",
        "events_url": "https://api.github.com/users/rintaro/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rintaro/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-25T14:00:51Z",
      "updated_at": "2017-06-26T22:25:11Z",
      "closed_at": "2017-06-26T22:25:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10572",
        "html_url": "https://github.com/apple/swift/pull/10572",
        "diff_url": "https://github.com/apple/swift/pull/10572.diff",
        "patch_url": "https://github.com/apple/swift/pull/10572.patch"
      },
      "body": "In `FileCheck` tests, check prefixes must be immediately followed by ':'.\r\nThese are both invalid, hence ignored:\r\n```\r\n// CHECK expected\r\n// CHECK : expected\r\n```\r\nThis PR fixes these misusage, and update the expected strings so that the tests pass.",
      "score": 1.281527
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10574",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10574/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10574/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10574/events",
      "html_url": "https://github.com/apple/swift/pull/10574",
      "id": 238462587,
      "number": 10574,
      "title": "[swiftc (38 vs. 5569)] Add crasher in swift::TypeBase::getContextSubstitutions",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "avatar_url": "https://avatars3.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T07:37:13Z",
      "updated_at": "2017-06-26T08:51:55Z",
      "closed_at": "2017-06-26T08:51:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10574",
        "html_url": "https://github.com/apple/swift/pull/10574",
        "diff_url": "https://github.com/apple/swift/pull/10574.diff",
        "patch_url": "https://github.com/apple/swift/pull/10574.patch"
      },
      "body": "Add test case for crash triggered in `swift::TypeBase::getContextSubstitutions`.\n\nCurrent number of unresolved compiler crashers: 38 (5569 resolved)\n\nStack trace:\n\n```\n0 0x0000000003a7b018 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/path/to/swift/bin/swift+0x3a7b018)\n1 0x0000000003a7b756 SignalHandler(int) (/path/to/swift/bin/swift+0x3a7b756)\n2 0x00007f3994e5e390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)\n3 0x00007f3993383428 gsignal /build/glibc-bfm8X4/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0\n4 0x00007f399338502a abort /build/glibc-bfm8X4/glibc-2.23/stdlib/abort.c:91:0\n5 0x0000000003a176bd llvm::llvm_unreachable_internal(char const*, char const*, unsigned int) (/path/to/swift/bin/swift+0x3a176bd)\n6 0x00000000015d3658 swift::TypeBase::getContextSubstitutions(swift::DeclContext const*, swift::GenericEnvironment*) (/path/to/swift/bin/swift+0x15d3658)\n7 0x00000000015cee70 swift::TypeBase::getContextSubstitutionMap(swift::ModuleDecl*, swift::DeclContext const*, swift::GenericEnvironment*) (/path/to/swift/bin/swift+0x15cee70)\n8 0x00000000013d389b swift::TypeChecker::substMemberTypeWithBase(swift::ModuleDecl*, swift::TypeDecl*, swift::Type) (/path/to/swift/bin/swift+0x13d389b)\n9 0x00000000013d5285 resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d5285)\n10 0x00000000013d4c89 swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d4c89)\n11 0x00000000013d59f8 (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (/path/to/swift/bin/swift+0x13d59f8)\n12 0x00000000013d58fc swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d58fc)\n13 0x00000000012dc9e9 swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (/path/to/swift/bin/swift+0x12dc9e9)\n14 0x00000000012e3fd8 (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (/path/to/swift/bin/swift+0x12e3fd8)\n15 0x0000000001526c3c (anonymous namespace)::Traversal::visitApplyExpr(swift::ApplyExpr*) (/path/to/swift/bin/swift+0x1526c3c)\n16 0x00000000015234db swift::Expr::walk(swift::ASTWalker&) (/path/to/swift/bin/swift+0x15234db)\n17 0x00000000012dab51 swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (/path/to/swift/bin/swift+0x12dab51)\n18 0x0000000001304986 swift::constraints::ConstraintSystem::solve(swift::Expr*&, swift::Type, swift::ExprTypeCheckListener*, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (/path/to/swift/bin/swift+0x1304986)\n19 0x000000000133d8d4 swift::TypeChecker::solveForExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem&, llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>) (/path/to/swift/bin/swift+0x133d8d4)\n20 0x00000000013413a0 swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::TypeLoc, swift::ContextualTypePurpose, swift::OptionSet<swift::TypeCheckExprFlags, unsigned int>, swift::ExprTypeCheckListener*, swift::constraints::ConstraintSystem*) (/path/to/swift/bin/swift+0x13413a0)\n21 0x00000000013c56d5 swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (/path/to/swift/bin/swift+0x13c56d5)\n22 0x00000000013c4ee6 swift::TypeChecker::typeCheckTopLevelCodeDecl(swift::TopLevelCodeDecl*) (/path/to/swift/bin/swift+0x13c4ee6)\n23 0x00000000013e33b0 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int, unsigned int, unsigned int) (/path/to/swift/bin/swift+0x13e33b0)\n24 0x0000000000fa16cd swift::CompilerInstance::performSema() (/path/to/swift/bin/swift+0xfa16cd)\n25 0x00000000004abe59 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) (/path/to/swift/bin/swift+0x4abe59)\n26 0x00000000004aa3f9 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) (/path/to/swift/bin/swift+0x4aa3f9)\n27 0x0000000000465697 main (/path/to/swift/bin/swift+0x465697)\n28 0x00007f399336e830 __libc_start_main /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c:325:0\n29 0x0000000000462d39 _start (/path/to/swift/bin/swift+0x462d39)\n```",
      "score": 1.2846414
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10575",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10575/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10575/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10575/events",
      "html_url": "https://github.com/apple/swift/pull/10575",
      "id": 238479225,
      "number": 10575,
      "title": "[swiftc (39 vs. 5569)] Add crasher in swift::TypeBase::getContextSubstitutions",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "avatar_url": "https://avatars3.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T08:55:13Z",
      "updated_at": "2017-06-26T10:09:38Z",
      "closed_at": "2017-06-26T10:09:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10575",
        "html_url": "https://github.com/apple/swift/pull/10575",
        "diff_url": "https://github.com/apple/swift/pull/10575.diff",
        "patch_url": "https://github.com/apple/swift/pull/10575.patch"
      },
      "body": "Add test case for crash triggered in `swift::TypeBase::getContextSubstitutions`.\n\nCurrent number of unresolved compiler crashers: 39 (5569 resolved)\n\nStack trace:\n\n```\n0 0x0000000003a7b018 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/path/to/swift/bin/swift+0x3a7b018)\n1 0x0000000003a7b756 SignalHandler(int) (/path/to/swift/bin/swift+0x3a7b756)\n2 0x00007f7c28151390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)\n3 0x00000000015d343f swift::TypeBase::getContextSubstitutions(swift::DeclContext const*, swift::GenericEnvironment*) (/path/to/swift/bin/swift+0x15d343f)\n4 0x00000000015cee70 swift::TypeBase::getContextSubstitutionMap(swift::ModuleDecl*, swift::DeclContext const*, swift::GenericEnvironment*) (/path/to/swift/bin/swift+0x15cee70)\n5 0x000000000144969f swift::createDesignatedInitOverride(swift::TypeChecker&, swift::ClassDecl*, swift::ConstructorDecl*, swift::DesignatedInitKind) (/path/to/swift/bin/swift+0x144969f)\n6 0x000000000135feb6 swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*) (/path/to/swift/bin/swift+0x135feb6)\n7 0x0000000001369115 (anonymous namespace)::DeclChecker::visitClassDecl(swift::ClassDecl*) (/path/to/swift/bin/swift+0x1369115)\n8 0x000000000135853e (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x135853e)\n9 0x00000000013689fb (anonymous namespace)::DeclChecker::visitExtensionDecl(swift::ExtensionDecl*) (/path/to/swift/bin/swift+0x13689fb)\n10 0x0000000001358474 (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x1358474)\n11 0x0000000001358343 swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (/path/to/swift/bin/swift+0x1358343)\n12 0x00000000013e33ca swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int, unsigned int, unsigned int) (/path/to/swift/bin/swift+0x13e33ca)\n13 0x0000000000fa16cd swift::CompilerInstance::performSema() (/path/to/swift/bin/swift+0xfa16cd)\n14 0x00000000004abe59 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) (/path/to/swift/bin/swift+0x4abe59)\n15 0x00000000004aa3f9 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) (/path/to/swift/bin/swift+0x4aa3f9)\n16 0x0000000000465697 main (/path/to/swift/bin/swift+0x465697)\n17 0x00007f7c26661830 __libc_start_main /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c:325:0\n18 0x0000000000462d39 _start (/path/to/swift/bin/swift+0x462d39)\n```",
      "score": 1.2854586
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10576",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10576/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10576/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10576/events",
      "html_url": "https://github.com/apple/swift/pull/10576",
      "id": 238498097,
      "number": 10576,
      "title": "[swiftc (40 vs. 5569)] Add crasher in swift::GenericSignatureBuilder::addTypeRequirement",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "avatar_url": "https://avatars3.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T10:12:41Z",
      "updated_at": "2017-06-26T11:27:23Z",
      "closed_at": "2017-06-26T11:27:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10576",
        "html_url": "https://github.com/apple/swift/pull/10576",
        "diff_url": "https://github.com/apple/swift/pull/10576.diff",
        "patch_url": "https://github.com/apple/swift/pull/10576.patch"
      },
      "body": "Add test case for crash triggered in `swift::GenericSignatureBuilder::addTypeRequirement`.\n\nCurrent number of unresolved compiler crashers: 40 (5569 resolved)\n\n/cc @DougGregor - just wanted to let you know that this crasher caused an assertion failure for the assertion `constraintType && \"Missing constraint type?\"` added on 2017-04-07 by you in commit c522bb52 :-)\n\nAssertion failure in [`lib/AST/GenericSignatureBuilder.cpp (line 3110)`](https://github.com/apple/swift/blob/4d33756923cc5e0ade9156eec654fd52a4776be5/lib/AST/GenericSignatureBuilder.cpp#L3110):\n\n```\nAssertion `constraintType && \"Missing constraint type?\"' failed.\n\nWhen executing: ConstraintResult swift::GenericSignatureBuilder::addTypeRequirement(UnresolvedType, UnresolvedType, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::GenericSignatureBuilder::UnresolvedHandlingKind)\n```\n\nAssertion context:\n\n```c++\n```\nStack trace:\n\n```\n0 0x0000000003a7b018 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/path/to/swift/bin/swift+0x3a7b018)\n1 0x0000000003a7b756 SignalHandler(int) (/path/to/swift/bin/swift+0x3a7b756)\n2 0x00007f158c088390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)\n3 0x00007f158a5ad428 gsignal /build/glibc-bfm8X4/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0\n4 0x00007f158a5af02a abort /build/glibc-bfm8X4/glibc-2.23/stdlib/abort.c:91:0\n5 0x00007f158a5a5bd7 __assert_fail_base /build/glibc-bfm8X4/glibc-2.23/assert/assert.c:92:0\n6 0x00007f158a5a5c82 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc82)\n7 0x000000000157ffd9 swift::GenericSignatureBuilder::addTypeRequirement(llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::GenericSignatureBuilder::UnresolvedHandlingKind) (/path/to/swift/bin/swift+0x157ffd9)\n8 0x000000000157de9e swift::GenericSignatureBuilder::addRequirement(swift::RequirementRepr const*, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::SubstitutionMap const*, swift::ModuleDecl*) (/path/to/swift/bin/swift+0x157de9e)\n9 0x000000000157bd6f swift::GenericSignatureBuilder::addConformanceRequirement(swift::GenericSignatureBuilder::PotentialArchetype*, swift::ProtocolDecl*, swift::GenericSignatureBuilder::RequirementSource const*) (/path/to/swift/bin/swift+0x157bd6f)\n10 0x000000000157fc55 swift::GenericSignatureBuilder::addTypeRequirement(llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::GenericSignatureBuilder::UnresolvedHandlingKind) (/path/to/swift/bin/swift+0x157fc55)\n11 0x0000000001590d41 swift::GenericSignatureBuilder::ConstraintResult llvm::function_ref<swift::GenericSignatureBuilder::ConstraintResult (swift::Type, swift::TypeRepr const*)>::callback_fn<swift::GenericSignatureBuilder::addInheritedRequirements(swift::TypeDecl*, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::RequirementSource const*, swift::ModuleDecl*)::$_26>(long, swift::Type, swift::TypeRepr const*) (/path/to/swift/bin/swift+0x1590d41)\n12 0x0000000001589522 std::_Function_handler<void (swift::Type, swift::TypeRepr const*), visitInherited(llvm::ArrayRef<swift::TypeLoc>, llvm::function_ref<swift::GenericSignatureBuilder::ConstraintResult (swift::Type, swift::TypeRepr const*)>)::$_59>::_M_invoke(std::_Any_data const&, swift::Type&&, swift::TypeRepr const*&&) (/path/to/swift/bin/swift+0x1589522)\n13 0x000000000157b6a1 swift::GenericSignatureBuilder::addInheritedRequirements(swift::TypeDecl*, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::RequirementSource const*, swift::ModuleDecl*) (/path/to/swift/bin/swift+0x157b6a1)\n14 0x000000000157b4be swift::GenericSignatureBuilder::addGenericParameterRequirements(swift::GenericTypeParamDecl*) (/path/to/swift/bin/swift+0x157b4be)\n15 0x0000000001385a22 swift::TypeChecker::checkGenericParamList(swift::GenericSignatureBuilder*, swift::GenericParamList*, swift::GenericSignature*, swift::GenericTypeResolver*) (/path/to/swift/bin/swift+0x1385a22)\n16 0x0000000001389004 swift::TypeChecker::checkGenericEnvironment(swift::GenericParamList*, swift::DeclContext*, swift::GenericSignature*, bool, llvm::function_ref<void (swift::GenericSignatureBuilder&)>) (/path/to/swift/bin/swift+0x1389004)\n17 0x0000000001389429 swift::TypeChecker::validateGenericTypeSignature(swift::GenericTypeDecl*) (/path/to/swift/bin/swift+0x1389429)\n18 0x000000000135a200 swift::TypeChecker::validateDecl(swift::ValueDecl*) (/path/to/swift/bin/swift+0x135a200)\n19 0x0000000001369ee3 (anonymous namespace)::DeclChecker::visitProtocolDecl(swift::ProtocolDecl*) (/path/to/swift/bin/swift+0x1369ee3)\n20 0x0000000001358444 (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x1358444)\n21 0x000000000136915b (anonymous namespace)::DeclChecker::visitClassDecl(swift::ClassDecl*) (/path/to/swift/bin/swift+0x136915b)\n22 0x000000000135853e (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x135853e)\n23 0x0000000001358343 swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (/path/to/swift/bin/swift+0x1358343)\n24 0x00000000013e3344 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int, unsigned int, unsigned int) (/path/to/swift/bin/swift+0x13e3344)\n25 0x0000000000fa16cd swift::CompilerInstance::performSema() (/path/to/swift/bin/swift+0xfa16cd)\n26 0x00000000004abe59 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) (/path/to/swift/bin/swift+0x4abe59)\n27 0x00000000004aa3f9 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) (/path/to/swift/bin/swift+0x4aa3f9)\n28 0x0000000000465697 main (/path/to/swift/bin/swift+0x465697)\n29 0x00007f158a598830 __libc_start_main /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c:325:0\n30 0x0000000000462d39 _start (/path/to/swift/bin/swift+0x462d39)\n```",
      "score": 1.2862731
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10577",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10577/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10577/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10577/events",
      "html_url": "https://github.com/apple/swift/pull/10577",
      "id": 238514184,
      "number": 10577,
      "title": "[swiftc (41 vs. 5569)] Add crasher in swift::TypeBase::getDesugaredType(...)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "avatar_url": "https://avatars3.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T11:28:20Z",
      "updated_at": "2017-06-26T12:43:18Z",
      "closed_at": "2017-06-26T12:43:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10577",
        "html_url": "https://github.com/apple/swift/pull/10577",
        "diff_url": "https://github.com/apple/swift/pull/10577.diff",
        "patch_url": "https://github.com/apple/swift/pull/10577.patch"
      },
      "body": "Add test case for crash triggered in `swift::TypeBase::getDesugaredType(...)`.\n\nCurrent number of unresolved compiler crashers: 41 (5569 resolved)\n\nStack trace:\n\n```\n0 0x0000000003a7b018 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/path/to/swift/bin/swift+0x3a7b018)\n1 0x0000000003a7b756 SignalHandler(int) (/path/to/swift/bin/swift+0x3a7b756)\n2 0x00007f169798e390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)\n3 0x00000000015ce1d0 swift::TypeBase::getDesugaredType() (/path/to/swift/bin/swift+0x15ce1d0)\n4 0x00000000015d26ed swift::LookUpConformanceInModule::operator()(swift::CanType, swift::Type, swift::ProtocolType*) const (/path/to/swift/bin/swift+0x15d26ed)\n5 0x0000000000c283d2 std::_Function_handler<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*), swift::LookUpConformanceInModule>::_M_invoke(std::_Any_data const&, swift::CanType&&, swift::Type&&, swift::ProtocolType*&&) (/path/to/swift/bin/swift+0xc283d2)\n6 0x0000000001581541 swift::GenericSignatureBuilder::addSameTypeRequirementToConcrete(swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type, swift::GenericSignatureBuilder::RequirementSource const*) (/path/to/swift/bin/swift+0x1581541)\n7 0x0000000001580f6c swift::GenericSignatureBuilder::addSameTypeRequirement(llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::GenericSignatureBuilder::UnresolvedHandlingKind, llvm::function_ref<void (swift::Type, swift::Type)>) (/path/to/swift/bin/swift+0x1580f6c)\n8 0x0000000001577b2e swift::GenericSignatureBuilder::PotentialArchetype::updateNestedTypeForConformance(llvm::PointerUnion<swift::AssociatedTypeDecl*, swift::TypeDecl*>, swift::GenericSignatureBuilder::PotentialArchetype::NestedTypeUpdate) (/path/to/swift/bin/swift+0x1577b2e)\n9 0x00000000015766f4 swift::GenericSignatureBuilder::PotentialArchetype::getNestedArchetypeAnchor(swift::Identifier, swift::GenericSignatureBuilder&, swift::GenericSignatureBuilder::PotentialArchetype::NestedTypeUpdate) (/path/to/swift/bin/swift+0x15766f4)\n10 0x0000000001575c93 swift::GenericSignatureBuilder::PotentialArchetype::getArchetypeAnchor(swift::GenericSignatureBuilder&) (/path/to/swift/bin/swift+0x1575c93)\n11 0x0000000001578a96 swift::GenericSignatureBuilder::PotentialArchetype::getTypeInContext(swift::GenericSignatureBuilder&, swift::GenericEnvironment*) (/path/to/swift/bin/swift+0x1578a96)\n12 0x00000000015799f1 swift::ArchetypeType::resolveNestedType(std::pair<swift::Identifier, swift::Type>&) const (/path/to/swift/bin/swift+0x15799f1)\n13 0x00000000015d1898 swift::ArchetypeType::getNestedType(swift::Identifier) const (/path/to/swift/bin/swift+0x15d1898)\n14 0x00000000015d2b46 getMemberForBaseType(llvm::function_ref<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*)>, swift::Type, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::SubstOptions) (/path/to/swift/bin/swift+0x15d2b46)\n15 0x00000000015d778d llvm::Optional<swift::Type> llvm::function_ref<llvm::Optional<swift::Type> (swift::TypeBase*)>::callback_fn<substType(swift::Type, llvm::function_ref<swift::Type (swift::SubstitutableType*)>, llvm::function_ref<llvm::Optional<swift::ProtocolConformanceRef> (swift::CanType, swift::Type, swift::ProtocolType*)>, swift::SubstOptions)::$_18>(long, swift::TypeBase*) (/path/to/swift/bin/swift+0x15d778d)\n16 0x00000000015d3d09 swift::Type::transformRec(llvm::function_ref<llvm::Optional<swift::Type> (swift::TypeBase*)>) const (/path/to/swift/bin/swift+0x15d3d09)\n17 0x00000000015cef95 swift::Type::subst(swift::SubstitutionMap const&, swift::SubstOptions) const (/path/to/swift/bin/swift+0x15cef95)\n18 0x00000000013d38be swift::TypeChecker::substMemberTypeWithBase(swift::ModuleDecl*, swift::TypeDecl*, swift::Type) (/path/to/swift/bin/swift+0x13d38be)\n19 0x000000000138bff4 swift::TypeChecker::lookupMemberType(swift::DeclContext*, swift::Type, swift::Identifier, swift::OptionSet<swift::NameLookupFlags, unsigned int>) (/path/to/swift/bin/swift+0x138bff4)\n20 0x00000000013d54db resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d54db)\n21 0x00000000013d4c89 swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d4c89)\n22 0x00000000013d59f8 (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (/path/to/swift/bin/swift+0x13d59f8)\n23 0x00000000013d71ab (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (/path/to/swift/bin/swift+0x13d71ab)\n24 0x00000000013d58fc swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d58fc)\n25 0x00000000013d4300 swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, llvm::function_ref<bool (swift::TypeCheckRequest)>*) (/path/to/swift/bin/swift+0x13d4300)\n26 0x000000000135b505 validateTypealiasType(swift::TypeChecker&, swift::TypeAliasDecl*) (/path/to/swift/bin/swift+0x135b505)\n27 0x000000000135a2e5 swift::TypeChecker::validateDecl(swift::ValueDecl*) (/path/to/swift/bin/swift+0x135a2e5)\n28 0x0000000001369ee3 (anonymous namespace)::DeclChecker::visitProtocolDecl(swift::ProtocolDecl*) (/path/to/swift/bin/swift+0x1369ee3)\n29 0x0000000001358444 (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x1358444)\n30 0x0000000001358343 swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (/path/to/swift/bin/swift+0x1358343)\n31 0x00000000013e3344 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int, unsigned int, unsigned int) (/path/to/swift/bin/swift+0x13e3344)\n32 0x0000000000fa16cd swift::CompilerInstance::performSema() (/path/to/swift/bin/swift+0xfa16cd)\n33 0x00000000004abe59 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) (/path/to/swift/bin/swift+0x4abe59)\n34 0x00000000004aa3f9 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) (/path/to/swift/bin/swift+0x4aa3f9)\n35 0x0000000000465697 main (/path/to/swift/bin/swift+0x465697)\n36 0x00007f1695e9e830 __libc_start_main /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c:325:0\n37 0x0000000000462d39 _start (/path/to/swift/bin/swift+0x462d39)\n```",
      "score": 1.2870691
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10578",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10578/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10578/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10578/events",
      "html_url": "https://github.com/apple/swift/pull/10578",
      "id": 238531218,
      "number": 10578,
      "title": "[swiftc (42 vs. 5569)] Add crasher in swift::GenericSignatureBuilder::addRequirement",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "avatar_url": "https://avatars3.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T12:45:09Z",
      "updated_at": "2017-06-26T13:59:59Z",
      "closed_at": "2017-06-26T13:59:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10578",
        "html_url": "https://github.com/apple/swift/pull/10578",
        "diff_url": "https://github.com/apple/swift/pull/10578.diff",
        "patch_url": "https://github.com/apple/swift/pull/10578.patch"
      },
      "body": "Add test case for crash triggered in `swift::GenericSignatureBuilder::addRequirement`.\n\nCurrent number of unresolved compiler crashers: 42 (5569 resolved)\n\nAssertion failure in [`include/swift/AST/Requirement.h (line 66)`](https://github.com/apple/swift/blob/36e8d2861b75e80631344aedf9fc86116f117e45/include/swift/AST/Requirement.h#L66):\n\n```\nAssertion `second' failed.\n\nWhen executing: swift::Requirement::Requirement(swift::RequirementKind, swift::Type, swift::Type)\n```\n\nAssertion context:\n\n```c++\npublic:\n  /// Create a conformance or same-type requirement.\n  Requirement(RequirementKind kind, Type first, Type second)\n    : FirstTypeAndKind(first, kind), SecondType(second) {\n    assert(first);\n    assert(second);\n  }\n\n  /// Create a layout constraint requirement.\n  Requirement(RequirementKind kind, Type first, LayoutConstraint second)\n    : FirstTypeAndKind(first, kind), SecondLayout(second) {\n```\nStack trace:\n\n```\n0 0x0000000003a7b018 llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/path/to/swift/bin/swift+0x3a7b018)\n1 0x0000000003a7b756 SignalHandler(int) (/path/to/swift/bin/swift+0x3a7b756)\n2 0x00007ff8d8771390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)\n3 0x00007ff8d6c96428 gsignal /build/glibc-bfm8X4/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0\n4 0x00007ff8d6c9802a abort /build/glibc-bfm8X4/glibc-2.23/stdlib/abort.c:91:0\n5 0x00007ff8d6c8ebd7 __assert_fail_base /build/glibc-bfm8X4/glibc-2.23/assert/assert.c:92:0\n6 0x00007ff8d6c8ec82 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc82)\n7 0x000000000157e217 swift::GenericSignatureBuilder::addRequirement(swift::RequirementRepr const*, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::SubstitutionMap const*, swift::ModuleDecl*) (/path/to/swift/bin/swift+0x157e217)\n8 0x000000000157bd6f swift::GenericSignatureBuilder::addConformanceRequirement(swift::GenericSignatureBuilder::PotentialArchetype*, swift::ProtocolDecl*, swift::GenericSignatureBuilder::RequirementSource const*) (/path/to/swift/bin/swift+0x157bd6f)\n9 0x000000000157fc55 swift::GenericSignatureBuilder::addTypeRequirement(llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::FloatingRequirementSource, swift::GenericSignatureBuilder::UnresolvedHandlingKind) (/path/to/swift/bin/swift+0x157fc55)\n10 0x0000000001590d41 swift::GenericSignatureBuilder::ConstraintResult llvm::function_ref<swift::GenericSignatureBuilder::ConstraintResult (swift::Type, swift::TypeRepr const*)>::callback_fn<swift::GenericSignatureBuilder::addInheritedRequirements(swift::TypeDecl*, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::RequirementSource const*, swift::ModuleDecl*)::$_26>(long, swift::Type, swift::TypeRepr const*) (/path/to/swift/bin/swift+0x1590d41)\n11 0x0000000001589522 std::_Function_handler<void (swift::Type, swift::TypeRepr const*), visitInherited(llvm::ArrayRef<swift::TypeLoc>, llvm::function_ref<swift::GenericSignatureBuilder::ConstraintResult (swift::Type, swift::TypeRepr const*)>)::$_59>::_M_invoke(std::_Any_data const&, swift::Type&&, swift::TypeRepr const*&&) (/path/to/swift/bin/swift+0x1589522)\n12 0x000000000157b6a1 swift::GenericSignatureBuilder::addInheritedRequirements(swift::TypeDecl*, llvm::PointerUnion<swift::GenericSignatureBuilder::PotentialArchetype*, swift::Type>, swift::GenericSignatureBuilder::RequirementSource const*, swift::ModuleDecl*) (/path/to/swift/bin/swift+0x157b6a1)\n13 0x000000000157b4be swift::GenericSignatureBuilder::addGenericParameterRequirements(swift::GenericTypeParamDecl*) (/path/to/swift/bin/swift+0x157b4be)\n14 0x0000000001385a22 swift::TypeChecker::checkGenericParamList(swift::GenericSignatureBuilder*, swift::GenericParamList*, swift::GenericSignature*, swift::GenericTypeResolver*) (/path/to/swift/bin/swift+0x1385a22)\n15 0x0000000001389004 swift::TypeChecker::checkGenericEnvironment(swift::GenericParamList*, swift::DeclContext*, swift::GenericSignature*, bool, llvm::function_ref<void (swift::GenericSignatureBuilder&)>) (/path/to/swift/bin/swift+0x1389004)\n16 0x0000000001389429 swift::TypeChecker::validateGenericTypeSignature(swift::GenericTypeDecl*) (/path/to/swift/bin/swift+0x1389429)\n17 0x000000000135a200 swift::TypeChecker::validateDecl(swift::ValueDecl*) (/path/to/swift/bin/swift+0x135a200)\n18 0x0000000001369ee3 (anonymous namespace)::DeclChecker::visitProtocolDecl(swift::ProtocolDecl*) (/path/to/swift/bin/swift+0x1369ee3)\n19 0x0000000001358444 (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x1358444)\n20 0x000000000136915b (anonymous namespace)::DeclChecker::visitClassDecl(swift::ClassDecl*) (/path/to/swift/bin/swift+0x136915b)\n21 0x000000000135853e (anonymous namespace)::DeclChecker::visit(swift::Decl*) (/path/to/swift/bin/swift+0x135853e)\n22 0x0000000001358343 swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (/path/to/swift/bin/swift+0x1358343)\n23 0x00000000013e3344 swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, swift::OptionSet<swift::TypeCheckingFlags, unsigned int>, unsigned int, unsigned int, unsigned int) (/path/to/swift/bin/swift+0x13e3344)\n24 0x0000000000fa16cd swift::CompilerInstance::performSema() (/path/to/swift/bin/swift+0xfa16cd)\n25 0x00000000004abe59 performCompile(swift::CompilerInstance&, swift::CompilerInvocation&, llvm::ArrayRef<char const*>, int&, swift::FrontendObserver*, swift::UnifiedStatsReporter*) (/path/to/swift/bin/swift+0x4abe59)\n26 0x00000000004aa3f9 swift::performFrontend(llvm::ArrayRef<char const*>, char const*, void*, swift::FrontendObserver*) (/path/to/swift/bin/swift+0x4aa3f9)\n27 0x0000000000465697 main (/path/to/swift/bin/swift+0x465697)\n28 0x00007ff8d6c81830 __libc_start_main /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c:325:0\n29 0x0000000000462d39 _start (/path/to/swift/bin/swift+0x462d39)\n```",
      "score": 1.2878762
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10580",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10580/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10580/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10580/events",
      "html_url": "https://github.com/apple/swift/pull/10580",
      "id": 238584821,
      "number": 10580,
      "title": "[GSB] Ensure that we have superclass constraints from merged equiv class",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T15:41:40Z",
      "updated_at": "2017-06-26T17:05:40Z",
      "closed_at": "2017-06-26T16:53:48Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10580",
        "html_url": "https://github.com/apple/swift/pull/10580",
        "diff_url": "https://github.com/apple/swift/pull/10580.diff",
        "patch_url": "https://github.com/apple/swift/pull/10580.patch"
      },
      "body": "Fixes one recently-found crasher.\r\n",
      "score": 1.2897228
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10581",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10581/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10581/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10581/events",
      "html_url": "https://github.com/apple/swift/pull/10581",
      "id": 238598060,
      "number": 10581,
      "title": "[swift-4.0-branch-06-23-2017][overlay] Introducing INParameter",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-26T16:27:25Z",
      "updated_at": "2017-06-26T22:28:33Z",
      "closed_at": "2017-06-26T22:24:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10581",
        "html_url": "https://github.com/apple/swift/pull/10581",
        "diff_url": "https://github.com/apple/swift/pull/10581.diff",
        "patch_url": "https://github.com/apple/swift/pull/10581.patch"
      },
      "body": "Similar to https://github.com/apple/swift/pull/10552 but cherrypicked into the swift-4.0-branch-06-23-2017.",
      "score": 1.291416
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10582",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10582/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10582/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10582/events",
      "html_url": "https://github.com/apple/swift/pull/10582",
      "id": 238602418,
      "number": 10582,
      "title": "[GSB] Don't crash when substitution fails to produce a type.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T16:44:22Z",
      "updated_at": "2017-06-26T18:28:10Z",
      "closed_at": "2017-06-26T18:04:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10582",
        "html_url": "https://github.com/apple/swift/pull/10582",
        "diff_url": "https://github.com/apple/swift/pull/10582.diff",
        "patch_url": "https://github.com/apple/swift/pull/10582.patch"
      },
      "body": "Fixes two more recently-found GSB crashers.",
      "score": 1.2904171
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10583",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10583/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10583/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10583/events",
      "html_url": "https://github.com/apple/swift/pull/10583",
      "id": 238614029,
      "number": 10583,
      "title": "[4.0] KeyPaths: Add support for optional chaining/forcing components.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-26T17:29:38Z",
      "updated_at": "2017-06-28T15:59:25Z",
      "closed_at": "2017-06-28T15:59:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10583",
        "html_url": "https://github.com/apple/swift/pull/10583",
        "diff_url": "https://github.com/apple/swift/pull/10583.diff",
        "patch_url": "https://github.com/apple/swift/pull/10583.patch"
      },
      "body": "Explanation: Adds support for optional chaining and force-unwrapping components in keypaths, part of the original proposal that didn't make it into the first Swift beta.\r\n\r\nScope: New feature\r\n\r\nIssue: rdar://problem/31768715\r\n\r\nRisk: Low, additive feature work that should not disturb existing code.\r\n\r\nTesting: Swift CI",
      "score": 1.3024987
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10584",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10584/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10584/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10584/events",
      "html_url": "https://github.com/apple/swift/pull/10584",
      "id": 238619584,
      "number": 10584,
      "title": "[Foundation] slices of slices that use range expressions incorrectly calculated relative indexing",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-26T17:50:38Z",
      "updated_at": "2017-06-26T23:35:41Z",
      "closed_at": "2017-06-26T23:35:41Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10584",
        "html_url": "https://github.com/apple/swift/pull/10584",
        "diff_url": "https://github.com/apple/swift/pull/10584.diff",
        "patch_url": "https://github.com/apple/swift/pull/10584.patch"
      },
      "body": "The RangeExpression variants of slicing incorrectly passed `0..<R.Bounds.max` which should be the slice region of the Data.\r\n\r\nThis resolves the issues:\r\nrdar://problem/32982494\r\nrdar://problem/32983214 aka [SR-5292]: Another Data slice-related crash",
      "score": 1.292243
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10585",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10585/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10585/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10585/events",
      "html_url": "https://github.com/apple/swift/pull/10585",
      "id": 238621477,
      "number": 10585,
      "title": "[overlay] Add ModelIO overlay",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-26T17:57:14Z",
      "updated_at": "2017-06-28T17:11:56Z",
      "closed_at": "2017-06-28T17:11:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10585",
        "html_url": "https://github.com/apple/swift/pull/10585",
        "diff_url": "https://github.com/apple/swift/pull/10585.diff",
        "patch_url": "https://github.com/apple/swift/pull/10585.patch"
      },
      "body": "",
      "score": 1.3029853
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10586",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10586/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10586/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10586/events",
      "html_url": "https://github.com/apple/swift/pull/10586",
      "id": 238627341,
      "number": 10586,
      "title": "ARCCodeMotion: fix two problems in release hoisting:",
      "user": {
        "login": "eeckstein",
        "id": 15270291,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eeckstein",
        "html_url": "https://github.com/eeckstein",
        "followers_url": "https://api.github.com/users/eeckstein/followers",
        "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
        "organizations_url": "https://api.github.com/users/eeckstein/orgs",
        "repos_url": "https://api.github.com/users/eeckstein/repos",
        "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eeckstein/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-26T18:19:20Z",
      "updated_at": "2017-06-26T22:40:37Z",
      "closed_at": "2017-06-26T22:40:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10586",
        "html_url": "https://github.com/apple/swift/pull/10586",
        "diff_url": "https://github.com/apple/swift/pull/10586.diff",
        "patch_url": "https://github.com/apple/swift/pull/10586.patch"
      },
      "body": "1) PostOrderAnalysis is not invalidated after splitting critical edges. This let the data flow solver omit new inserted blocks.\r\n\r\n2) Handle infinite loops in the CFG correctly. So that we don’t insert random release instructions into such CFG pathes.\r\n\r\nhttps://bugs.swift.org/browse/SR-5187\r\nrdar://problem/32713742\r\n",
      "score": 1.2921892
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10587",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10587/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10587/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10587/events",
      "html_url": "https://github.com/apple/swift/pull/10587",
      "id": 238630200,
      "number": 10587,
      "title": "[Clang importer] Infer @_downgrade_exhaustivity_check for new-to-2017 enum elements in Swift 3",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-26T18:30:03Z",
      "updated_at": "2017-06-26T22:40:14Z",
      "closed_at": "2017-06-26T21:09:03Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10587",
        "html_url": "https://github.com/apple/swift/pull/10587",
        "diff_url": "https://github.com/apple/swift/pull/10587.diff",
        "patch_url": "https://github.com/apple/swift/pull/10587.patch"
      },
      "body": "In Swift 3 mode, infer @_downgrade_exhaustivity_check for any enum\r\nelements that were introduced in the 2017 SDKs (macOS 10.13, iOS 11.0,\r\ntvOS 11.0, watchOS 4.0). This is a stop-gap until we get \"open\" enums,\r\nbut serves an important source-compatibility use case.\r\n\r\nFixes rdar://problem/32824207.\r\n",
      "score": 1.2918674
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10588",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10588/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10588/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10588/events",
      "html_url": "https://github.com/apple/swift/pull/10588",
      "id": 238641153,
      "number": 10588,
      "title": "demangler: Support the future final mangling prefix $S",
      "user": {
        "login": "eeckstein",
        "id": 15270291,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eeckstein",
        "html_url": "https://github.com/eeckstein",
        "followers_url": "https://api.github.com/users/eeckstein/followers",
        "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
        "organizations_url": "https://api.github.com/users/eeckstein/orgs",
        "repos_url": "https://api.github.com/users/eeckstein/repos",
        "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eeckstein/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-26T19:12:37Z",
      "updated_at": "2017-06-26T22:13:21Z",
      "closed_at": "2017-06-26T22:13:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10588",
        "html_url": "https://github.com/apple/swift/pull/10588",
        "diff_url": "https://github.com/apple/swift/pull/10588.diff",
        "patch_url": "https://github.com/apple/swift/pull/10588.patch"
      },
      "body": "As it’s not clear if we will need underscores, the demangler accepts $S and _$S.\r\nNote that a double underscore is handled by the demangler client.\r\n\r\nrdar://problem/32251811\r\n\r\n",
      "score": 1.2924091
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10589",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10589/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10589/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10589/events",
      "html_url": "https://github.com/apple/swift/pull/10589",
      "id": 238644596,
      "number": 10589,
      "title": "[Migrator] Use toLowercaseWord to lowercase SetterToProperty changes",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-26T19:26:53Z",
      "updated_at": "2017-06-26T22:12:19Z",
      "closed_at": "2017-06-26T22:12:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10589",
        "html_url": "https://github.com/apple/swift/pull/10589",
        "diff_url": "https://github.com/apple/swift/pull/10589.diff",
        "patch_url": "https://github.com/apple/swift/pull/10589.patch"
      },
      "body": "Post-commit review follow-up:\r\nThis works better for properties that were all-caps, such as `URL`.\r\n\r\nThanks @harlanhaskins for the tip!\r\n\r\nrdar://problem/32845968",
      "score": 1.2924945
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10590",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10590/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10590/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10590/events",
      "html_url": "https://github.com/apple/swift/pull/10590",
      "id": 238655066,
      "number": 10590,
      "title": "Generalize sanitizer tests.",
      "user": {
        "login": "cheshire",
        "id": 348959,
        "avatar_url": "https://avatars0.githubusercontent.com/u/348959?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cheshire",
        "html_url": "https://github.com/cheshire",
        "followers_url": "https://api.github.com/users/cheshire/followers",
        "following_url": "https://api.github.com/users/cheshire/following{/other_user}",
        "gists_url": "https://api.github.com/users/cheshire/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cheshire/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cheshire/subscriptions",
        "organizations_url": "https://api.github.com/users/cheshire/orgs",
        "repos_url": "https://api.github.com/users/cheshire/repos",
        "events_url": "https://api.github.com/users/cheshire/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cheshire/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-26T20:09:42Z",
      "updated_at": "2017-06-27T00:40:56Z",
      "closed_at": "2017-06-27T00:40:56Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10590",
        "html_url": "https://github.com/apple/swift/pull/10590",
        "diff_url": "https://github.com/apple/swift/pull/10590.diff",
        "patch_url": "https://github.com/apple/swift/pull/10590.patch"
      },
      "body": " - Remove redundant XFAIL/REQUIRE, *_runtime variable should be\r\nsufficient to specify whether the test can be run.\r\n - Provide required machinery to pass environment variables\r\nto different operating systems in a generalized way\r\n(e.g. iOS Simulator only passes environment variables starting with a\r\ncertain prefix).",
      "score": 1.2933972
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10591",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10591/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10591/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10591/events",
      "html_url": "https://github.com/apple/swift/pull/10591",
      "id": 238655688,
      "number": 10591,
      "title": "[Clang importer] Make sure that the first argument of Set/Dictionary types are Hashable",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-26T20:12:13Z",
      "updated_at": "2017-06-26T23:26:26Z",
      "closed_at": "2017-06-26T20:51:40Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10591",
        "html_url": "https://github.com/apple/swift/pull/10591",
        "diff_url": "https://github.com/apple/swift/pull/10591.diff",
        "patch_url": "https://github.com/apple/swift/pull/10591.patch"
      },
      "body": "Extend the check to make sure that the first type argument to an\r\nimported Set or Dictionary type is Hashable actually checks\r\nstruct/enum types for Hashable conformances.\r\n\r\nFixes rdar://problem/30622665.\r\n",
      "score": 1.293096
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10593",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10593/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10593/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10593/events",
      "html_url": "https://github.com/apple/swift/pull/10593",
      "id": 238674766,
      "number": 10593,
      "title": "migrator: handle qualified replacement for member reference expression.  rdar://32845918",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-26T21:27:12Z",
      "updated_at": "2017-06-26T22:47:20Z",
      "closed_at": "2017-06-26T22:47:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10593",
        "html_url": "https://github.com/apple/swift/pull/10593",
        "diff_url": "https://github.com/apple/swift/pull/10593.diff",
        "patch_url": "https://github.com/apple/swift/pull/10593.patch"
      },
      "body": "Previously, we only handle dot syntax call expression for qualified\r\nreplacement, i.e. changing from A.a to B.b. This patch teaches the tool\r\nto handle the migration of member reference expression tool.",
      "score": 1.2934026
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10594",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10594/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10594/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10594/events",
      "html_url": "https://github.com/apple/swift/pull/10594",
      "id": 238677563,
      "number": 10594,
      "title": "IRGen: Use the right mangling function for outlined multipayload consumes of enums",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T21:39:08Z",
      "updated_at": "2017-06-27T15:28:11Z",
      "closed_at": "2017-06-27T15:28:11Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10594",
        "html_url": "https://github.com/apple/swift/pull/10594",
        "diff_url": "https://github.com/apple/swift/pull/10594.diff",
        "patch_url": "https://github.com/apple/swift/pull/10594.patch"
      },
      "body": "",
      "score": 1.297749
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10595",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10595/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10595/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10595/events",
      "html_url": "https://github.com/apple/swift/pull/10595",
      "id": 238682814,
      "number": 10595,
      "title": "[Exclusivity] Relax closure enforcement on separate stored properties",
      "user": {
        "login": "devincoughlin",
        "id": 2623655,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2623655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devincoughlin",
        "html_url": "https://github.com/devincoughlin",
        "followers_url": "https://api.github.com/users/devincoughlin/followers",
        "following_url": "https://api.github.com/users/devincoughlin/following{/other_user}",
        "gists_url": "https://api.github.com/users/devincoughlin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devincoughlin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devincoughlin/subscriptions",
        "organizations_url": "https://api.github.com/users/devincoughlin/orgs",
        "repos_url": "https://api.github.com/users/devincoughlin/repos",
        "events_url": "https://api.github.com/users/devincoughlin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devincoughlin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-26T22:03:36Z",
      "updated_at": "2017-07-06T03:19:45Z",
      "closed_at": "2017-07-06T01:52:57Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10595",
        "html_url": "https://github.com/apple/swift/pull/10595",
        "diff_url": "https://github.com/apple/swift/pull/10595.diff",
        "patch_url": "https://github.com/apple/swift/pull/10595.patch"
      },
      "body": "Make the static enforcement of accesses in noescape closures stored-property\r\nsensitive. This will relax the existing enforcement so that the following is\r\nnot diagnosed:\r\n\r\nstruct MyStruct {\r\n   var x = X()\r\n   var y = Y()\r\n\r\n  mutating\r\n  func foo() {\r\n    x.mutatesAndTakesClosure() {\r\n      _ = y.read()\r\n   }\r\n  }\r\n}\r\n\r\nTo do this, update the access summary analysis to be stored-property sensitive.\r\n\r\nrdar://problem/32987932\r\n",
      "score": 1.3521268
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10596",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10596/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10596/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10596/events",
      "html_url": "https://github.com/apple/swift/pull/10596",
      "id": 238688265,
      "number": 10596,
      "title": "[4.0] [GSB] Improve handling of concrete types, type aliases, recursion",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2017-06-26T22:32:04Z",
      "updated_at": "2017-06-27T16:42:18Z",
      "closed_at": "2017-06-27T16:42:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10596",
        "html_url": "https://github.com/apple/swift/pull/10596",
        "diff_url": "https://github.com/apple/swift/pull/10596.diff",
        "patch_url": "https://github.com/apple/swift/pull/10596.patch"
      },
      "body": "**Explanation**: Improves our handling of concrete conformances, type aliases in protocols, and same-type-to-concrete constraints in the generic signature builder to make them all more consistent and robust.\r\n**Scope**: Affects many uses of generic code; will reject a number of ill-formed cases that would previously crash the compiler.\r\n**Radar**: SR-4295 / rdar://problem/31372308, SR-4757 / rdar://problem/31912838, SR-4786 / rdar://problem/31955862, SR-5014 / rdar://problem/32402482, SR-4737 / rdar://problem/31905232, plus a few other dupes.\r\n**Risk**: Low-ish. The generic signature builder is key to all generics handling in Swift, so changes there can cause breakage... but it's also fairly well-tested via the standard library, so it's likely we'd have caught regressions.\r\n**Testing**: Compiler regression testing, plus lots of new tests from the various fixed radars.",
      "score": 1.2984004
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10597",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10597/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10597/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10597/events",
      "html_url": "https://github.com/apple/swift/pull/10597",
      "id": 238688720,
      "number": 10597,
      "title": "Demangler: handle suffixes in the form '.<n>'.",
      "user": {
        "login": "eeckstein",
        "id": 15270291,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eeckstein",
        "html_url": "https://github.com/eeckstein",
        "followers_url": "https://api.github.com/users/eeckstein/followers",
        "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
        "organizations_url": "https://api.github.com/users/eeckstein/orgs",
        "repos_url": "https://api.github.com/users/eeckstein/repos",
        "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eeckstein/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-26T22:34:42Z",
      "updated_at": "2017-06-26T23:28:03Z",
      "closed_at": "2017-06-26T23:24:34Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10597",
        "html_url": "https://github.com/apple/swift/pull/10597",
        "diff_url": "https://github.com/apple/swift/pull/10597.diff",
        "patch_url": "https://github.com/apple/swift/pull/10597.patch"
      },
      "body": "Demangle such suffixes as \"unmangled suffix\"\r\nIRGen still uses '.<n>' to disambiguate partial apply thunks and outlined copy functions.\r\n\r\nrdar://problem/32934962\r\n",
      "score": 1.2939875
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10598",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10598/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10598/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10598/events",
      "html_url": "https://github.com/apple/swift/pull/10598",
      "id": 238690116,
      "number": 10598,
      "title": "[overlay] Rename scheduleOneShot and scheduleRepeating",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-26T22:42:52Z",
      "updated_at": "2017-07-11T19:20:26Z",
      "closed_at": "2017-06-27T16:44:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10598",
        "html_url": "https://github.com/apple/swift/pull/10598",
        "diff_url": "https://github.com/apple/swift/pull/10598.diff",
        "patch_url": "https://github.com/apple/swift/pull/10598.patch"
      },
      "body": "rdar://29587696\r\n",
      "score": 1.3907229
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10599",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10599/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10599/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10599/events",
      "html_url": "https://github.com/apple/swift/pull/10599",
      "id": 238690476,
      "number": 10599,
      "title": "[4.0] [Clang importer] Infer @_downgrade_exhaustivity_check for new-to-2017 enum elements in Swift 3",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2017-06-26T22:45:11Z",
      "updated_at": "2017-06-27T15:09:46Z",
      "closed_at": "2017-06-27T04:47:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10599",
        "html_url": "https://github.com/apple/swift/pull/10599",
        "diff_url": "https://github.com/apple/swift/pull/10599.diff",
        "patch_url": "https://github.com/apple/swift/pull/10599.patch"
      },
      "body": "**Explanation**: In Swift 3 mode, downgrade the \"switch is not exhaustive\" error to a warning when the missing cases  were introduced in the 2017 SDKs. \r\n**Scope**: Fixes a source-compatibility problem with the newer SDKs for applications that are switching on enums provided by the system.\r\n**Radar**: rdar://problem/32824207.\r\n**Risk**: Low; we're inferring a new attribute in specific cases in the Clang importer, which only affects diagnostics.\r\n**Testing**: Compiler regression tests.",
      "score": 1.2954285
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10601",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10601/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10601/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10601/events",
      "html_url": "https://github.com/apple/swift/pull/10601",
      "id": 238691337,
      "number": 10601,
      "title": "[4.0] migrator: handle qualified replacement for member reference expression. rdar://32845918",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2017-06-26T22:49:58Z",
      "updated_at": "2017-06-27T00:55:48Z",
      "closed_at": "2017-06-27T00:55:45Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10601",
        "html_url": "https://github.com/apple/swift/pull/10601",
        "diff_url": "https://github.com/apple/swift/pull/10601.diff",
        "patch_url": "https://github.com/apple/swift/pull/10601.patch"
      },
      "body": "Previously, we only handle dot syntax call expression for qualified\r\nreplacement, i.e. changing from A.a to B.b. This patch teaches the tool\r\nto handle the migration of member reference expression tool.",
      "score": 1.2944722
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10602",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10602/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10602/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10602/events",
      "html_url": "https://github.com/apple/swift/pull/10602",
      "id": 238692420,
      "number": 10602,
      "title": "[Clang importer] Make sure that the first argument of Set/Dictionary types are Hashable.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-26T22:56:27Z",
      "updated_at": "2017-06-27T03:41:40Z",
      "closed_at": "2017-06-27T03:41:40Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10602",
        "html_url": "https://github.com/apple/swift/pull/10602",
        "diff_url": "https://github.com/apple/swift/pull/10602.diff",
        "patch_url": "https://github.com/apple/swift/pull/10602.patch"
      },
      "body": "**Explanation**: Eliminate a crash due to importing an Objective-C API with a `Set` or `Dictionary` aren't that is a non-`Hashable` `struct` or `enum` type. For example, instead of importing `NSSet<NSSet<id>>` as the nonsensical type `Set<Set<Any>>` (because `Set` isn't `Hashable`), import it as the safer `Set<AnyHashable>`.\r\n**Scope**: The scope of the fix is pretty limited, since Swift would complain or crash if you ever actually tried to import such an API. However, see **Risk**.\r\n**Radar**: rdar://problem/30622665\r\n**Risk**: The fix performs a conformance check in a new place in the Clang importer. We have seen some problems with performing conformance checks elsewhere in the Clang importer that manifest as circularity issues that would crash the compiler. It's hard to assess whether such circularities will come up beyond just \"qualify the compiler and see if it breaks\".\r\n**Testing**: Compiler regression testing.",
      "score": 1.29522
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10603",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10603/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10603/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10603/events",
      "html_url": "https://github.com/apple/swift/pull/10603",
      "id": 238692943,
      "number": 10603,
      "title": "[QoI] Improve diagnostics related to member calls",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-26T22:59:27Z",
      "updated_at": "2017-06-27T23:16:39Z",
      "closed_at": "2017-06-27T23:16:39Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10603",
        "html_url": "https://github.com/apple/swift/pull/10603",
        "diff_url": "https://github.com/apple/swift/pull/10603.diff",
        "patch_url": "https://github.com/apple/swift/pull/10603.patch"
      },
      "body": "When trying to diagnose problems related to calls where\r\nfunction is represented by a member of nominal type let's\r\nattempt to be more cautious while type-checking function\r\nexpression without it's arguments, because it could produce\r\nunrelated diagnostics.\r\n\r\nResolves: rdar://problem/32551313, rdar://problem/28456467, rdar://problem/31671195\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.3002639
    }
  ]
}

