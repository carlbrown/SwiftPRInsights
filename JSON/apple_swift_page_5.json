{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10884",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10884/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10884/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10884/events",
      "html_url": "https://github.com/apple/swift/pull/10884",
      "id": 242171147,
      "number": 10884,
      "title": "Sema: Explicitly infer requirements from subscript element type for materializeForSet",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T20:19:26Z",
      "updated_at": "2017-07-11T21:09:59Z",
      "closed_at": "2017-07-11T21:09:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10884",
        "html_url": "https://github.com/apple/swift/pull/10884",
        "diff_url": "https://github.com/apple/swift/pull/10884.diff",
        "patch_url": "https://github.com/apple/swift/pull/10884.patch"
      },
      "body": "The interface type for materializeForSet does not mention the\r\nelement type of a subscript, so Sema was not inferring\r\nrequirements that were implied by the element type but not\r\nexplicitly stated in the generic signature.\r\n\r\nThis led to assertion failures in SILGen because the\r\nmaterializeForSet calls the getter and setter, which does\r\nhave these requirements.\r\n\r\nFixes <rdar://problem/33219034>, <https://bugs.swift.org/browse/SR-5420>.",
      "score": 1.5446227
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10885",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10885/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10885/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10885/events",
      "html_url": "https://github.com/apple/swift/pull/10885",
      "id": 242178299,
      "number": 10885,
      "title": "SimplifyCFG: JumpThread to facilitate ARC removal",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-07-11T20:46:14Z",
      "updated_at": "2017-07-12T18:35:16Z",
      "closed_at": "2017-07-12T18:35:16Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10885",
        "html_url": "https://github.com/apple/swift/pull/10885",
        "diff_url": "https://github.com/apple/swift/pull/10885.diff",
        "patch_url": "https://github.com/apple/swift/pull/10885.patch"
      },
      "body": "It is beneficial to jump thread if we can remove a retain/release pair.\r\n\r\nrdar://33099675\r\nSR-5360",
      "score": 1.5510472
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10886",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10886/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10886/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10886/events",
      "html_url": "https://github.com/apple/swift/pull/10886",
      "id": 242179464,
      "number": 10886,
      "title": "[4.0]Name translation: Allow type name translation when cursor points to constructor call. rdar://33163114",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2017-07-11T20:50:54Z",
      "updated_at": "2017-07-11T22:49:53Z",
      "closed_at": "2017-07-11T22:49:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10886",
        "html_url": "https://github.com/apple/swift/pull/10886",
        "diff_url": "https://github.com/apple/swift/pull/10886.diff",
        "patch_url": "https://github.com/apple/swift/pull/10886.patch"
      },
      "body": "",
      "score": 1.5453578
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10887",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10887/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10887/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10887/events",
      "html_url": "https://github.com/apple/swift/pull/10887",
      "id": 242181915,
      "number": 10887,
      "title": "[4.0] [Constraint system] Improve SE-0110 exception by allowing optional in…",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2017-07-11T20:59:50Z",
      "updated_at": "2017-07-11T23:06:12Z",
      "closed_at": "2017-07-11T23:04:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10887",
        "html_url": "https://github.com/apple/swift/pull/10887",
        "diff_url": "https://github.com/apple/swift/pull/10887.diff",
        "patch_url": "https://github.com/apple/swift/pull/10887.patch"
      },
      "body": "…jection.\r\n\r\nThere was an oversight in the exception that was added to SE-0110 to\r\nmaintain compatibility for closure arguments. We were not allowing\r\noptional injection to happen for the closure being passed in, so things\r\nlike:\r\n```\r\n  func test(_ fn: ((Int, Int))->()) {}\r\n  test { x, y in }\r\n```\r\nworked, but\r\n```\r\n  func test(_ fn: (((Int, Int))->())?) {}\r\n  test { x, y in }\r\n```\r\ndid not.\r\n\r\nFixes SR-5433 (rdar://problem/33239714).\r\n\r\n(cherry picked from commit 8605b29951cf27c36c1bb26b548efe1c754e9927)\r\n",
      "score": 1.5455015
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10888",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10888/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10888/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10888/events",
      "html_url": "https://github.com/apple/swift/pull/10888",
      "id": 242189044,
      "number": 10888,
      "title": "Sema: Fix type checking without applying solution in presence of anonymous closure parameters",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-11T21:27:27Z",
      "updated_at": "2017-07-12T00:26:35Z",
      "closed_at": "2017-07-12T00:26:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10888",
        "html_url": "https://github.com/apple/swift/pull/10888",
        "diff_url": "https://github.com/apple/swift/pull/10888.diff",
        "patch_url": "https://github.com/apple/swift/pull/10888.patch"
      },
      "body": "Even if we don't apply the solution, we still end up writing\r\ntypes into ParamDecls of closures contained the expression.\r\n\r\nMake sure this is idempotent by disabling 'cleanup', which\r\navoids setting them to ErrorTypes, and teaching ExprCleaner\r\nto clear out types of VarDecls.\r\n\r\nThis is a hack that will get better once the constraint\r\nsystem type map stuff is further along.\r\n\r\nFixes <rdar://problem/33219081>.",
      "score": 1.546119
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10889",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10889/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10889/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10889/events",
      "html_url": "https://github.com/apple/swift/pull/10889",
      "id": 242190265,
      "number": 10889,
      "title": "Consistently Pass Parameter Flags",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 25,
      "created_at": "2017-07-11T21:32:27Z",
      "updated_at": "2017-07-19T20:14:54Z",
      "closed_at": "2017-07-19T20:14:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10889",
        "html_url": "https://github.com/apple/swift/pull/10889",
        "diff_url": "https://github.com/apple/swift/pull/10889.diff",
        "patch_url": "https://github.com/apple/swift/pull/10889.patch"
      },
      "body": "This massive pile of code causes the compiler to retain and consistently track parameter type flags through the various representation changes we make during the compilation process.  The idea is that we can rely on these bits instead of `InOutType` et al. and use them to propagate more structural invariants into lower phases instead of relying on its presence or absence.  \r\n\r\nThis patch also continues the war against `InOutType` by reducing the usages of `is<InOutType>` and `getAs<InOutType>` where possible.  The blessed phase of compilation that should ultimately be able to utter `InOutType::get` is Sema - though I remain hopeful that we can eventually remove this entirely and just use the parameter bits.  `is<InOutType>` and `getAs<InOutType>` are also allowed in the AST Verifier until we can push the `InOutType` changes down as a proper structural invariant.  Everyone else should only speak about base types or ask Exprs and Decls for further information about `inout`-ness.\r\n\r\nThis patch is supposed to be NFC, but enforcing invariants necessitated changing a hack that altered a diagnostic (see `test/expr/expressions.swift`).",
      "score": 1.6022379
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10890",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10890/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10890/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10890/events",
      "html_url": "https://github.com/apple/swift/pull/10890",
      "id": 242197438,
      "number": 10890,
      "title": "[stdlib] Spot fix for https://bugs.swift.org/browse/SR-5401",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 11,
      "created_at": "2017-07-11T22:01:56Z",
      "updated_at": "2017-07-24T22:15:39Z",
      "closed_at": "2017-07-12T00:01:30Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10890",
        "html_url": "https://github.com/apple/swift/pull/10890",
        "diff_url": "https://github.com/apple/swift/pull/10890.diff",
        "patch_url": "https://github.com/apple/swift/pull/10890.patch"
      },
      "body": "The simplest way to keep the string buffer alive is simply to always grab its\r\niterator, even if we're not going to use it.  Thanks @milseman for that idea and\r\n@jckarter for the diagnosis help!\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves [SR-5401](https://bugs.swift.org/browse/SR-5401).\r\n",
      "score": 1.6408916
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10891",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10891/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10891/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10891/events",
      "html_url": "https://github.com/apple/swift/pull/10891",
      "id": 242199542,
      "number": 10891,
      "title": "[QoI] NFC: Remove use of `.flush()` when emitting notes for missing `try`",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T22:10:45Z",
      "updated_at": "2017-07-11T22:40:44Z",
      "closed_at": "2017-07-11T22:40:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10891",
        "html_url": "https://github.com/apple/swift/pull/10891",
        "diff_url": "https://github.com/apple/swift/pull/10891.diff",
        "patch_url": "https://github.com/apple/swift/pull/10891.patch"
      },
      "body": "\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.5459594
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10892",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10892/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10892/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10892/events",
      "html_url": "https://github.com/apple/swift/pull/10892",
      "id": 242202146,
      "number": 10892,
      "title": "Inliner: Add @_semantics(\"inline_late\")",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T22:23:07Z",
      "updated_at": "2017-07-12T18:36:40Z",
      "closed_at": "2017-07-12T18:36:40Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10892",
        "html_url": "https://github.com/apple/swift/pull/10892",
        "diff_url": "https://github.com/apple/swift/pull/10892.diff",
        "patch_url": "https://github.com/apple/swift/pull/10892.patch"
      },
      "body": "@_semantics(inline_late) for inlining only outside the standard library in the\r\nlate performance inliner.\r\n\r\nIt can be beneficial to run the inliner only outside the standard library when\r\ncode size has been reduced far enough that inlining can take place based on the\r\ninliner's heuristics.\r\n\r\nrdar://33099675\r\nSR-5360",
      "score": 1.5518373
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10894",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10894/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10894/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10894/events",
      "html_url": "https://github.com/apple/swift/pull/10894",
      "id": 242206800,
      "number": 10894,
      "title": "[Type checker] Handle inferred @objc for all accessor kinds.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T22:47:48Z",
      "updated_at": "2017-07-11T23:25:31Z",
      "closed_at": "2017-07-11T23:14:56Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10894",
        "html_url": "https://github.com/apple/swift/pull/10894",
        "diff_url": "https://github.com/apple/swift/pull/10894.diff",
        "patch_url": "https://github.com/apple/swift/pull/10894.patch"
      },
      "body": "Due to the wanton use of 'if' rather than 'switch', non-observing,\r\nnon-get/set ccessors that got marked '@objc' would cause an\r\nassertion. Fix the materializeForSet case from the bug report as well\r\nas the addressor case.\r\n\r\nFixes SR-5025 / rdar://problem/32426538.",
      "score": 1.5464747
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10895",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10895/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10895/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10895/events",
      "html_url": "https://github.com/apple/swift/pull/10895",
      "id": 242207279,
      "number": 10895,
      "title": "SILGen: Do a read-only projection of a writable KeyPath when the lvalue is only read.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T22:50:28Z",
      "updated_at": "2017-07-12T00:14:58Z",
      "closed_at": "2017-07-12T00:14:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10895",
        "html_url": "https://github.com/apple/swift/pull/10895",
        "diff_url": "https://github.com/apple/swift/pull/10895.diff",
        "patch_url": "https://github.com/apple/swift/pull/10895.patch"
      },
      "body": "If we project an lvalue using a KeyPath, but the lvalue is only read from, we don't want to trigger writebacks, observers, or other side effects that a mutable projection would normally need to induce. Fixes SR-5338 | rdar://problem/33135489.",
      "score": 1.5467345
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10896",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10896/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10896/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10896/events",
      "html_url": "https://github.com/apple/swift/pull/10896",
      "id": 242211027,
      "number": 10896,
      "title": "[4.0] [Type checker] Don't allow type variables to bind to dependent members.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T23:12:55Z",
      "updated_at": "2017-07-12T04:13:13Z",
      "closed_at": "2017-07-12T01:06:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10896",
        "html_url": "https://github.com/apple/swift/pull/10896",
        "diff_url": "https://github.com/apple/swift/pull/10896.diff",
        "patch_url": "https://github.com/apple/swift/pull/10896.patch"
      },
      "body": "**Explanation**: Addresses a type inference regression introduced in Swift 4 involving certain same-type constraints among two interdependent generic type parameters.\r\n**Scope**: The behavioral change affects code with a set of interesting same-type constraints (we've seen two user-reported instances of this), although the solution is a more general improvement to the type checker.\r\n**Radar**: rdar://problem/32697033 (+ dupes)\r\n**Risk**: Low; in theory we're delaying some type variable bindings that could cause type inference failures, but is appears to be highly unlikely\r\n**Testing**: Compiler regression testing, new tests, source compatibility suite",
      "score": 1.547165
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10897",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10897/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10897/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10897/events",
      "html_url": "https://github.com/apple/swift/pull/10897",
      "id": 242212391,
      "number": 10897,
      "title": "[ClangImporter] Generic parameters can be Hashable too!",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-11T23:21:23Z",
      "updated_at": "2017-07-12T02:17:44Z",
      "closed_at": "2017-07-12T02:12:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10897",
        "html_url": "https://github.com/apple/swift/pull/10897",
        "diff_url": "https://github.com/apple/swift/pull/10897.diff",
        "patch_url": "https://github.com/apple/swift/pull/10897.patch"
      },
      "body": "#10591 made sure we didn't try to construct Sets and Dictionaries with a non-Hashable key. However, that commit was a little too restrictive: there was no handling for imported generic parameters that were constrained to inherit from NSObject. Fortunately, recovering that information is fairly straightforward.\r\n\r\nrdar://problem/33222646",
      "score": 1.5475763
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10898",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10898/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10898/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10898/events",
      "html_url": "https://github.com/apple/swift/pull/10898",
      "id": 242213158,
      "number": 10898,
      "title": "[4.0] [Type checker] Handle inferred @objc for all accessor kinds.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-11T23:26:16Z",
      "updated_at": "2017-07-12T04:14:02Z",
      "closed_at": "2017-07-12T01:06:52Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10898",
        "html_url": "https://github.com/apple/swift/pull/10898",
        "diff_url": "https://github.com/apple/swift/pull/10898.diff",
        "patch_url": "https://github.com/apple/swift/pull/10898.patch"
      },
      "body": "**Explanation**: The Swift compiler would assert when given an `@objc` extension with a computed property in it. Suppress the `@objc` in the asserting case (the synthesized `materializeForSet`) and complain in a previously-untested-but-broken case involving addressors.\r\n**Scope**: Only affects the narrow cases of `@objc` extensions with properties.\r\n**Radar / SR**: SR-5025 / rdar://problem/32426538.\r\n**Risk**: Basically zero; expands an incomplete set of `if` statements into a fully-covered switch on accessor kinds.\r\n**Testing**: Compiler regression testing.",
      "score": 1.5472742
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10899",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10899/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10899/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10899/events",
      "html_url": "https://github.com/apple/swift/pull/10899",
      "id": 242221258,
      "number": 10899,
      "title": "[4.0] SILGen: Do a read-only projection of a writable KeyPath when the lvalue is only read.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-12T00:19:40Z",
      "updated_at": "2017-07-12T22:23:38Z",
      "closed_at": "2017-07-12T22:23:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10899",
        "html_url": "https://github.com/apple/swift/pull/10899",
        "diff_url": "https://github.com/apple/swift/pull/10899.diff",
        "patch_url": "https://github.com/apple/swift/pull/10899.patch"
      },
      "body": "Explanation: Reading from a value with a writable KeyPath would perform a mutating projection at runtime, causing unexpected invocation of setters and observers.\r\n\r\nScope: Anyone using mutable key paths in read-only operations would see unwanted side effects from setters or observers on read-only accesses.\r\n\r\nIssue: rdar://problem/33135489 | SR-5338\r\n\r\nRisk: Low, small change to key path codegen\r\n\r\nTesting: Swift CI",
      "score": 1.5538818
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10900",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10900/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10900/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10900/events",
      "html_url": "https://github.com/apple/swift/pull/10900",
      "id": 242237234,
      "number": 10900,
      "title": "[4.0] [ClangImporter] Generic parameters can be Hashable too",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-12T02:19:59Z",
      "updated_at": "2017-07-12T03:40:00Z",
      "closed_at": "2017-07-12T03:39:57Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10900",
        "html_url": "https://github.com/apple/swift/pull/10900",
        "diff_url": "https://github.com/apple/swift/pull/10900.diff",
        "patch_url": "https://github.com/apple/swift/pull/10900.patch"
      },
      "body": "- **Explanation**: When importing NSSet and NSDictionary, we need to make sure the key type is Hashable in Swift. For classes, that just means being a subclass of NSObject. However, the logic to check this didn't handle ObjC lightweight generics that were constrained to being subclasses of NSObject. This is a regression from Swift 3.1.\r\n- **Scope**: Affects NSSet and NSDictionary members of Objective-C generic classes.\r\n- **Issue**: rdar://problem/33222646\r\n- **Reviewed by**: @DougGregor   \r\n- **Risk**: Low. This allows strictly more cases then in previous Swift 4.0 betas, but it's going back to previous behavior that already worked.\r\n- **Testing**: Added new Swift regression tests, verified that the original test project now compiles.",
      "score": 1.54942
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10901",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10901/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10901/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10901/events",
      "html_url": "https://github.com/apple/swift/pull/10901",
      "id": 242279265,
      "number": 10901,
      "title": "Fix some bridging and reabstraction bugs with non-imported C and block functions",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-12T07:02:34Z",
      "updated_at": "2017-07-12T08:29:29Z",
      "closed_at": "2017-07-12T08:23:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10901",
        "html_url": "https://github.com/apple/swift/pull/10901",
        "diff_url": "https://github.com/apple/swift/pull/10901.diff",
        "patch_url": "https://github.com/apple/swift/pull/10901.patch"
      },
      "body": "",
      "score": 1.5530843
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10903",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10903/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10903/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10903/events",
      "html_url": "https://github.com/apple/swift/pull/10903",
      "id": 242475660,
      "number": 10903,
      "title": "[overlay] Add INRideOption",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-12T18:37:35Z",
      "updated_at": "2017-07-12T21:57:21Z",
      "closed_at": "2017-07-12T21:57:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10903",
        "html_url": "https://github.com/apple/swift/pull/10903",
        "diff_url": "https://github.com/apple/swift/pull/10903.diff",
        "patch_url": "https://github.com/apple/swift/pull/10903.patch"
      },
      "body": "<rdar://problem/32935297>",
      "score": 1.5627035
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10904",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10904/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10904/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10904/events",
      "html_url": "https://github.com/apple/swift/pull/10904",
      "id": 242479324,
      "number": 10904,
      "title": "master-next: miscellaneous fixes",
      "user": {
        "login": "bob-wilson",
        "id": 15724724,
        "avatar_url": "https://avatars1.githubusercontent.com/u/15724724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bob-wilson",
        "html_url": "https://github.com/bob-wilson",
        "followers_url": "https://api.github.com/users/bob-wilson/followers",
        "following_url": "https://api.github.com/users/bob-wilson/following{/other_user}",
        "gists_url": "https://api.github.com/users/bob-wilson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bob-wilson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bob-wilson/subscriptions",
        "organizations_url": "https://api.github.com/users/bob-wilson/orgs",
        "repos_url": "https://api.github.com/users/bob-wilson/repos",
        "events_url": "https://api.github.com/users/bob-wilson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bob-wilson/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2017-07-12T18:50:56Z",
      "updated_at": "2017-07-12T18:51:11Z",
      "closed_at": "2017-07-12T18:51:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10904",
        "html_url": "https://github.com/apple/swift/pull/10904",
        "diff_url": "https://github.com/apple/swift/pull/10904.diff",
        "patch_url": "https://github.com/apple/swift/pull/10904.patch"
      },
      "body": "This PR fixes a few minor issues that were preventing the master-next branch from building. With these changes, we get through the build, but not yet the tests.",
      "score": 1.5619099
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10905",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10905/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10905/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10905/events",
      "html_url": "https://github.com/apple/swift/pull/10905",
      "id": 242490187,
      "number": 10905,
      "title": "Stop swallowing test interruption exceptions thrown during XCTAssert evaluation",
      "user": {
        "login": "briancroom",
        "id": 1062518,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1062518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/briancroom",
        "html_url": "https://github.com/briancroom",
        "followers_url": "https://api.github.com/users/briancroom/followers",
        "following_url": "https://api.github.com/users/briancroom/following{/other_user}",
        "gists_url": "https://api.github.com/users/briancroom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/briancroom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/briancroom/subscriptions",
        "organizations_url": "https://api.github.com/users/briancroom/orgs",
        "repos_url": "https://api.github.com/users/briancroom/repos",
        "events_url": "https://api.github.com/users/briancroom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/briancroom/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-12T19:32:13Z",
      "updated_at": "2017-07-13T00:25:08Z",
      "closed_at": "2017-07-13T00:22:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10905",
        "html_url": "https://github.com/apple/swift/pull/10905",
        "diff_url": "https://github.com/apple/swift/pull/10905.diff",
        "patch_url": "https://github.com/apple/swift/pull/10905.patch"
      },
      "body": "<!-- What's in this pull request? -->\r\nRethrow any test interruption exceptions that get caught, mirroring the behavior of the Objective-C XCTAssert macros.\r\n\r\n<rdar://problem/33255447>",
      "score": 1.563857
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10906",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10906/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10906/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10906/events",
      "html_url": "https://github.com/apple/swift/pull/10906",
      "id": 242500364,
      "number": 10906,
      "title": "IRGen: Make sure to use the C function type's alignment for indirect byval arguments",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-07-12T20:11:09Z",
      "updated_at": "2017-07-13T15:02:40Z",
      "closed_at": "2017-07-13T15:02:40Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10906",
        "html_url": "https://github.com/apple/swift/pull/10906",
        "diff_url": "https://github.com/apple/swift/pull/10906.diff",
        "patch_url": "https://github.com/apple/swift/pull/10906.patch"
      },
      "body": "\r\nrdar://33242303\r\n",
      "score": 1.5684627
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10908",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10908/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10908/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10908/events",
      "html_url": "https://github.com/apple/swift/pull/10908",
      "id": 242507960,
      "number": 10908,
      "title": "Upgrade some deprecation warnings from Swift 3 to errors in Swift 4.",
      "user": {
        "login": "huonw",
        "id": 1203825,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1203825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/huonw",
        "html_url": "https://github.com/huonw",
        "followers_url": "https://api.github.com/users/huonw/followers",
        "following_url": "https://api.github.com/users/huonw/following{/other_user}",
        "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/huonw/subscriptions",
        "organizations_url": "https://api.github.com/users/huonw/orgs",
        "repos_url": "https://api.github.com/users/huonw/repos",
        "events_url": "https://api.github.com/users/huonw/events{/privacy}",
        "received_events_url": "https://api.github.com/users/huonw/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-12T20:38:28Z",
      "updated_at": "2017-07-13T00:10:41Z",
      "closed_at": "2017-07-12T23:25:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10908",
        "html_url": "https://github.com/apple/swift/pull/10908",
        "diff_url": "https://github.com/apple/swift/pull/10908.diff",
        "patch_url": "https://github.com/apple/swift/pull/10908.patch"
      },
      "body": "Fixes rdar://problem/28961650 .\r\n\r\nIndividual commits for relatively easy reverting, if necessary.",
      "score": 1.5641254
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10909",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10909/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10909/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10909/events",
      "html_url": "https://github.com/apple/swift/pull/10909",
      "id": 242515885,
      "number": 10909,
      "title": "[QoI] Don't try to lookup members on incorrect type during Objective-C KeyPath validation",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-12T21:07:35Z",
      "updated_at": "2017-07-12T21:29:01Z",
      "closed_at": "2017-07-12T21:29:01Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10909",
        "html_url": "https://github.com/apple/swift/pull/10909",
        "diff_url": "https://github.com/apple/swift/pull/10909.diff",
        "patch_url": "https://github.com/apple/swift/pull/10909.patch"
      },
      "body": "While trying to validate Objective-C keypath components\r\ndon't assume that type of the component is always correct, check\r\nbefore trying to see if it's bridged type or has members.\r\n\r\nResolves: rdar://problem/33044867\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.5637977
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10910",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10910/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10910/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10910/events",
      "html_url": "https://github.com/apple/swift/pull/10910",
      "id": 242520438,
      "number": 10910,
      "title": "Sema: Explicitly infer requirements from subscript element type for materializeForSet [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-12T21:24:45Z",
      "updated_at": "2017-07-14T23:34:35Z",
      "closed_at": "2017-07-14T23:34:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10910",
        "html_url": "https://github.com/apple/swift/pull/10910",
        "diff_url": "https://github.com/apple/swift/pull/10910.diff",
        "patch_url": "https://github.com/apple/swift/pull/10910.patch"
      },
      "body": "* Description: Fixes a SILGen assertion failure when compiling a generic subscript where some of the requirements on the generic signature are inferred from the element type. We were not computing the generic signature of the materializeForSet accessor properly in this case.\r\n\r\n* Scope of the issue: If the requirement is explicitly stated, it works, but then we emit a warning telling the user to remove it. Reported externally\r\n\r\n* Origination: Generic subscripts are a new feature in 4.0\r\n\r\n* Tested: New test added\r\n\r\n* Reviewed by: @DougGregor \r\n\r\n* Radar: <rdar://problem/33219034>",
      "score": 1.5786502
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10911",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10911/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10911/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10911/events",
      "html_url": "https://github.com/apple/swift/pull/10911",
      "id": 242521715,
      "number": 10911,
      "title": "Fix regression with lazy properties and add another test case [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-12T21:30:00Z",
      "updated_at": "2017-07-15T02:59:24Z",
      "closed_at": "2017-07-15T02:59:24Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10911",
        "html_url": "https://github.com/apple/swift/pull/10911",
        "diff_url": "https://github.com/apple/swift/pull/10911.diff",
        "patch_url": "https://github.com/apple/swift/pull/10911.patch"
      },
      "body": "* Description: When type checking an expression without applying the solution, we would set the types of anonymous closure parameters to ErrorType. This resulted in SILGen crashes because of un-typechecked AST when a lazy property was initialized by an expression containing a closure with anonymous parameters.\r\n\r\n* Origination: Regression from another set of fixes to 'lazy' in 4.0.\r\n\r\n* Tested: New test added. Also add another test for an odd behavior with 'lazy' that worked in 3.1 but we don't want to allow anymore. This second part is not really necessary for 4.0 branch, but it's just a new test.\r\n\r\n* Reviewed by: Pavel Yaskevich (first two patches), Mark Lacey (ASan fix)\r\n\r\n* Radar: <rdar://problem/33219081>",
      "score": 1.5797052
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10912",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10912/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10912/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10912/events",
      "html_url": "https://github.com/apple/swift/pull/10912",
      "id": 242522232,
      "number": 10912,
      "title": "[4.0] [QoI] Don't try to lookup members on incorrect type during Objective-C KeyPath validation",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2017-07-12T21:32:16Z",
      "updated_at": "2017-07-13T03:02:50Z",
      "closed_at": "2017-07-13T03:02:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10912",
        "html_url": "https://github.com/apple/swift/pull/10912",
        "diff_url": "https://github.com/apple/swift/pull/10912.diff",
        "patch_url": "https://github.com/apple/swift/pull/10912.patch"
      },
      "body": "* Description: While trying to validate Objective-C keypath components\r\ndon't assume that type of the component is always correct, check\r\nbefore trying to see if it's bridged type or has members.\r\n\r\n* Scope of the issue: Fixes crasher related to the member lookup on the invalid type while\r\ntrying to validate Objective-C KeyPath components before type-checking.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: Swift CI.\r\n\r\n* Reviewed by: Doug Gregor.\r\n\r\n* Resolves: rdar://problem/33044867\r\n(cherry picked from commit 481401f6c3c754c5e88b496b2353f2488fb4b584)\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.5656221
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10913",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10913/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10913/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10913/events",
      "html_url": "https://github.com/apple/swift/pull/10913",
      "id": 242524120,
      "number": 10913,
      "title": "KeyPaths: Ensure mutation accesses are ended in the correct order.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-12T21:40:36Z",
      "updated_at": "2017-07-13T17:07:56Z",
      "closed_at": "2017-07-12T23:35:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10913",
        "html_url": "https://github.com/apple/swift/pull/10913",
        "diff_url": "https://github.com/apple/swift/pull/10913.diff",
        "patch_url": "https://github.com/apple/swift/pull/10913.patch"
      },
      "body": "Using an Array to hold onto all the cleanup objects for an access happens to destroy the cleanup objects in FIFO order (and it's probably not a good idea to rely on Array cleaning itself up in any particular order at all). For want of proper accessor coroutines, chain the cleanup objects in a linked list so that they reliably get destroyed in the desired inside-out order. Fixes SR-5442 | rdar://problem/33267959.",
      "score": 1.5698094
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10914",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10914/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10914/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10914/events",
      "html_url": "https://github.com/apple/swift/pull/10914",
      "id": 242527565,
      "number": 10914,
      "title": "Add benchmarks for a number of NSStringAPI functions",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 17,
      "created_at": "2017-07-12T21:55:44Z",
      "updated_at": "2017-07-13T18:38:52Z",
      "closed_at": "2017-07-13T18:33:36Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10914",
        "html_url": "https://github.com/apple/swift/pull/10914",
        "diff_url": "https://github.com/apple/swift/pull/10914.diff",
        "patch_url": "https://github.com/apple/swift/pull/10914.patch"
      },
      "body": "This adds a number of simple benchmarks for common NSString APIs that are exposed on String",
      "score": 1.5703782
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10915",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10915/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10915/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10915/events",
      "html_url": "https://github.com/apple/swift/pull/10915",
      "id": 242528554,
      "number": 10915,
      "title": "[4.0] KeyPaths: Ensure mutation accesses are ended in the correct order.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-12T22:00:24Z",
      "updated_at": "2017-07-13T20:51:17Z",
      "closed_at": "2017-07-13T20:51:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10915",
        "html_url": "https://github.com/apple/swift/pull/10915",
        "diff_url": "https://github.com/apple/swift/pull/10915.diff",
        "patch_url": "https://github.com/apple/swift/pull/10915.patch"
      },
      "body": "Explanation: When mutating through a writable KeyPath with nested computed components, the accesses would be ended in the wrong order.\r\n\r\nScope: Writing through keypaths with nested value-semantics computed property components behaves incorrectly.\r\n\r\nIssue: SR-5442 | rdar://problem/33267959\r\n\r\nRisk: Low, small change to key path implementation\r\n\r\nTesting: Swift CI",
      "score": 1.5710641
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10916",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10916/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10916/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10916/events",
      "html_url": "https://github.com/apple/swift/pull/10916",
      "id": 242528584,
      "number": 10916,
      "title": "SE-0157: Add a frontend flag `-enable-recursive-constraints`.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-12T22:00:31Z",
      "updated_at": "2017-07-12T23:39:10Z",
      "closed_at": "2017-07-12T23:38:13Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10916",
        "html_url": "https://github.com/apple/swift/pull/10916",
        "diff_url": "https://github.com/apple/swift/pull/10916.diff",
        "patch_url": "https://github.com/apple/swift/pull/10916.patch"
      },
      "body": "Introduce `-enable-recursive-constraints` to disable the error about\r\ndirect recursion within a protocol definition. The implementation of\r\nrecursive protocol constraints is incomplete, but might be useful for\r\nexperimentation.",
      "score": 1.56486
    }
  ]
}

