{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10917",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10917/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10917/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10917/events",
      "html_url": "https://github.com/apple/swift/pull/10917",
      "id": 242528589,
      "number": 10917,
      "title": "[swift-4.0-branch][overlay] Add INRideOption",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-12T22:00:32Z",
      "updated_at": "2017-07-13T17:19:56Z",
      "closed_at": "2017-07-13T17:19:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10917",
        "html_url": "https://github.com/apple/swift/pull/10917",
        "diff_url": "https://github.com/apple/swift/pull/10917.diff",
        "patch_url": "https://github.com/apple/swift/pull/10917.patch"
      },
      "body": "* Explanation: Fixes backward compatibility for the code using INRideOption.usesMeteredFare\n* Scope of Issue: A property has different types in Swift 3 and Swift 4.\n* Risk: Minimal\n* Reviewed By: Willem Mattelaer\n* Testing: Automated test suite + a new test case\n* Directions for QA: N/A\n* Radar: <rdar://problem/32935297>\n\n(cherry picked from commit 923468be6b294cb4e8b0e718e52b945c4f6a18a2)",
      "score": 1.5700201
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10918",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10918/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10918/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10918/events",
      "html_url": "https://github.com/apple/swift/pull/10918",
      "id": 242529483,
      "number": 10918,
      "title": "[swift-4.0-branch-07-11-2017][overlay] Add INRideOption",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-12T22:04:13Z",
      "updated_at": "2017-07-13T20:42:18Z",
      "closed_at": "2017-07-13T20:42:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10918",
        "html_url": "https://github.com/apple/swift/pull/10918",
        "diff_url": "https://github.com/apple/swift/pull/10918.diff",
        "patch_url": "https://github.com/apple/swift/pull/10918.patch"
      },
      "body": "See https://github.com/apple/swift/pull/10917 for CCC\n\n<rdar://problem/32935297>\n\n(cherry picked from commit 923468be6b294cb4e8b0e718e52b945c4f6a18a2)",
      "score": 1.5710397
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10920",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10920/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10920/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10920/events",
      "html_url": "https://github.com/apple/swift/pull/10920",
      "id": 242538743,
      "number": 10920,
      "title": "[4.0] Upgrade some deprecation warnings from Swift 3 to errors in Swift 4",
      "user": {
        "login": "huonw",
        "id": 1203825,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1203825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/huonw",
        "html_url": "https://github.com/huonw",
        "followers_url": "https://api.github.com/users/huonw/followers",
        "following_url": "https://api.github.com/users/huonw/following{/other_user}",
        "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/huonw/subscriptions",
        "organizations_url": "https://api.github.com/users/huonw/orgs",
        "repos_url": "https://api.github.com/users/huonw/repos",
        "events_url": "https://api.github.com/users/huonw/events{/privacy}",
        "received_events_url": "https://api.github.com/users/huonw/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-12T22:51:48Z",
      "updated_at": "2017-07-13T01:21:59Z",
      "closed_at": "2017-07-13T01:21:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10920",
        "html_url": "https://github.com/apple/swift/pull/10920",
        "diff_url": "https://github.com/apple/swift/pull/10920.diff",
        "patch_url": "https://github.com/apple/swift/pull/10920.patch"
      },
      "body": "4.0 merge of #10908 .\r\n\r\n**Explanation**: Some features were deprecated (with warnings) in 3.x versions, which we can switch to hard errors in 4.0.\r\n**Scope**: This is source breaking, but only for things that have at least 6 months of warnings of deprecation and which we've explicitly decided we don't want, and several of them seem to have migration help.\r\n**Radar**: rdar://problem/28961650\r\n**Risk**: Low in terms of compiler crashes etc, since this just adds switches to choose between some pairs of `ERROR` and `WARNING` diagnostic IDs. There's also relatively low risk of unacceptable source breakage, as we've been alerting people to our intentions to break for a while.\r\n**Testing**: CI testing, including a new test that explicitly checks that all of these remain warnings in Swift 3, and all are errors in Swift 4, as well as running the source compatibility suite.",
      "score": 1.5657743
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10921",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10921/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10921/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10921/events",
      "html_url": "https://github.com/apple/swift/pull/10921",
      "id": 242547904,
      "number": 10921,
      "title": "[di] Extract out a helper routine. NFC intended.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-12T23:50:58Z",
      "updated_at": "2017-07-13T00:21:52Z",
      "closed_at": "2017-07-13T00:18:11Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10921",
        "html_url": "https://github.com/apple/swift/pull/10921",
        "diff_url": "https://github.com/apple/swift/pull/10921.diff",
        "patch_url": "https://github.com/apple/swift/pull/10921.patch"
      },
      "body": "",
      "score": 1.5659513
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10922",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10922/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10922/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10922/events",
      "html_url": "https://github.com/apple/swift/pull/10922",
      "id": 242550240,
      "number": 10922,
      "title": "Small Ownership fixes",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T00:07:38Z",
      "updated_at": "2017-07-13T00:50:12Z",
      "closed_at": "2017-07-13T00:49:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10922",
        "html_url": "https://github.com/apple/swift/pull/10922",
        "diff_url": "https://github.com/apple/swift/pull/10922.diff",
        "patch_url": "https://github.com/apple/swift/pull/10922.patch"
      },
      "body": "This PR contains two small ownership verifier fixes:\r\n\r\n1. A store_weak is not a consuming operation of an owned value. Instead it is a use that just requires the value to be stored to be live.\r\n2. dealloc_partial_ref takes in an owned argument and a trivial metatype. Before we were just checking all parameters as being owned arguments.\r\n\r\n<rdar://problem/31880847>",
      "score": 1.5662426
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10923",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10923/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10923/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10923/events",
      "html_url": "https://github.com/apple/swift/pull/10923",
      "id": 242551000,
      "number": 10923,
      "title": "Small is lowering of value metatype changes",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-13T00:12:57Z",
      "updated_at": "2017-07-13T01:03:46Z",
      "closed_at": "2017-07-13T01:03:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10923",
        "html_url": "https://github.com/apple/swift/pull/10923",
        "diff_url": "https://github.com/apple/swift/pull/10923.diff",
        "patch_url": "https://github.com/apple/swift/pull/10923.patch"
      },
      "body": "This PR contains two different improvements around metatypes and verification:\r\n\r\n1. It takes the logic for isLoweringOf from the verifier and puts it on SILType. This means that we can use this query in other contexts (for instance in asserts on SILBuilder).\r\n2. I put the isLoweringOf assertion that normally occurs in the verifier also in the SILBuilder code for createValueMetatype. This is useful since it makes that bug very easy to track down since instead of asserting in the verifier, one asserts right where the instruction is being created.\r\n\r\nrdar://problem/31880847",
      "score": 1.5663531
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10924",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10924/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10924/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10924/events",
      "html_url": "https://github.com/apple/swift/pull/10924",
      "id": 242552062,
      "number": 10924,
      "title": "[4.0 2017-07-11] Upgrade some deprecation warnings from Swift 3 to errors in Swift 4",
      "user": {
        "login": "huonw",
        "id": 1203825,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1203825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/huonw",
        "html_url": "https://github.com/huonw",
        "followers_url": "https://api.github.com/users/huonw/followers",
        "following_url": "https://api.github.com/users/huonw/following{/other_user}",
        "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/huonw/subscriptions",
        "organizations_url": "https://api.github.com/users/huonw/orgs",
        "repos_url": "https://api.github.com/users/huonw/repos",
        "events_url": "https://api.github.com/users/huonw/events{/privacy}",
        "received_events_url": "https://api.github.com/users/huonw/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T00:21:03Z",
      "updated_at": "2017-07-13T02:25:08Z",
      "closed_at": "2017-07-13T02:25:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10924",
        "html_url": "https://github.com/apple/swift/pull/10924",
        "diff_url": "https://github.com/apple/swift/pull/10924.diff",
        "patch_url": "https://github.com/apple/swift/pull/10924.patch"
      },
      "body": "cc #10908 (master) and https://github.com/apple/swift/pull/10920 (swift-4.0-branch).",
      "score": 1.5668159
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10925",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10925/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10925/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10925/events",
      "html_url": "https://github.com/apple/swift/pull/10925",
      "id": 242552525,
      "number": 10925,
      "title": "[GSB] SE-0157: Reprocess delayed requirements when we need a complete PA",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-13T00:24:36Z",
      "updated_at": "2017-07-25T21:45:27Z",
      "closed_at": "2017-07-13T03:23:42Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10925",
        "html_url": "https://github.com/apple/swift/pull/10925",
        "diff_url": "https://github.com/apple/swift/pull/10925.diff",
        "patch_url": "https://github.com/apple/swift/pull/10925.patch"
      },
      "body": "Whenever we need a complete, well-formed potential archetype,\r\nreprocess any delayed requirements, so that we pick up additional\r\nrequirements on that potential archetype.\r\n\r\nThis relies on us tracking a generation count for the GSB instance as\r\na whole, which gets bumped each time we add some new requirement or\r\ncreate a new potential archetype, and only actually reprocessing\r\ndelayed requirements when the generation count exceeds the point at\r\nwhich we last processed delayed requirements.\r\n\r\nThis gets the most basic recursive protocol constraint working\r\nend-to-end and doesn't seem to break things.\r\n",
      "score": 1.6613894
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10926",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10926/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10926/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10926/events",
      "html_url": "https://github.com/apple/swift/pull/10926",
      "id": 242564369,
      "number": 10926,
      "title": "Generate libSyntax API",
      "user": {
        "login": "harlanhaskins",
        "id": 853032,
        "avatar_url": "https://avatars1.githubusercontent.com/u/853032?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/harlanhaskins",
        "html_url": "https://github.com/harlanhaskins",
        "followers_url": "https://api.github.com/users/harlanhaskins/followers",
        "following_url": "https://api.github.com/users/harlanhaskins/following{/other_user}",
        "gists_url": "https://api.github.com/users/harlanhaskins/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/harlanhaskins/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/harlanhaskins/subscriptions",
        "organizations_url": "https://api.github.com/users/harlanhaskins/orgs",
        "repos_url": "https://api.github.com/users/harlanhaskins/repos",
        "events_url": "https://api.github.com/users/harlanhaskins/events{/privacy}",
        "received_events_url": "https://api.github.com/users/harlanhaskins/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 16,
      "created_at": "2017-07-13T01:59:14Z",
      "updated_at": "2017-07-26T01:19:58Z",
      "closed_at": "2017-07-26T01:19:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10926",
        "html_url": "https://github.com/apple/swift/pull/10926",
        "diff_url": "https://github.com/apple/swift/pull/10926.diff",
        "patch_url": "https://github.com/apple/swift/pull/10926.patch"
      },
      "body": "This patch replaces the hand-rolled implementation of libSyntax’s APIs with a set of Python definitions that drive a set of gyb templates.\r\n\r\nThe Node definitions are incomplete, and they will be filled out incrementally.",
      "score": 1.6633289
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10928",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10928/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10928/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10928/events",
      "html_url": "https://github.com/apple/swift/pull/10928",
      "id": 242573594,
      "number": 10928,
      "title": "[ClangImporter] Don't import compatibility methods named 'print'.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-13T03:13:52Z",
      "updated_at": "2017-07-13T22:44:41Z",
      "closed_at": "2017-07-13T22:44:39Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10928",
        "html_url": "https://github.com/apple/swift/pull/10928",
        "diff_url": "https://github.com/apple/swift/pull/10928.diff",
        "patch_url": "https://github.com/apple/swift/pull/10928.patch"
      },
      "body": "...because they make things harder for people trying to use Swift.print. Before:\r\n\r\n> error: 'print' has been renamed to 'printDocument(\\_:)'\r\n\r\nAfter:\r\n\r\n> error: use of 'print' nearly matches global function 'print(\\_:separator:terminator:)' in module 'Swift' rather than instance method 'print(\\_:extra:)'\r\n\r\n(This actually occurs with AppKit's NSDocument, so it's not just a hypothetical concern.)\r\n\r\nrdar://problem/32839733",
      "score": 1.5741892
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10929",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10929/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10929/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10929/events",
      "html_url": "https://github.com/apple/swift/pull/10929",
      "id": 242575741,
      "number": 10929,
      "title": "[4.0] Stop swallowing test interruption exceptions thrown during XCTAssert evaluation.",
      "user": {
        "login": "briancroom",
        "id": 1062518,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1062518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/briancroom",
        "html_url": "https://github.com/briancroom",
        "followers_url": "https://api.github.com/users/briancroom/followers",
        "following_url": "https://api.github.com/users/briancroom/following{/other_user}",
        "gists_url": "https://api.github.com/users/briancroom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/briancroom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/briancroom/subscriptions",
        "organizations_url": "https://api.github.com/users/briancroom/orgs",
        "repos_url": "https://api.github.com/users/briancroom/repos",
        "events_url": "https://api.github.com/users/briancroom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/briancroom/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T03:31:55Z",
      "updated_at": "2017-07-13T21:23:05Z",
      "closed_at": "2017-07-13T21:23:03Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10929",
        "html_url": "https://github.com/apple/swift/pull/10929",
        "diff_url": "https://github.com/apple/swift/pull/10929.diff",
        "patch_url": "https://github.com/apple/swift/pull/10929.patch"
      },
      "body": "4.0 merge of https://github.com/apple/swift/pull/10905.\r\n\r\n**Explanation**: Fix the implementation of the `XCTAssert` functions so that test interruption exceptions thrown by XCTest during evaluation of the expression get rethrown rather than treated as an unexpected test failure.\r\n**Scope**: This affects XCTest users that have set their test case's `continueAfterFailure` property to `false`. Without this change, that setting is effectively is effectively ignored for failures which occur while evaluating an assertion expression. The conditions for this are particularly common during UI tests.\r\n**Radar**: rdar://problem/33255447\r\n**Risk**: Very low. The change is isolated and the rethrowing behavior is well-understood and has been in use for the Objective-C version of the assertions for several releases.\r\n**Testing**: CI testing, including a new unit test exercising this behavior.",
      "score": 1.5739387
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10930",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10930/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10930/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10930/events",
      "html_url": "https://github.com/apple/swift/pull/10930",
      "id": 242587144,
      "number": 10930,
      "title": "Expose synthesized members in AST lookups",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-13T05:11:22Z",
      "updated_at": "2017-07-14T03:15:35Z",
      "closed_at": "2017-07-14T03:15:31Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10930",
        "html_url": "https://github.com/apple/swift/pull/10930",
        "diff_url": "https://github.com/apple/swift/pull/10930.diff",
        "patch_url": "https://github.com/apple/swift/pull/10930.patch"
      },
      "body": "**What's in this pull request?**\r\nAddresses [SR-5215](https://bugs.swift.org/browse/SR-5215).\r\n\r\nSome types and members are synthesized by derived protocol conformances (e.g. the CodingKeys member type or init(from:)/encode(to:) members from Decodable/Encodable conformance) — however, they are not visible in AST lookup if they have not been synthesized.\r\n\r\nExposes a LazyResolver callback for performing member synthesis where relevant during qualified lookups to synthesize these members on demand when needed.\r\n\r\nAn alternative approach to #10723.",
      "score": 1.5764862
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10931",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10931/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10931/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10931/events",
      "html_url": "https://github.com/apple/swift/pull/10931",
      "id": 242729977,
      "number": 10931,
      "title": "[stdlib] Use minimal bits for stride for indices in String.UTF8View",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T14:57:48Z",
      "updated_at": "2017-07-13T18:50:46Z",
      "closed_at": "2017-07-13T17:06:13Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10931",
        "html_url": "https://github.com/apple/swift/pull/10931",
        "diff_url": "https://github.com/apple/swift/pull/10931.diff",
        "patch_url": "https://github.com/apple/swift/pull/10931.patch"
      },
      "body": "Fixes <rdar://33276845>\r\n",
      "score": 1.578366
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10932",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10932/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10932/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10932/events",
      "html_url": "https://github.com/apple/swift/pull/10932",
      "id": 242739664,
      "number": 10932,
      "title": "[4.0] IRGen: Make sure to use the C function type's alignment for indirect byval arguments",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T15:27:14Z",
      "updated_at": "2017-07-13T17:41:45Z",
      "closed_at": "2017-07-13T17:41:45Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10932",
        "html_url": "https://github.com/apple/swift/pull/10932",
        "diff_url": "https://github.com/apple/swift/pull/10932.diff",
        "patch_url": "https://github.com/apple/swift/pull/10932.patch"
      },
      "body": "\r\nrdar://33242303\r\n\r\n+ Fix abitypes.swift test case\r\n+ Use the max of abi alignment and swift's type alignment\r\n\r\n• Explanation: We emit the wrong alignment attribute for indirect by value parameters in C functions called from Swift. This gets exposed by the merge function pass which merges functions and notices mismatching alignments. But it has correctness implications if the LLVM backend relies on the alignment for optimization or code emission.\r\n\r\n• Scope of Issue: Correctness and crash\r\n\r\n• Origination: I believe this issue has always been there\r\n\r\n• Risk: Low. The IR generator now emits the proper alignment attribute on the function call and the alloca instruction that it generates for the indirect parameter passing.\r\n\r\n• Reviewed By: John McCall",
      "score": 1.5787846
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10933",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10933/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10933/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10933/events",
      "html_url": "https://github.com/apple/swift/pull/10933",
      "id": 242741148,
      "number": 10933,
      "title": "[4.0] IRGen: Make sure to use the C function type's alignment for indirect byval arguments",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T15:31:21Z",
      "updated_at": "2017-07-13T17:26:02Z",
      "closed_at": "2017-07-13T17:26:02Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10933",
        "html_url": "https://github.com/apple/swift/pull/10933",
        "diff_url": "https://github.com/apple/swift/pull/10933.diff",
        "patch_url": "https://github.com/apple/swift/pull/10933.patch"
      },
      "body": "\r\nrdar://33242303\r\n\r\n* Fix abitypes.swift test case\r\n* Use the max of abi alignment and swift's type alignment\r\n\r\n• Explanation: We emit the wrong alignment attribute for indirect by value parameters in C functions called from Swift. This gets exposed by the merge function pass which merges functions and notices mismatching alignments. But it has correctness implications if the LLVM backend relies on the alignment for optimization or code emission.\r\n\r\n• Scope of Issue: Correctness and crash\r\n\r\n• Origination: I believe this issue has always been there\r\n\r\n• Risk: Low. The IR generator now emits the proper alignment attribute on the function call and the alloca instruction that it generates for the indirect parameter passing.\r\n\r\n• Reviewed By: John McCall",
      "score": 1.578742
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10934",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10934/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10934/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10934/events",
      "html_url": "https://github.com/apple/swift/pull/10934",
      "id": 242780318,
      "number": 10934,
      "title": "[swift-4.0-branch][overlay] Hide the _ExpressibleByColorLiteral initializer",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-13T17:50:23Z",
      "updated_at": "2017-07-13T20:43:53Z",
      "closed_at": "2017-07-13T20:43:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10934",
        "html_url": "https://github.com/apple/swift/pull/10934",
        "diff_url": "https://github.com/apple/swift/pull/10934.diff",
        "patch_url": "https://github.com/apple/swift/pull/10934.patch"
      },
      "body": "* Explanation: This change hides the initializer introduced by the internal protocol, to avoid its misuses where initializers from concrete types should be used instead.\n* Scope of Issue: Change provides the backward compatible overload (marked as deprecated)\n* Risk: Minimal\n* Reviewed By: Ben Cohen\n* Testing: Test suite + compatiblity test suite\n* Directions for QA: N/A\n* Radar: <rdar://problem/32726800>",
      "score": 1.5808669
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10935",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10935/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10935/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10935/events",
      "html_url": "https://github.com/apple/swift/pull/10935",
      "id": 242781059,
      "number": 10935,
      "title": "[swift-4.0-branch-07-11-2017][overlay] Hide the _ExpressibleByColorLiteral initializer",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-13T17:53:28Z",
      "updated_at": "2017-07-14T05:57:36Z",
      "closed_at": "2017-07-14T05:57:34Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10935",
        "html_url": "https://github.com/apple/swift/pull/10935",
        "diff_url": "https://github.com/apple/swift/pull/10935.diff",
        "patch_url": "https://github.com/apple/swift/pull/10935.patch"
      },
      "body": "See https://github.com/apple/swift/pull/10934 for CCC",
      "score": 1.5836055
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10936",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10936/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10936/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10936/events",
      "html_url": "https://github.com/apple/swift/pull/10936",
      "id": 242794059,
      "number": 10936,
      "title": "[Swift 4.0] Set default CPU for s390x to support conversion between unsigned inte…",
      "user": {
        "login": "vivkong",
        "id": 18469525,
        "avatar_url": "https://avatars1.githubusercontent.com/u/18469525?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vivkong",
        "html_url": "https://github.com/vivkong",
        "followers_url": "https://api.github.com/users/vivkong/followers",
        "following_url": "https://api.github.com/users/vivkong/following{/other_user}",
        "gists_url": "https://api.github.com/users/vivkong/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vivkong/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vivkong/subscriptions",
        "organizations_url": "https://api.github.com/users/vivkong/orgs",
        "repos_url": "https://api.github.com/users/vivkong/repos",
        "events_url": "https://api.github.com/users/vivkong/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vivkong/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "tkremenek",
        "id": 3087023,
        "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tkremenek",
        "html_url": "https://github.com/tkremenek",
        "followers_url": "https://api.github.com/users/tkremenek/followers",
        "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
        "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
        "organizations_url": "https://api.github.com/users/tkremenek/orgs",
        "repos_url": "https://api.github.com/users/tkremenek/repos",
        "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tkremenek/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "tkremenek",
          "id": 3087023,
          "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tkremenek",
          "html_url": "https://github.com/tkremenek",
          "followers_url": "https://api.github.com/users/tkremenek/followers",
          "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
          "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
          "organizations_url": "https://api.github.com/users/tkremenek/orgs",
          "repos_url": "https://api.github.com/users/tkremenek/repos",
          "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tkremenek/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-13T18:43:24Z",
      "updated_at": "2017-07-14T12:28:29Z",
      "closed_at": "2017-07-13T21:07:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10936",
        "html_url": "https://github.com/apple/swift/pull/10936",
        "diff_url": "https://github.com/apple/swift/pull/10936.diff",
        "patch_url": "https://github.com/apple/swift/pull/10936.patch"
      },
      "body": "…gers and floating point numbers (#9647)\r\n\r\n<!-- What's in this pull request? -->\r\nOn System z, instructions for conversion between unsigned integers and floating point numbers was added in z196. We want to have this support by the default on Swift.\r\n\r\nThe missing support was exposed by the test swift/validation-test/stdlib/FixedPointConversion.swift.gyb. With this change, the test case passes on s390x.  Additional test is added to verify the correct instruction is generated.\r\n\r\nThis change only affects s390x so risk is low.\r\n\r\nTagging @jrose-apple for his attention.  Thanks.\r\n",
      "score": 1.5820038
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10937",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10937/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10937/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10937/events",
      "html_url": "https://github.com/apple/swift/pull/10937",
      "id": 242798173,
      "number": 10937,
      "title": "[swift-4.0-branch] [stdlib] Use minimal bits for stride for indices in String.UTF8View ",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-13T18:58:40Z",
      "updated_at": "2017-07-13T23:01:48Z",
      "closed_at": "2017-07-13T19:43:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10937",
        "html_url": "https://github.com/apple/swift/pull/10937",
        "diff_url": "https://github.com/apple/swift/pull/10937.diff",
        "patch_url": "https://github.com/apple/swift/pull/10937.patch"
      },
      "body": "Fixes <rdar://33276845>\r\n",
      "score": 1.5821114
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10938",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10938/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10938/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10938/events",
      "html_url": "https://github.com/apple/swift/pull/10938",
      "id": 242802816,
      "number": 10938,
      "title": "[swift-4.0-branch] [stdlib] Spot fix for https://bugs.swift.org/browse/SR-5401",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-13T19:17:17Z",
      "updated_at": "2017-07-14T21:29:59Z",
      "closed_at": "2017-07-14T21:29:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10938",
        "html_url": "https://github.com/apple/swift/pull/10938",
        "diff_url": "https://github.com/apple/swift/pull/10938.diff",
        "patch_url": "https://github.com/apple/swift/pull/10938.patch"
      },
      "body": "Resolves [SR-5401](https://bugs.swift.org/browse/SR-5401) / <rdar://33216769>.\r\n",
      "score": 1.5888886
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10940",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10940/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10940/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10940/events",
      "html_url": "https://github.com/apple/swift/pull/10940",
      "id": 242817525,
      "number": 10940,
      "title": "SE-0157: Enable recursive protocol constraints by default.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-13T20:16:11Z",
      "updated_at": "2017-07-24T18:42:03Z",
      "closed_at": "2017-07-13T21:09:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10940",
        "html_url": "https://github.com/apple/swift/pull/10940",
        "diff_url": "https://github.com/apple/swift/pull/10940.diff",
        "patch_url": "https://github.com/apple/swift/pull/10940.patch"
      },
      "body": "We don't know if they work in general, but specific cases of recursive\r\nprotocol constraints are working, and enabling them doesn't break\r\nanything.\r\n",
      "score": 1.6625398
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10941",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10941/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10941/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10941/events",
      "html_url": "https://github.com/apple/swift/pull/10941",
      "id": 242820704,
      "number": 10941,
      "title": "Never Bind to ErrorType",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-13T20:28:14Z",
      "updated_at": "2017-07-18T21:14:22Z",
      "closed_at": "2017-07-18T21:14:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10941",
        "html_url": "https://github.com/apple/swift/pull/10941",
        "diff_url": "https://github.com/apple/swift/pull/10941.diff",
        "patch_url": "https://github.com/apple/swift/pull/10941.patch"
      },
      "body": "#9900 requires some fairly minimal changes to enforce the invariant that we never bind to an `ErrorType`.\r\n\r\n- Member base type substitutions respect `SubstFlags::UseErrorType` on all failure paths.\r\n- Substitutions involving ErrorType (as a result of failed substitutions in dependent members) are not added to the substitution map.\r\n- ErrorType-containing potential type variable bindings are now ignored.\r\n\r\nAs an added bonus, resolves a compiler crasher.",
      "score": 1.6182956
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10942",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10942/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10942/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10942/events",
      "html_url": "https://github.com/apple/swift/pull/10942",
      "id": 242825339,
      "number": 10942,
      "title": "[Foundation] replaceSubrange in the cases of immutable and mutable backing stores should recalculate length per the reference backing store change and not the length of the replacement",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-13T20:45:41Z",
      "updated_at": "2017-07-15T01:34:58Z",
      "closed_at": "2017-07-15T01:34:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10942",
        "html_url": "https://github.com/apple/swift/pull/10942",
        "diff_url": "https://github.com/apple/swift/pull/10942.diff",
        "patch_url": "https://github.com/apple/swift/pull/10942.patch"
      },
      "body": "This addresses a failure in Data.replaceSubrange that would inappropriately funnel to a replacement method on backing stores that encompass objective-c stores for either mutable or immutable backing where the length would not be re-calculated per the backing store's length but instead be the replacement region length.\r\n\r\nThis addresses the following issues:\r\nrdar://problem/33098202\r\nhttps://bugs.swift.org/browse/SR-5449",
      "score": 1.5908396
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10943",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10943/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10943/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10943/events",
      "html_url": "https://github.com/apple/swift/pull/10943",
      "id": 242826443,
      "number": 10943,
      "title": "[Foundation] replaceSubrange in the cases of immutable and mutable backing stores should recalculate length per the reference backing store change and not the length of the replacement",
      "user": {
        "login": "phausler",
        "id": 278470,
        "avatar_url": "https://avatars1.githubusercontent.com/u/278470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phausler",
        "html_url": "https://github.com/phausler",
        "followers_url": "https://api.github.com/users/phausler/followers",
        "following_url": "https://api.github.com/users/phausler/following{/other_user}",
        "gists_url": "https://api.github.com/users/phausler/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phausler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phausler/subscriptions",
        "organizations_url": "https://api.github.com/users/phausler/orgs",
        "repos_url": "https://api.github.com/users/phausler/repos",
        "events_url": "https://api.github.com/users/phausler/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phausler/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-13T20:49:52Z",
      "updated_at": "2017-07-15T15:18:43Z",
      "closed_at": "2017-07-15T01:33:36Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10943",
        "html_url": "https://github.com/apple/swift/pull/10943",
        "diff_url": "https://github.com/apple/swift/pull/10943.diff",
        "patch_url": "https://github.com/apple/swift/pull/10943.patch"
      },
      "body": "Explanation:\r\nThis addresses a failure in Data.replaceSubrange that would inappropriately funnel to a replacement method on backing stores that encompass objective-c stores for either mutable or immutable backing where the length would not be re-calculated per the backing store's length but instead be the replacement region length.\r\n\r\nScope:\r\nThis only applies to runtime behavior of the Data.replaceSubrange family of functions\r\n\r\nRadar (and possibly SR Issue):\r\nrdar://problem/33098202\r\nhttps://bugs.swift.org/browse/SR-5449\r\n\r\nRisk:\r\nMedium to low risk; the swift backing store appropriately handles most cases but in the cases of bridged Data from objective-c the calculation was clearly incorrect. No one should be relying on this behavior.\r\n\r\nTesting:\r\nAdditional unit tests were added to validate the correctness of this patch.\r\n",
      "score": 1.5949539
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10944",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10944/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10944/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10944/events",
      "html_url": "https://github.com/apple/swift/pull/10944",
      "id": 242835824,
      "number": 10944,
      "title": "Some convenience apis",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-13T21:28:08Z",
      "updated_at": "2017-07-14T00:22:17Z",
      "closed_at": "2017-07-14T00:04:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10944",
        "html_url": "https://github.com/apple/swift/pull/10944",
        "diff_url": "https://github.com/apple/swift/pull/10944.diff",
        "patch_url": "https://github.com/apple/swift/pull/10944.patch"
      },
      "body": "This PR contains two convenience APIs:\r\n\r\n1. ValueBase::getSingleUserOfType. Using this API one can find the only user that has a specific instruction type, rather than doing it by hand. I.e.:\r\n\r\n```\r\nauto *PBI = I->getSingleUserOfType<ProjectBoxInst>();\r\n```\r\n\r\n2. createTrivial{Load,Store}Or. These work by allowing one to pass in the appropriate ownership qualifier for a non-trivial type and if you actually have a trivial type, swap in the trivial ownership qualifier.",
      "score": 1.5836685
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10945",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10945/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10945/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10945/events",
      "html_url": "https://github.com/apple/swift/pull/10945",
      "id": 242837184,
      "number": 10945,
      "title": "[interface-gen] Support passing Swift compiler arguments for header file interface generation",
      "user": {
        "login": "nathawes",
        "id": 23247203,
        "avatar_url": "https://avatars3.githubusercontent.com/u/23247203?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nathawes",
        "html_url": "https://github.com/nathawes",
        "followers_url": "https://api.github.com/users/nathawes/followers",
        "following_url": "https://api.github.com/users/nathawes/following{/other_user}",
        "gists_url": "https://api.github.com/users/nathawes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nathawes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nathawes/subscriptions",
        "organizations_url": "https://api.github.com/users/nathawes/orgs",
        "repos_url": "https://api.github.com/users/nathawes/repos",
        "events_url": "https://api.github.com/users/nathawes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nathawes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-13T21:33:52Z",
      "updated_at": "2017-07-14T01:04:37Z",
      "closed_at": "2017-07-14T01:04:37Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10945",
        "html_url": "https://github.com/apple/swift/pull/10945",
        "diff_url": "https://github.com/apple/swift/pull/10945.diff",
        "patch_url": "https://github.com/apple/swift/pull/10945.patch"
      },
      "body": "<!-- What's in this pull request? -->\r\nTo support having Swift main files for ObjC header files included via the bridging header, add a flag to indicate whether the compiler arguments passed to interface generation for header files are Clang or Swift compiler arguments.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves rdar://problem/33249361.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->",
      "score": 1.5840086
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10947",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10947/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10947/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10947/events",
      "html_url": "https://github.com/apple/swift/pull/10947",
      "id": 242843519,
      "number": 10947,
      "title": "[swift-4.0-branch][overlay] Port Foundation String extensions to StringProtocol",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-13T22:03:22Z",
      "updated_at": "2017-07-14T23:43:07Z",
      "closed_at": "2017-07-14T23:43:05Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10947",
        "html_url": "https://github.com/apple/swift/pull/10947",
        "diff_url": "https://github.com/apple/swift/pull/10947.diff",
        "patch_url": "https://github.com/apple/swift/pull/10947.patch"
      },
      "body": "* Explanation: Currently most string extensions in Foundation are on String, which renders them unavailable on Substring. This is a bad user experience, because some of those extensions are quite useful. This change ports these extensions to StringProtocol instead.\n* Scope of Issue: Enables String extensions on Substring.\n* Risk: minimal\n* Reviewed By: Dave Abrahams\n* Testing: Automated test suite\n* Directions for QA: N/A\n* Radar: <rdar://problem/32777093>",
      "score": 1.5909362
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10948",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10948/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10948/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10948/events",
      "html_url": "https://github.com/apple/swift/pull/10948",
      "id": 242852767,
      "number": 10948,
      "title": "[4.0] [ClangImporter] Don't import compatibility methods named 'print'.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-13T22:54:07Z",
      "updated_at": "2017-07-14T00:25:17Z",
      "closed_at": "2017-07-14T00:25:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10948",
        "html_url": "https://github.com/apple/swift/pull/10948",
        "diff_url": "https://github.com/apple/swift/pull/10948.diff",
        "patch_url": "https://github.com/apple/swift/pull/10948.patch"
      },
      "body": "- **Explanation**: NSDocument has a method named [`print(withSettings:​showPrintPanel:​delegate:​didPrint:​contextInfo:)`](https://developer.apple.com/documentation/appkit/nsdocument/1515058-print), as well as a method called [`printDocument(_:)`](https://developer.apple.com/documentation/appkit/nsdocument/1515154-printdocument?changes=latest_minor) that *used* to be called `print(_:)`. When someone tried to use Swift's top-level `print` function inside NSDocument, they got a message saying that the renamed one was unavailable. Normally we'd just look past it, but the presence of the still-valid longer name prevented the compiler from doing so. This patch just removes the \"forwarding\" declaration for the one that got renamed, which allows the type checker to do a better recovery and suggest `Swift.print`.\r\n- **Scope**: Affects Objective-C methods that were once named `print` when imported into Swift but now aren't.\r\n- **Issue**: rdar://problem/32839733\r\n- **Reviewed by**: @milseman \r\n- **Risk**: Low. Only affects methods that were already going to be marked unavailable.\r\n- **Testing**: Added regression tests, verified that the NSDocument case improved.",
      "score": 1.5844866
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10950",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10950/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10950/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10950/events",
      "html_url": "https://github.com/apple/swift/pull/10950",
      "id": 242855112,
      "number": 10950,
      "title": "Revert recursive protocol constraints changes",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-13T23:08:48Z",
      "updated_at": "2017-07-14T18:06:34Z",
      "closed_at": "2017-07-14T06:21:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10950",
        "html_url": "https://github.com/apple/swift/pull/10950",
        "diff_url": "https://github.com/apple/swift/pull/10950.diff",
        "patch_url": "https://github.com/apple/swift/pull/10950.patch"
      },
      "body": "The type checking time for Swift.o is more than three times longer than it was before these changes. Backing out until Doug has a chance to take a look.",
      "score": 1.5898184
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10954",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10954/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10954/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10954/events",
      "html_url": "https://github.com/apple/swift/pull/10954",
      "id": 242864500,
      "number": 10954,
      "title": "SILGen: Project the referent type of property components in key paths.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-14T00:15:57Z",
      "updated_at": "2017-07-14T01:52:59Z",
      "closed_at": "2017-07-14T01:52:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10954",
        "html_url": "https://github.com/apple/swift/pull/10954",
        "diff_url": "https://github.com/apple/swift/pull/10954.diff",
        "patch_url": "https://github.com/apple/swift/pull/10954.patch"
      },
      "body": "We want the semantic type of the storage, not its weak/unowned-qualified type. Fixes SR-5408 | rdar://problem/33215221.",
      "score": 1.5856012
    }
  ]
}

