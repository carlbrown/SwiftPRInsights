{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11146",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11146/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11146/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11146/events",
      "html_url": "https://github.com/apple/swift/pull/11146",
      "id": 245216100,
      "number": 11146,
      "title": "[4.0] SILGen: Fix override handling when a dynamic init is also required.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-07-24T21:34:45Z",
      "updated_at": "2017-07-25T19:16:46Z",
      "closed_at": "2017-07-25T19:14:15Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11146",
        "html_url": "https://github.com/apple/swift/pull/11146",
        "diff_url": "https://github.com/apple/swift/pull/11146.diff",
        "patch_url": "https://github.com/apple/swift/pull/11146.patch"
      },
      "body": "Explanation: The compiler would crash when a required initializer of an NSObject subclass was overridden in one of its subclasses.\r\n\r\nScope: Regression caused by the fix for SR-5223\r\n\r\nIssue: SR-5542 | rdar://problem/33490780.\r\n\r\nRisk: Low, refinement of a bug fix\r\n\r\nTesting: Swift CI, compatibility suite, test case from Jira",
      "score": 1.8161675
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11147",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11147/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11147/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11147/events",
      "html_url": "https://github.com/apple/swift/pull/11147",
      "id": 245218824,
      "number": 11147,
      "title": "[4.0][TSan] Change TSan inout accesses to use __tsan_external_write callba…",
      "user": {
        "login": "devincoughlin",
        "id": 2623655,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2623655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/devincoughlin",
        "html_url": "https://github.com/devincoughlin",
        "followers_url": "https://api.github.com/users/devincoughlin/followers",
        "following_url": "https://api.github.com/users/devincoughlin/following{/other_user}",
        "gists_url": "https://api.github.com/users/devincoughlin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/devincoughlin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/devincoughlin/subscriptions",
        "organizations_url": "https://api.github.com/users/devincoughlin/orgs",
        "repos_url": "https://api.github.com/users/devincoughlin/repos",
        "events_url": "https://api.github.com/users/devincoughlin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/devincoughlin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-24T21:46:32Z",
      "updated_at": "2017-07-25T02:54:54Z",
      "closed_at": "2017-07-25T00:06:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11147",
        "html_url": "https://github.com/apple/swift/pull/11147",
        "diff_url": "https://github.com/apple/swift/pull/11147.diff",
        "patch_url": "https://github.com/apple/swift/pull/11147.patch"
      },
      "body": "…ck (#11032)\r\n\r\nAdopt the  __tsan_external_write compiler-rt callbacks when IRGen'ing\r\nthe TSan inout access builtin.\r\n\r\nrdar://problem/32260994\r\nrdar://problem/33461691",
      "score": 1.8101094
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11148",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11148/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11148/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11148/events",
      "html_url": "https://github.com/apple/swift/pull/11148",
      "id": 245229007,
      "number": 11148,
      "title": "Fix IndexSet.RangeView indexing with subranges",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-24T22:32:52Z",
      "updated_at": "2017-07-28T18:34:05Z",
      "closed_at": "2017-07-25T02:32:51Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11148",
        "html_url": "https://github.com/apple/swift/pull/11148",
        "diff_url": "https://github.com/apple/swift/pull/11148.diff",
        "patch_url": "https://github.com/apple/swift/pull/11148.patch"
      },
      "body": "**What's in this pull request?**\r\nResolves [SR-5522](https://bugs.swift.org/browse/SR-5522). rdar://problem/33467986\r\n\r\nOn initialization, IndexSet.RangeView made the erroneous assumption that given an intersection range, a nil _indexOfRange(containing: bound) indicated that the bound was beyond the beginning or end of the index set. Instead, the index could simply not exist.\r\n\r\nWe now calculate the actual intersection of the parent index set with the given intersection range and use that as the index set to view.\r\n\r\nThis also makes the unit tests for testing range views more comprehensive.",
      "score": 1.8401375
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11149",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11149/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11149/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11149/events",
      "html_url": "https://github.com/apple/swift/pull/11149",
      "id": 245229225,
      "number": 11149,
      "title": "Large Types IRGen Pass: bugfixes for large-type returns",
      "user": {
        "login": "shajrawi",
        "id": 17753158,
        "avatar_url": "https://avatars3.githubusercontent.com/u/17753158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shajrawi",
        "html_url": "https://github.com/shajrawi",
        "followers_url": "https://api.github.com/users/shajrawi/followers",
        "following_url": "https://api.github.com/users/shajrawi/following{/other_user}",
        "gists_url": "https://api.github.com/users/shajrawi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shajrawi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shajrawi/subscriptions",
        "organizations_url": "https://api.github.com/users/shajrawi/orgs",
        "repos_url": "https://api.github.com/users/shajrawi/repos",
        "events_url": "https://api.github.com/users/shajrawi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shajrawi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-24T22:33:57Z",
      "updated_at": "2017-07-24T23:27:19Z",
      "closed_at": "2017-07-24T23:27:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11149",
        "html_url": "https://github.com/apple/swift/pull/11149",
        "diff_url": "https://github.com/apple/swift/pull/11149.diff",
        "patch_url": "https://github.com/apple/swift/pull/11149.patch"
      },
      "body": "radar rdar://problem/28680453\r\n\r\nThis PR resolves various bugs that were found while testing the new large-type returns support in the large loadable types IRGen pass + adds interesting test cases.",
      "score": 1.8103756
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11150",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11150/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11150/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11150/events",
      "html_url": "https://github.com/apple/swift/pull/11150",
      "id": 245229388,
      "number": 11150,
      "title": "[4.0] Allow pointer comparisons and KVO methods to avoid initiating formal accesses",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-24T22:34:39Z",
      "updated_at": "2017-07-25T20:13:21Z",
      "closed_at": "2017-07-25T20:12:53Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11150",
        "html_url": "https://github.com/apple/swift/pull/11150",
        "diff_url": "https://github.com/apple/swift/pull/11150.diff",
        "patch_url": "https://github.com/apple/swift/pull/11150.patch"
      },
      "body": "The SE-0176 exclusivity rules kick in even when converting an l-value to a pointer.  This is generally good and right, because APIs that work with pointers usually access the memory being pointed to.  However, there are notable exceptions, including == and the KVO registration/unregistration routines; enforcing exclusivity in these cases is wasteful and causes unwanted static and dynamic errors.  In the long run, we should properly design a minor language feature for this (probably a parameter attribute).  In the short term, we can just special-case these APIs.\r\n\r\nThis patch changes the compiler to stop enforcing exclusivity for certain expressions.  By design, it affects code generation by causing the compiler to stop using the exclusivity code-emission patterns, which are new in Swift 4, and instead produce code more similar to Swift 3.1.\r\n\r\nWe are tracking this problem as rdar://33265254.\r\n\r\nThe risk is low because it is written conservatively to selectively disable code paths.",
      "score": 1.8170843
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11151",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11151/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11151/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11151/events",
      "html_url": "https://github.com/apple/swift/pull/11151",
      "id": 245231761,
      "number": 11151,
      "title": "[4.0] Codable class fixes",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-07-24T22:47:32Z",
      "updated_at": "2017-07-25T02:37:59Z",
      "closed_at": "2017-07-25T02:32:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11151",
        "html_url": "https://github.com/apple/swift/pull/11151",
        "diff_url": "https://github.com/apple/swift/pull/11151.diff",
        "patch_url": "https://github.com/apple/swift/pull/11151.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #11045 to `swift-4.0-branch`.\r\n\r\n**Explanation:** Addresses [SR-4772](https://bugs.swift.org/browse/SR-4772) and [SR-5122](https://bugs.swift.org/browse/SR-5122).\r\n\r\nThis addresses a few issues that prevented classes from properly receiving synthesized `Codable` conformances:\r\n* #10964 allowed classes to override synthesized `Codable` conformances in subclasses; this allows a synthesized `Decodable` class to override a non-`Decodable` class by calling `super.init()` instead of `super.init(from:)` on its parent.\r\n* Improves the diagnostics produced when a class can't receive synthesized `Decodable` implementation due to superclass limitations\r\n* Prevents a synthesized `init(from:)` from further preventing synthesis of a default initializer (on classes) or a memberwise initializer (on structs)\r\n* Provides improved diagnostics for suggesting that a subclass override `init(from:)` and `encode(to:)` if it could not inherit its superclass's `Codable` witnesses\r\n\r\n**Scope:** Affects those using classes with the new `Codable` APIs.\r\n**Radar:** rdar://problem/32774777\r\n**Risk:** Low–Medium\r\n**Testing:** Adds unit tests to confirm expected behavior",
      "score": 1.8115072
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11152",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11152/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11152/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11152/events",
      "html_url": "https://github.com/apple/swift/pull/11152",
      "id": 245236905,
      "number": 11152,
      "title": "[4.0] NSNumber custom AnyHashable fix",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-24T23:06:42Z",
      "updated_at": "2017-07-25T02:37:56Z",
      "closed_at": "2017-07-25T02:37:54Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11152",
        "html_url": "https://github.com/apple/swift/pull/11152",
        "diff_url": "https://github.com/apple/swift/pull/11152.diff",
        "patch_url": "https://github.com/apple/swift/pull/11152.patch"
      },
      "body": "<!-- What's in this pull request? -->\r\nCherry-picks #11138 to `swift-4.0-branch`.\r\n\r\n**Explanation:** Resolves rdar://problem/33105735.\r\n\r\nWhen we give `NSNumber` a custom `AnyHashable` representation, we want to give it as large a box as possible. When we want to compare it against other `AnyHashable` boxes such as `Int` or `UInt`, it's always possible to upcast the `Int`/`UInt` to a larger integer size like `Int64` or `UInt64` for the comparison. By eliminating the smaller boxes we create, we can maintain the existing behavior that `_SwiftTypePreservingNSNumber` gave us.\r\n\r\n**Scope:** Affects `NSDictionary` bridging with numeric keys\r\n**Radar:** rdar://problem/33105735\r\n**Risk:** Low\r\n**Testing:** Adds unit tests to confirm expected behavior.",
      "score": 1.8117263
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11153",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11153/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11153/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11153/events",
      "html_url": "https://github.com/apple/swift/pull/11153",
      "id": 245237406,
      "number": 11153,
      "title": "Reject superclass constraints that bind existentials to classes",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-24T23:08:38Z",
      "updated_at": "2017-07-25T06:37:25Z",
      "closed_at": "2017-07-25T06:37:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11153",
        "html_url": "https://github.com/apple/swift/pull/11153",
        "diff_url": "https://github.com/apple/swift/pull/11153.diff",
        "patch_url": "https://github.com/apple/swift/pull/11153.patch"
      },
      "body": "",
      "score": 1.8130322
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11154",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11154/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11154/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11154/events",
      "html_url": "https://github.com/apple/swift/pull/11154",
      "id": 245239577,
      "number": 11154,
      "title": "[4.0] [ConstraintSolver] Prefer same name class properties found on subclass over superclass",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2017-07-24T23:20:26Z",
      "updated_at": "2017-07-25T00:55:18Z",
      "closed_at": "2017-07-25T00:55:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11154",
        "html_url": "https://github.com/apple/swift/pull/11154",
        "diff_url": "https://github.com/apple/swift/pull/11154.diff",
        "patch_url": "https://github.com/apple/swift/pull/11154.patch"
      },
      "body": "* Description: If class property with the same name has been found on both subclass and superclass,\r\nlet's always prefer subclass with all else equal, because subclass property\r\ncould only be found if requested directly.\r\n\r\n* Origination: If different classes in the inheritance hierarchy have class properties with the same name, such properties are impossible to refer to, and are considered ambiguous because lookup happens over whole type hierarchy. This patch prefers subclass properties over superclass properties with the same name to resolve such ambiguity.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: Added new tests, Swift CI.\r\n\r\n* Reviewed by: Mark Lacey, Jordan Rose.\r\n\r\n* Resolves: rdar://problem/32973206\r\n(cherry picked from commit 96c4bcd411c23ee021537f97506e9cedad6958ed)\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.8113135
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11155",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11155/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11155/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11155/events",
      "html_url": "https://github.com/apple/swift/pull/11155",
      "id": 245241688,
      "number": 11155,
      "title": "[4.0] [Serialization] Recover from ObjC protocols changing inheritance",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-07-24T23:34:56Z",
      "updated_at": "2017-07-25T18:34:02Z",
      "closed_at": "2017-07-25T18:34:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11155",
        "html_url": "https://github.com/apple/swift/pull/11155",
        "diff_url": "https://github.com/apple/swift/pull/11155.diff",
        "patch_url": "https://github.com/apple/swift/pull/11155.patch"
      },
      "body": "- **Explanation**: When there's an Objective-C protocol that adopts other protocols, the other protocols become part of the requirement signature. If that can change, Swift conformances to that protocol will get very confused when it comes time to deserialize the conformances that satisfy the requirement signature. This commit allows the Swift compiler to get past such changes…which, for the record, are not safe in Objective-C either, but shouldn't cause crashes.\r\n- **Scope**: Affects Objective-C protocols that inherit other protocols.\r\n- **Issue**: rdar://problem/33356098\r\n- **Reviewed by**: @DougGregor \r\n- **Risk**: Medium-low. Conformances do get serialized and deserialized plenty, but deserialized conformances to Objective-C aren't actually used for that much.\r\n- **Testing**: Added regression tests, verified that the original test case now passes.",
      "score": 1.8171551
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11157",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11157/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11157/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11157/events",
      "html_url": "https://github.com/apple/swift/pull/11157",
      "id": 245248618,
      "number": 11157,
      "title": "[stdlib] Switch Int/Float inits + join to be on StringProtocol",
      "user": {
        "login": "airspeedswift",
        "id": 8058277,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8058277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/airspeedswift",
        "html_url": "https://github.com/airspeedswift",
        "followers_url": "https://api.github.com/users/airspeedswift/followers",
        "following_url": "https://api.github.com/users/airspeedswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/airspeedswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/airspeedswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/airspeedswift/subscriptions",
        "organizations_url": "https://api.github.com/users/airspeedswift/orgs",
        "repos_url": "https://api.github.com/users/airspeedswift/repos",
        "events_url": "https://api.github.com/users/airspeedswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/airspeedswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 14,
      "created_at": "2017-07-25T00:02:14Z",
      "updated_at": "2017-07-27T21:22:25Z",
      "closed_at": "2017-07-27T21:22:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11157",
        "html_url": "https://github.com/apple/swift/pull/11157",
        "diff_url": "https://github.com/apple/swift/pull/11157.diff",
        "patch_url": "https://github.com/apple/swift/pull/11157.patch"
      },
      "body": "Per SE-183",
      "score": 1.8340248
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11158",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11158/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11158/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11158/events",
      "html_url": "https://github.com/apple/swift/pull/11158",
      "id": 245248962,
      "number": 11158,
      "title": "[GSB/IRGen] Allow redundant inheritance of the JSExport protocol.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T00:04:33Z",
      "updated_at": "2017-07-25T06:17:21Z",
      "closed_at": "2017-07-25T06:17:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11158",
        "html_url": "https://github.com/apple/swift/pull/11158",
        "diff_url": "https://github.com/apple/swift/pull/11158.diff",
        "patch_url": "https://github.com/apple/swift/pull/11158.patch"
      },
      "body": "Inheritance of a protocol from JavaScriptCore's JSExport protocol is\r\nused to indicate that the methods and properties of that protocol\r\nshould be exported to JavaScript. The actual check to determine\r\nwhether a protocol (directly) inherits JSExport is performed via the\r\nObjective-C runtime. Note that the presence of JSExport in the\r\nprotocol hierarchy is not sufficient; the protocol must directly\r\ninherit JSExport.\r\n\r\nSwift warns about redundant conformance requirements and eliminates\r\nthem from the requirement signature (and, therefore, the Objective-C\r\nmetadata). This behavior is incorrect for JSExport, because the\r\nconformance is actually needed for this API to work properly.\r\n\r\nRecognize a protocol's inheritance JSExport specifically (by\r\nname) when computing the requirement signature of the protocol. When\r\nwe find such a redundancy, suppress the \"redundant conformance\r\nconstraint\" diagnostic and add a new (hidden) attribute\r\n@_restatedObjCConformance(proto). The attribute is used only by Objective-C\r\nprotocol metadata emission to ensure that we get the expected metadata\r\nin the Objective-C runtime.\r\n\r\nFixes rdar://problem/32674145.\r\n",
      "score": 1.8134851
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11159",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11159/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11159/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11159/events",
      "html_url": "https://github.com/apple/swift/pull/11159",
      "id": 245250218,
      "number": 11159,
      "title": "[4.0]Have Substring.filter return a String",
      "user": {
        "login": "airspeedswift",
        "id": 8058277,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8058277?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/airspeedswift",
        "html_url": "https://github.com/airspeedswift",
        "followers_url": "https://api.github.com/users/airspeedswift/followers",
        "following_url": "https://api.github.com/users/airspeedswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/airspeedswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/airspeedswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/airspeedswift/subscriptions",
        "organizations_url": "https://api.github.com/users/airspeedswift/orgs",
        "repos_url": "https://api.github.com/users/airspeedswift/repos",
        "events_url": "https://api.github.com/users/airspeedswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/airspeedswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-25T00:13:09Z",
      "updated_at": "2017-07-27T16:51:05Z",
      "closed_at": "2017-07-27T16:51:05Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11159",
        "html_url": "https://github.com/apple/swift/pull/11159",
        "diff_url": "https://github.com/apple/swift/pull/11159.diff",
        "patch_url": "https://github.com/apple/swift/pull/11159.patch"
      },
      "body": "Per SE-183\r\n\r\n* Explanation: `Substring.filter` should return a `String`, as this involves the fresh creation of the string not a view onto the existing string.\r\n* Scope of Issue: Adding a concrete overload.\r\n* Risk: Minimal\r\n* Reviewed By: Max Moiseev\r\n* Testing: Automated test suite + additional test\r\n* Bug: https://bugs.swift.org/browse/SR-4933\r\n* Radar: <rdar://problem/32285011>",
      "score": 1.8326454
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11160",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11160/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11160/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11160/events",
      "html_url": "https://github.com/apple/swift/pull/11160",
      "id": 245277043,
      "number": 11160,
      "title": "Guaranteed Semantics for __shared arguments",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 15,
      "created_at": "2017-07-25T03:41:26Z",
      "updated_at": "2017-07-26T09:25:29Z",
      "closed_at": "2017-07-26T05:26:46Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11160",
        "html_url": "https://github.com/apple/swift/pull/11160",
        "diff_url": "https://github.com/apple/swift/pull/11160.diff",
        "patch_url": "https://github.com/apple/swift/pull/11160.patch"
      },
      "body": "The final bit of plumbing needed for `__shared` arguments and `__owned`<=>`__shared` closure conversions.  ",
      "score": 1.823161
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11162",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11162/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11162/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11162/events",
      "html_url": "https://github.com/apple/swift/pull/11162",
      "id": 245294196,
      "number": 11162,
      "title": "Sema: Stricter superclass constraints when opening a generic signature [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T06:03:18Z",
      "updated_at": "2017-07-25T22:29:21Z",
      "closed_at": "2017-07-25T22:29:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11162",
        "html_url": "https://github.com/apple/swift/pull/11162",
        "diff_url": "https://github.com/apple/swift/pull/11162.diff",
        "patch_url": "https://github.com/apple/swift/pull/11162.patch"
      },
      "body": "* Description: Fixes a crash-on-invalid when we bind a class-constrained generic parameter to a class-constrained existential.\r\n\r\n* Origination: Class-constrained existentials are a new feature in Swift 4.0.\r\n\r\n* Risk: Low, we're introducing a new constraint in a few places and this code path should be well tested.\r\n\r\n* Reviewed by: @DougGregor \r\n\r\n* Tested: New test added\r\n\r\n* Radar: <rdar://problem/32617814>",
      "score": 1.8223312
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11163",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11163/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11163/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11163/events",
      "html_url": "https://github.com/apple/swift/pull/11163",
      "id": 245296861,
      "number": 11163,
      "title": "[4.0] [GSB/IRGen] Allow redundant inheritance of the JSExport protocol.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-25T06:20:42Z",
      "updated_at": "2017-07-25T17:08:49Z",
      "closed_at": "2017-07-25T17:08:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11163",
        "html_url": "https://github.com/apple/swift/pull/11163",
        "diff_url": "https://github.com/apple/swift/pull/11163.diff",
        "patch_url": "https://github.com/apple/swift/pull/11163.patch"
      },
      "body": "**Explanation**: Support multiple \"inheritance\" from JavaScriptCore's `JSExport` protocol within a protocol hierarchy, silencing the \"redundant conformance constraint\" warning and emitting the (normally redundant) Objective-C protocol metadata for redundant, direct inheritance from `JSExport`. The API depends on this metadata, accessed via the Objective-C runtime.\r\n**Scope**: Affects apps using `JSExport` to export functionality from Swift to JavaScript. Silences a warning and emits Objective-C metadata that we used to emit in Swift < 4.\r\n**Radar**:  rdar://problem/32674145\r\n**Risk**: Very low; it's a narrow fix that only kicks in specifically with inheritance of a protocol from `JSExport`.\r\n**Reviewed by**: @slavapestov \r\n**Testing**: Compiler regression testing, sample project using these APIs.\r\n",
      "score": 1.8207757
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11164",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11164/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11164/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11164/events",
      "html_url": "https://github.com/apple/swift/pull/11164",
      "id": 245302863,
      "number": 11164,
      "title": "Parse: Fix dictionary with generic key type in expression context",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T06:55:57Z",
      "updated_at": "2017-07-25T07:31:32Z",
      "closed_at": "2017-07-25T07:31:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11164",
        "html_url": "https://github.com/apple/swift/pull/11164",
        "diff_url": "https://github.com/apple/swift/pull/11164.diff",
        "patch_url": "https://github.com/apple/swift/pull/11164.patch"
      },
      "body": "",
      "score": 1.8180226
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11165",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11165/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11165/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11165/events",
      "html_url": "https://github.com/apple/swift/pull/11165",
      "id": 245303432,
      "number": 11165,
      "title": "Parse: Fix dictionary with generic key type in expression context [4.0]",
      "user": {
        "login": "slavapestov",
        "id": 66486,
        "avatar_url": "https://avatars1.githubusercontent.com/u/66486?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/slavapestov",
        "html_url": "https://github.com/slavapestov",
        "followers_url": "https://api.github.com/users/slavapestov/followers",
        "following_url": "https://api.github.com/users/slavapestov/following{/other_user}",
        "gists_url": "https://api.github.com/users/slavapestov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/slavapestov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/slavapestov/subscriptions",
        "organizations_url": "https://api.github.com/users/slavapestov/orgs",
        "repos_url": "https://api.github.com/users/slavapestov/repos",
        "events_url": "https://api.github.com/users/slavapestov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/slavapestov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-25T06:58:32Z",
      "updated_at": "2017-07-25T23:30:09Z",
      "closed_at": "2017-07-25T23:30:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11165",
        "html_url": "https://github.com/apple/swift/pull/11165",
        "diff_url": "https://github.com/apple/swift/pull/11165.diff",
        "patch_url": "https://github.com/apple/swift/pull/11165.patch"
      },
      "body": "* Description: Fixes a case where a dictionary type was not parsed correctly in expression context. We fixed some issues with this in 4.0, but this was a case we missed.\r\n\r\n* Origination: Probably has been there forever.\r\n\r\n* Tested: New test added.\r\n\r\n* Reviewed by: @DougGregor \r\n\r\n* Risk: Very low, ':' is already not a valid operator so we should not be rejecting anything that was previously valid.\r\n\r\n* Radar: <rdar://problem/33506631>",
      "score": 1.8232166
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11167",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11167/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11167/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11167/events",
      "html_url": "https://github.com/apple/swift/pull/11167",
      "id": 245427453,
      "number": 11167,
      "title": "[AppKit overlay] Use NSColor(red:green:blue:alpha:) for color literals.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-25T14:49:07Z",
      "updated_at": "2017-07-25T17:07:35Z",
      "closed_at": "2017-07-25T16:19:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11167",
        "html_url": "https://github.com/apple/swift/pull/11167",
        "diff_url": "https://github.com/apple/swift/pull/11167.diff",
        "patch_url": "https://github.com/apple/swift/pull/11167.patch"
      },
      "body": "This initializer, which is the same on iOS, allows negative values and\r\nvalues > 1.0 to support the extended sRGB color space.\r\n\r\nFixes rdar://problem/33500905.\r\n",
      "score": 1.8256497
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11168",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11168/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11168/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11168/events",
      "html_url": "https://github.com/apple/swift/pull/11168",
      "id": 245473280,
      "number": 11168,
      "title": "[4.0] [AppKit overlay] Use NSColor(red:green:blue:alpha:) for color literals.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2017-07-25T17:18:19Z",
      "updated_at": "2017-07-25T20:54:46Z",
      "closed_at": "2017-07-25T20:15:01Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11168",
        "html_url": "https://github.com/apple/swift/pull/11168",
        "diff_url": "https://github.com/apple/swift/pull/11168.diff",
        "patch_url": "https://github.com/apple/swift/pull/11168.patch"
      },
      "body": "**Explanation**: When mapping color literals to `NSColor`, use the `NSColor(red:green:blue:alpha:)` initializer, which supports extended sRGB.\r\n**Scope**: Extremely narrow: only affects color literals whose components are negative or > 1.0.\r\n**Radar**:  rdar://problem/33500905\r\n**Risk**: Effectively zero; we're just switching to a more-widely-applicable `NSColor` initializer.\r\n**Reviewed By**: @jrose-apple \r\n**Testing**: Compiler regression tests.",
      "score": 1.8284343
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11170",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11170/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11170/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11170/events",
      "html_url": "https://github.com/apple/swift/pull/11170",
      "id": 245485888,
      "number": 11170,
      "title": "[ClangImporter] Assert when we're expecting a definition",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2017-07-25T18:05:30Z",
      "updated_at": "2017-07-27T16:06:47Z",
      "closed_at": "2017-07-27T16:06:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11170",
        "html_url": "https://github.com/apple/swift/pull/11170",
        "diff_url": "https://github.com/apple/swift/pull/11170.diff",
        "patch_url": "https://github.com/apple/swift/pull/11170.patch"
      },
      "body": "No functionality change. Just want to make sure we don't misuse these functions.",
      "score": 1.8432319
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11171",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11171/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11171/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11171/events",
      "html_url": "https://github.com/apple/swift/pull/11171",
      "id": 245494652,
      "number": 11171,
      "title": "Resolve an issue with tuple returns for large loadable types",
      "user": {
        "login": "shajrawi",
        "id": 17753158,
        "avatar_url": "https://avatars3.githubusercontent.com/u/17753158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shajrawi",
        "html_url": "https://github.com/shajrawi",
        "followers_url": "https://api.github.com/users/shajrawi/followers",
        "following_url": "https://api.github.com/users/shajrawi/following{/other_user}",
        "gists_url": "https://api.github.com/users/shajrawi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shajrawi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shajrawi/subscriptions",
        "organizations_url": "https://api.github.com/users/shajrawi/orgs",
        "repos_url": "https://api.github.com/users/shajrawi/repos",
        "events_url": "https://api.github.com/users/shajrawi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shajrawi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T18:37:33Z",
      "updated_at": "2017-07-25T19:56:00Z",
      "closed_at": "2017-07-25T19:55:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11171",
        "html_url": "https://github.com/apple/swift/pull/11171",
        "diff_url": "https://github.com/apple/swift/pull/11171.diff",
        "patch_url": "https://github.com/apple/swift/pull/11171.patch"
      },
      "body": "radar rdar://problem/28680453\r\n\r\nResolves an issue with tuple returns for large loadable types + workaround a watch-target test failure",
      "score": 1.8291353
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11172",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11172/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11172/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11172/events",
      "html_url": "https://github.com/apple/swift/pull/11172",
      "id": 245518262,
      "number": 11172,
      "title": "IRGen: Fix partial applies of generic functions capturing the generic parameters in an argument",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-07-25T20:01:10Z",
      "updated_at": "2017-07-26T12:35:33Z",
      "closed_at": "2017-07-26T12:35:33Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11172",
        "html_url": "https://github.com/apple/swift/pull/11172",
        "diff_url": "https://github.com/apple/swift/pull/11172.diff",
        "patch_url": "https://github.com/apple/swift/pull/11172.patch"
      },
      "body": "\r\nThe code assumed if there is no context object but rather the captured argument\r\nis reused as the context object that the parameter index for this argument is\r\ngoing to be the last one. This is not true if there are empty types in the\r\nparameter list.\r\n\r\nrdar://33502272",
      "score": 1.8353993
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11173",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11173/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11173/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11173/events",
      "html_url": "https://github.com/apple/swift/pull/11173",
      "id": 245523459,
      "number": 11173,
      "title": "[4.0] IRGen: Fix partial applies of generic functions capturing the generic parameters in an argument",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T20:20:59Z",
      "updated_at": "2017-07-26T13:41:55Z",
      "closed_at": "2017-07-26T13:41:55Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11173",
        "html_url": "https://github.com/apple/swift/pull/11173",
        "diff_url": "https://github.com/apple/swift/pull/11173.diff",
        "patch_url": "https://github.com/apple/swift/pull/11173.patch"
      },
      "body": "The code assumed if there is no context object but rather the captured argument\r\nis reused as the context object that the parameter index for this argument is\r\ngoing to be the last one. This is not true if there are empty types in the\r\nparameter list.\r\n\r\nrdar://33502272\r\n\r\nExplanation: We would get closure construction wrong (compiler crash) if the closure captured on generic class and an empty type.\r\nThe code assumed if there is no context object but rather the captured argument\r\nis reused as the context object that the parameter index for this argument is\r\ngoing to be the last one. This is not true if there are empty types in the\r\nparameter list.\r\n\r\nScope: The fix addresses this by ignoring empty types in the index calculation\r\n\r\nOrigination: This got introduced with my fix for restoring generic class captures. It would not have worked before either though.\r\n\r\nReviewed by: John McCall\r\n\r\nTesting: A regression test was added to the swift test suite",
      "score": 1.8359615
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11174",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11174/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11174/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11174/events",
      "html_url": "https://github.com/apple/swift/pull/11174",
      "id": 245533405,
      "number": 11174,
      "title": "[GSB] SE-0157: Reprocess delayed requirements when we need a complete PA",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-25T20:58:19Z",
      "updated_at": "2017-07-26T05:14:41Z",
      "closed_at": "2017-07-26T00:32:48Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11174",
        "html_url": "https://github.com/apple/swift/pull/11174",
        "diff_url": "https://github.com/apple/swift/pull/11174.diff",
        "patch_url": "https://github.com/apple/swift/pull/11174.patch"
      },
      "body": "Whenever we need a complete, well-formed potential archetype,\r\nreprocess any delayed requirements, so that we pick up additional\r\nrequirements on that potential archetype.\r\n\r\nThis relies on us tracking a generation count for the GSB instance as\r\na whole, which gets bumped each time we add some new requirement or\r\ncreate a new potential archetype, and only actually reprocessing\r\ndelayed requirements when the generation count exceeds the point at\r\nwhich we last processed delayed requirements.\r\n\r\nThis gets the most basic recursive protocol constraint working\r\nend-to-end. The actual improvements are gated on the `-enable-recursive-constraints` flag because the reprocessing causes type-checker performance issues. ",
      "score": 1.8320645
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11175",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11175/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11175/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11175/events",
      "html_url": "https://github.com/apple/swift/pull/11175",
      "id": 245537519,
      "number": 11175,
      "title": "[overlay] Add back INSetProfileInCarIntent.defaultProfile for compatibliity",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-25T21:14:29Z",
      "updated_at": "2017-07-26T23:54:29Z",
      "closed_at": "2017-07-26T23:54:26Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11175",
        "html_url": "https://github.com/apple/swift/pull/11175",
        "diff_url": "https://github.com/apple/swift/pull/11175.diff",
        "patch_url": "https://github.com/apple/swift/pull/11175.patch"
      },
      "body": "<rdar://problem/33457609>",
      "score": 1.8398392
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11176",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11176/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11176/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11176/events",
      "html_url": "https://github.com/apple/swift/pull/11176",
      "id": 245538684,
      "number": 11176,
      "title": "[swift-4.0-branch][overlay] Add back INSetProfileInCarIntent.defaultProfile for compatibliity",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-25T21:19:18Z",
      "updated_at": "2017-07-26T17:07:47Z",
      "closed_at": "2017-07-26T17:07:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11176",
        "html_url": "https://github.com/apple/swift/pull/11176",
        "diff_url": "https://github.com/apple/swift/pull/11176.diff",
        "patch_url": "https://github.com/apple/swift/pull/11176.patch"
      },
      "body": "* Explanation: Adds back mistakenly deleted defaultProfile property for INSetProfileInCarIntent\n* Scope of Issue: Reinstates API backward compatibility\n* Risk: Minimal\n* Reviewed By: Max Moiseev\n* Testing: Automated test suite + a dedicated test case\n* Directions for QA: N/A\n* Radar: <rdar://problem/33457609>",
      "score": 1.8376739
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11177",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11177/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11177/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11177/events",
      "html_url": "https://github.com/apple/swift/pull/11177",
      "id": 245538800,
      "number": 11177,
      "title": "Swift cmake cross compile",
      "user": {
        "login": "llvm-beanz",
        "id": 15788759,
        "avatar_url": "https://avatars1.githubusercontent.com/u/15788759?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/llvm-beanz",
        "html_url": "https://github.com/llvm-beanz",
        "followers_url": "https://api.github.com/users/llvm-beanz/followers",
        "following_url": "https://api.github.com/users/llvm-beanz/following{/other_user}",
        "gists_url": "https://api.github.com/users/llvm-beanz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/llvm-beanz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/llvm-beanz/subscriptions",
        "organizations_url": "https://api.github.com/users/llvm-beanz/orgs",
        "repos_url": "https://api.github.com/users/llvm-beanz/repos",
        "events_url": "https://api.github.com/users/llvm-beanz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/llvm-beanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-25T21:19:47Z",
      "updated_at": "2017-07-26T22:44:59Z",
      "closed_at": "2017-07-26T22:44:59Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11177",
        "html_url": "https://github.com/apple/swift/pull/11177",
        "diff_url": "https://github.com/apple/swift/pull/11177.diff",
        "patch_url": "https://github.com/apple/swift/pull/11177.patch"
      },
      "body": "This pull request enables supporting proper CMake-style cross-compiling for Swift. There are a lot of issues still with building the runtimes under a proper CMake cross compile, but this does enable the compiler to be built using CMake's support for cross compilation.\r\n\r\nPart of this patch is not faking out the LLVM build system into thinking that swift has its own table gen. Since swift uses LLVM's tablegen it should be using LLVM_TABLEGEN variables and the project name for tablegen CMake calls should be LLVM.\r\n\r\nThis patch is written such that it should not break build-script or the swift project's methods for cross compilation already in use.",
      "score": 1.8395147
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11182",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11182/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11182/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11182/events",
      "html_url": "https://github.com/apple/swift/pull/11182",
      "id": 245559565,
      "number": 11182,
      "title": "Large Types IRGen Pass: bugfixes for global large type",
      "user": {
        "login": "shajrawi",
        "id": 17753158,
        "avatar_url": "https://avatars3.githubusercontent.com/u/17753158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shajrawi",
        "html_url": "https://github.com/shajrawi",
        "followers_url": "https://api.github.com/users/shajrawi/followers",
        "following_url": "https://api.github.com/users/shajrawi/following{/other_user}",
        "gists_url": "https://api.github.com/users/shajrawi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shajrawi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shajrawi/subscriptions",
        "organizations_url": "https://api.github.com/users/shajrawi/orgs",
        "repos_url": "https://api.github.com/users/shajrawi/repos",
        "events_url": "https://api.github.com/users/shajrawi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shajrawi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-25T23:01:01Z",
      "updated_at": "2017-07-25T23:32:05Z",
      "closed_at": "2017-07-25T23:32:02Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11182",
        "html_url": "https://github.com/apple/swift/pull/11182",
        "diff_url": "https://github.com/apple/swift/pull/11182.diff",
        "patch_url": "https://github.com/apple/swift/pull/11182.patch"
      },
      "body": "radar rdar://problem/28680453\r\n\r\nAdd support for calling functions that contain a large type as the return value from inside functions that maintain the old calling conventions + Adds support for the this case when parsed as a library: handling builtin instructions.\r\n\r\nThis also resolves a test-case failure on some 32-bit targets",
      "score": 1.832986
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/11183",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/11183/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/11183/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/11183/events",
      "html_url": "https://github.com/apple/swift/pull/11183",
      "id": 245562603,
      "number": 11183,
      "title": "[Clang importer] Map swift_objc_members attribute found on superclasses.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-25T23:19:24Z",
      "updated_at": "2017-07-26T16:55:29Z",
      "closed_at": "2017-07-26T05:15:39Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/11183",
        "html_url": "https://github.com/apple/swift/pull/11183",
        "diff_url": "https://github.com/apple/swift/pull/11183.diff",
        "patch_url": "https://github.com/apple/swift/pull/11183.patch"
      },
      "body": "Fixes rdar://problem/33514802.\r\n",
      "score": 1.8388311
    }
  ]
}

