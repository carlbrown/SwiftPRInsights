{
  "total_count": 1407,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10530",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10530/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10530/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10530/events",
      "html_url": "https://github.com/apple/swift/pull/10530",
      "id": 238054289,
      "number": 10530,
      "title": "[index] Add missing parameter and return type references in subscript declarations",
      "user": {
        "login": "nathawes",
        "id": 23247203,
        "avatar_url": "https://avatars3.githubusercontent.com/u/23247203?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nathawes",
        "html_url": "https://github.com/nathawes",
        "followers_url": "https://api.github.com/users/nathawes/followers",
        "following_url": "https://api.github.com/users/nathawes/following{/other_user}",
        "gists_url": "https://api.github.com/users/nathawes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nathawes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nathawes/subscriptions",
        "organizations_url": "https://api.github.com/users/nathawes/orgs",
        "repos_url": "https://api.github.com/users/nathawes/repos",
        "events_url": "https://api.github.com/users/nathawes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nathawes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-23T06:41:30Z",
      "updated_at": "2017-06-23T18:55:21Z",
      "closed_at": "2017-06-23T18:55:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10530",
        "html_url": "https://github.com/apple/swift/pull/10530",
        "diff_url": "https://github.com/apple/swift/pull/10530.diff",
        "patch_url": "https://github.com/apple/swift/pull/10530.patch"
      },
      "body": "<!-- What's in this pull request? -->\r\nSubscript return types, parameters, and parameter types were not being indexed, so were being missed in rename operations. This patch removes the special case code for subscripts that was preventing these from being indexed.\r\n\r\n<!-- If this pull request resolves any bugs in the Swift bug tracker, provide a link: -->\r\nResolves rdar://problem/32314185.\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->",
      "score": 1.2423868
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10531",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10531/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10531/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10531/events",
      "html_url": "https://github.com/apple/swift/pull/10531",
      "id": 238065739,
      "number": 10531,
      "title": "[Constraint solver] Gather constraints from adjacencies of equiv class.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-23T07:46:02Z",
      "updated_at": "2017-06-23T18:59:13Z",
      "closed_at": "2017-06-23T18:59:09Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10531",
        "html_url": "https://github.com/apple/swift/pull/10531",
        "diff_url": "https://github.com/apple/swift/pull/10531.diff",
        "patch_url": "https://github.com/apple/swift/pull/10531.patch"
      },
      "body": "    When gathering constraints for a type variable, we were gathering all of\r\n    the constraints for the members of the equivalence class, and then for\r\n    the adjacencies of the representative of the equivalence class, but not\r\n    from the adjacencies of other members of the equivalence class.\r\n    \r\n    For example for:\r\n      #3 = $T3\r\n      #4 = $T4 equivalent to $T3\r\n      #5 = $T5 as $T4.Element\r\n    \r\n    after binding $T3 we would collect the constraints related to $T3 and\r\n    $T4, but not $T5. The end result can be that we finish examining all\r\n    disjunctions and type bindings but still have inactive constraints in\r\n    the constraint graph, which is treated as a failure in the solver.\r\n    \r\n    Fixes SR-5120 / rdar://problem/32618740.\r\n",
      "score": 1.2427865
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10532",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10532/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10532/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10532/events",
      "html_url": "https://github.com/apple/swift/pull/10532",
      "id": 238079041,
      "number": 10532,
      "title": "[4.0] [ClangImporter] Fix importType to return interface types for generic parameters",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2017-06-23T08:46:53Z",
      "updated_at": "2017-06-23T18:21:33Z",
      "closed_at": "2017-06-23T18:21:33Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10532",
        "html_url": "https://github.com/apple/swift/pull/10532",
        "diff_url": "https://github.com/apple/swift/pull/10532.diff",
        "patch_url": "https://github.com/apple/swift/pull/10532.patch"
      },
      "body": "* Description: `ClangImporter`'s `importType` should always return interface types\r\nfor everything it imports, which helps to avoid tracking of declaration\r\ncontexts and remapping returned types in/out of them.\r\n\r\n* Scope of the issue: Avoid unnecessarily mapping types in/out of the declaration context while\r\nimporting.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: New test cases added, Swift CI.\r\n\r\n* Reviewed by: Doug Gregor, Slava Pestov.\r\n\r\n* Resolves: rdar://problem/32298667\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.242993
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10533",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10533/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10533/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10533/events",
      "html_url": "https://github.com/apple/swift/pull/10533",
      "id": 238203984,
      "number": 10533,
      "title": "[Constraint solver] Gather constraints from adjacencies of equiv class.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2017-06-23T17:19:40Z",
      "updated_at": "2017-06-23T20:37:58Z",
      "closed_at": "2017-06-23T19:43:33Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10533",
        "html_url": "https://github.com/apple/swift/pull/10533",
        "diff_url": "https://github.com/apple/swift/pull/10533.diff",
        "patch_url": "https://github.com/apple/swift/pull/10533.patch"
      },
      "body": "When gathering constraints for a type variable, we were gathering all of\r\nthe constraints for the members of the equivalence class, and then for\r\nthe adjacencies of the representative of the equivalence class, but not\r\nfrom the adjacencies of other members of the equivalence class.\r\n\r\nFor example for:\r\n  #3 = $T3\r\n  #4 = $T4 equivalent to $T3\r\n  #5 = $T5 as $T4.Element\r\n\r\nafter binding $T3 we would collect the constraints related to $T3 and\r\n$T4, but not $T5. The end result can be that we finish examining all\r\ndisjunctions and type bindings but still have inactive constraints in\r\nthe constraint graph, which is treated as a failure in the solver.\r\n\r\nFixes SR-5120 / rdar://problem/32618740.\r\n\r\n(cherry picked from commit 687624e3173db98a91345157501fe03ae97b9865)\r\n",
      "score": 1.2463962
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10534",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10534/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10534/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10534/events",
      "html_url": "https://github.com/apple/swift/pull/10534",
      "id": 238209848,
      "number": 10534,
      "title": "[4.0] [CMake] iOS simulator should still build 32-bit by default.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T17:46:36Z",
      "updated_at": "2017-06-23T19:46:20Z",
      "closed_at": "2017-06-23T19:46:04Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10534",
        "html_url": "https://github.com/apple/swift/pull/10534",
        "diff_url": "https://github.com/apple/swift/pull/10534.diff",
        "patch_url": "https://github.com/apple/swift/pull/10534.patch"
      },
      "body": "- **Explanation**: The iOS simulator build was accidentally set to only build a 64-bit slice. Reactivate the 32-bit slice by adding \"i386\" back into the list of supported architectures.\r\n- **Scope**: Affects all iOS simulator libraries (the stdlib and overlays, plus support libraries like StdlibUnittest)\r\n- **Radar**: rdar://problem/32862833\r\n- **Reviewed by**: @shahmishal \r\n- **Risk**: Very low. This was a previously working and tested configuration.\r\n- **Testing**: Verified locally that both slices were being built once again.",
      "score": 1.2465681
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10535",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10535/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10535/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10535/events",
      "html_url": "https://github.com/apple/swift/pull/10535",
      "id": 238211633,
      "number": 10535,
      "title": "[AST] Use ParenType for the input type of canonical function types.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-23T17:54:30Z",
      "updated_at": "2017-06-23T21:39:20Z",
      "closed_at": "2017-06-23T21:24:46Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10535",
        "html_url": "https://github.com/apple/swift/pull/10535",
        "diff_url": "https://github.com/apple/swift/pull/10535.diff",
        "patch_url": "https://github.com/apple/swift/pull/10535.patch"
      },
      "body": "As a step toward eliminating the single input type\r\nrepresentation of function parameters, add more constraints on that\r\ninput type. It can be one of:\r\n\r\n* A tuple type, for multiple parameters,\r\n* A parenthesized type, for a single parameter, or\r\n* A type variable type, for specific cases in the type checker\r\n\r\nEnforce these constraints for *canonical* types as well, so the\r\ncanonical form of:\r\n\r\n    typealias MyInt = Int\r\n    typealias MyFuncType = (MyInt) -> Int\r\n\r\nis now:\r\n\r\n    (Int) -> Int\r\n\r\nrather than:\r\n\r\n    Int -> Int\r\n\r\nThis affects canonicalization of `FunctionType` and\r\n`GenericFunctionType`. Enhance both, as well as their `Can*Type`\r\ncounterparts, with \"get\" operators that take an array of\r\n`AnyFunctionType::Param`, and start switching a few clients over to this\r\nnew, preferred API.\r\n",
      "score": 1.2470248
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10537",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10537/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10537/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10537/events",
      "html_url": "https://github.com/apple/swift/pull/10537",
      "id": 238227961,
      "number": 10537,
      "title": "[4.0][index] Add missing parameter and return type references in subscript declarations",
      "user": {
        "login": "nathawes",
        "id": 23247203,
        "avatar_url": "https://avatars3.githubusercontent.com/u/23247203?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nathawes",
        "html_url": "https://github.com/nathawes",
        "followers_url": "https://api.github.com/users/nathawes/followers",
        "following_url": "https://api.github.com/users/nathawes/following{/other_user}",
        "gists_url": "https://api.github.com/users/nathawes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nathawes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nathawes/subscriptions",
        "organizations_url": "https://api.github.com/users/nathawes/orgs",
        "repos_url": "https://api.github.com/users/nathawes/repos",
        "events_url": "https://api.github.com/users/nathawes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nathawes/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T19:04:31Z",
      "updated_at": "2017-06-23T21:30:58Z",
      "closed_at": "2017-06-23T21:30:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10537",
        "html_url": "https://github.com/apple/swift/pull/10537",
        "diff_url": "https://github.com/apple/swift/pull/10537.diff",
        "patch_url": "https://github.com/apple/swift/pull/10537.patch"
      },
      "body": "\r\n* Explanation: The indexer wasn't covering subscript params or return types, resulting in a rename of any type references there failing and renames initiated on other occurrences of those types not updating them.\r\n* Scope of Issue: Affects rename of symbols used in subscript param/return types.\r\n* Radar: rdar://problem/32314185\r\n* Origination: The indexer was explicitly avoiding indexing subscript indices, though its unclear why from (the 2013 commit message doesn't mention a reason).\r\n* Risk: Low; This patch removes special case handling of subscripts.\r\n* Testing: Added regression tests for these cases\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.2474704
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10538",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10538/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10538/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10538/events",
      "html_url": "https://github.com/apple/swift/pull/10538",
      "id": 238238247,
      "number": 10538,
      "title": "[4.0] Allow classes to share an Encoder with superclass",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T19:53:36Z",
      "updated_at": "2017-06-26T16:34:42Z",
      "closed_at": "2017-06-23T21:57:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10538",
        "html_url": "https://github.com/apple/swift/pull/10538",
        "diff_url": "https://github.com/apple/swift/pull/10538.diff",
        "patch_url": "https://github.com/apple/swift/pull/10538.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10520 to `swift-4.0-branch`.\r\n\r\n**Explanation:** On encode, we previously treated every container request as a push; instead, we should allow the same container type to be requested multiple times so a class can pass its Encoder directly to its superclass if it needs to.\r\n**Scope:** Affects anyone trying to share an `Encoder` with their superclass when using `JSONEncoder` and `PropertyListEncoder`.\r\n**Radar:** rdar://problem/32927085\r\n**Risk:** Low\r\n**Testing:** Adds unit tests to `JSONEncoder` and `PlistEncoder` to confirm expected behavior.",
      "score": 1.2478733
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10539",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10539/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10539/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10539/events",
      "html_url": "https://github.com/apple/swift/pull/10539",
      "id": 238240388,
      "number": 10539,
      "title": "Encode Decimal as a numeric value in JSON",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-23T20:04:03Z",
      "updated_at": "2017-06-23T22:41:54Z",
      "closed_at": "2017-06-23T22:41:52Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10539",
        "html_url": "https://github.com/apple/swift/pull/10539",
        "diff_url": "https://github.com/apple/swift/pull/10539.diff",
        "patch_url": "https://github.com/apple/swift/pull/10539.patch"
      },
      "body": "**What's in this pull request?**\r\nAddresses [SR-5278](https://bugs.swift.org/browse/SR-5278).\r\n\r\nAllow JSONEncoder/JSONDecoder to intercept Decimal values so they get a numeric representation in JSON (instead of their default keyed implementation).",
      "score": 1.2481219
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10541",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10541/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10541/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10541/events",
      "html_url": "https://github.com/apple/swift/pull/10541",
      "id": 238249747,
      "number": 10541,
      "title": "[Markup] Print Tags in documentation comment XML",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-23T20:47:01Z",
      "updated_at": "2017-07-07T23:55:35Z",
      "closed_at": "2017-07-07T23:55:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10541",
        "html_url": "https://github.com/apple/swift/pull/10541",
        "diff_url": "https://github.com/apple/swift/pull/10541.diff",
        "patch_url": "https://github.com/apple/swift/pull/10541.patch"
      },
      "body": "This information needs to be picked up through SourceKit. It might be\r\nuseful as both metadata for sorting/filtering as well as presentation,\r\nso it makes sense to print it in the normal XML inside CommentParts.\r\n\r\nrdar://problem/32877771",
      "score": 1.3374304
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10542",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10542/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10542/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10542/events",
      "html_url": "https://github.com/apple/swift/pull/10542",
      "id": 238253619,
      "number": 10542,
      "title": "[Migrator] Don't run AST passes when in Swift 4 or later",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-23T21:05:45Z",
      "updated_at": "2017-06-23T21:26:20Z",
      "closed_at": "2017-06-23T21:26:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10542",
        "html_url": "https://github.com/apple/swift/pull/10542",
        "diff_url": "https://github.com/apple/swift/pull/10542.diff",
        "patch_url": "https://github.com/apple/swift/pull/10542.patch"
      },
      "body": "AST passes assume that you are migrating from a version earlier\r\nthan Swift 4, where declaration references and type names may be\r\nunconditionally renamed if their USRs match.\r\n\r\nFor example, this can happen for TypeMemberDiffItem entries where the\r\nObjective-C USR is the same in Swift 3 and Swift 4, but the type is\r\nspelled differently in Swift 4. A concrete example of this is:\r\n\r\n`NSDocumentTypeDocumentAttribute` (Swift 3) ->\r\n  `NSAttributedString.DocumentAttributeKey` (Swift 4).\r\n\r\nAlthough this declaration is imported differently in Swift 4, its\r\nObjective-C USR is `c:@NSDocumentTypeDocumentAttribute` for both.\r\n\r\nrdar://problem/32604558",
      "score": 1.2481787
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10543",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10543/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10543/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10543/events",
      "html_url": "https://github.com/apple/swift/pull/10543",
      "id": 238258493,
      "number": 10543,
      "title": "[Migrator] Don't run AST passes when in Swift 4 or later",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T21:30:35Z",
      "updated_at": "2017-06-23T23:21:18Z",
      "closed_at": "2017-06-23T23:21:16Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10543",
        "html_url": "https://github.com/apple/swift/pull/10543",
        "diff_url": "https://github.com/apple/swift/pull/10543.diff",
        "patch_url": "https://github.com/apple/swift/pull/10543.patch"
      },
      "body": "AST passes assume that you are migrating from a version earlier\r\nthan Swift 4, where declaration references and type names may be\r\nunconditionally renamed if their USRs match.\r\n\r\nFor example, this can happen for TypeMemberDiffItem entries where the\r\nObjective-C USR is the same in Swift 3 and Swift 4, but the type is\r\nspelled differently in Swift 4. A concrete example of this is:\r\n\r\n`NSDocumentTypeDocumentAttribute` (Swift 3) ->\r\n  `NSAttributedString.DocumentAttributeKey` (Swift 4).\r\n\r\nAlthough this declaration is imported differently in Swift 4, its\r\nObjective-C USR is `c:@NSDocumentTypeDocumentAttribute` for both.\r\n\r\nrdar://problem/32604558",
      "score": 1.248805
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10545",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10545/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10545/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10545/events",
      "html_url": "https://github.com/apple/swift/pull/10545",
      "id": 238263780,
      "number": 10545,
      "title": "Large Types IRGen Pass: Fix runtime crash for large enums",
      "user": {
        "login": "shajrawi",
        "id": 17753158,
        "avatar_url": "https://avatars3.githubusercontent.com/u/17753158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shajrawi",
        "html_url": "https://github.com/shajrawi",
        "followers_url": "https://api.github.com/users/shajrawi/followers",
        "following_url": "https://api.github.com/users/shajrawi/following{/other_user}",
        "gists_url": "https://api.github.com/users/shajrawi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shajrawi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shajrawi/subscriptions",
        "organizations_url": "https://api.github.com/users/shajrawi/orgs",
        "repos_url": "https://api.github.com/users/shajrawi/repos",
        "events_url": "https://api.github.com/users/shajrawi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shajrawi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-23T22:02:02Z",
      "updated_at": "2017-06-23T23:27:24Z",
      "closed_at": "2017-06-23T23:27:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10545",
        "html_url": "https://github.com/apple/swift/pull/10545",
        "diff_url": "https://github.com/apple/swift/pull/10545.diff",
        "patch_url": "https://github.com/apple/swift/pull/10545.patch"
      },
      "body": "radar rdar://problem/32094543\r\n\r\nFixes a runtime crash caused by the new large loadable types pass: when encountering a large enum, for which we change the switch-case into their address variant, `unchecked_take_enum_data_addr` can be destructive to the enum. as such, we need to create a copy of the enum and perform the `unchecked_take_enum_data_addr` on said copy",
      "score": 1.2490195
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10546",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10546/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10546/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10546/events",
      "html_url": "https://github.com/apple/swift/pull/10546",
      "id": 238264405,
      "number": 10546,
      "title": "[test] Report Swift version in the test name",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T22:06:02Z",
      "updated_at": "2017-06-23T22:43:24Z",
      "closed_at": "2017-06-23T22:36:32Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10546",
        "html_url": "https://github.com/apple/swift/pull/10546",
        "diff_url": "https://github.com/apple/swift/pull/10546.diff",
        "patch_url": "https://github.com/apple/swift/pull/10546.patch"
      },
      "body": "",
      "score": 1.2488325
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10549",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10549/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10549/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10549/events",
      "html_url": "https://github.com/apple/swift/pull/10549",
      "id": 238266910,
      "number": 10549,
      "title": "ARCCodeMotion: fix two problems in release hoisting",
      "user": {
        "login": "eeckstein",
        "id": 15270291,
        "avatar_url": "https://avatars0.githubusercontent.com/u/15270291?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eeckstein",
        "html_url": "https://github.com/eeckstein",
        "followers_url": "https://api.github.com/users/eeckstein/followers",
        "following_url": "https://api.github.com/users/eeckstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/eeckstein/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eeckstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eeckstein/subscriptions",
        "organizations_url": "https://api.github.com/users/eeckstein/orgs",
        "repos_url": "https://api.github.com/users/eeckstein/repos",
        "events_url": "https://api.github.com/users/eeckstein/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eeckstein/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-23T22:22:32Z",
      "updated_at": "2017-06-24T02:38:51Z",
      "closed_at": "2017-06-24T02:38:48Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10549",
        "html_url": "https://github.com/apple/swift/pull/10549",
        "diff_url": "https://github.com/apple/swift/pull/10549.diff",
        "patch_url": "https://github.com/apple/swift/pull/10549.patch"
      },
      "body": "1) PostOrderAnalysis is not invalidated after splitting critical edges. This let the data flow solver omit new inserted blocks.\r\n\r\n2) Handle infinite loops in the CFG correctly. So that we don’t insert random release instructions into such CFG pathes.\r\n\r\nhttps://bugs.swift.org/browse/SR-5187\r\nrdar://problem/32713742\r\n\r\n",
      "score": 1.2499379
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10550",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10550/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10550/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10550/events",
      "html_url": "https://github.com/apple/swift/pull/10550",
      "id": 238267670,
      "number": 10550,
      "title": "SourceKit: Reduce the duplication of key definitions. NFC",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-23T22:27:43Z",
      "updated_at": "2017-06-24T00:08:18Z",
      "closed_at": "2017-06-24T00:08:16Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10550",
        "html_url": "https://github.com/apple/swift/pull/10550",
        "diff_url": "https://github.com/apple/swift/pull/10550.diff",
        "patch_url": "https://github.com/apple/swift/pull/10550.patch"
      },
      "body": "We should have a single and unambiguous place to add new keys and request IDs to Sourcekitd.",
      "score": 1.2493436
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10551",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10551/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10551/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10551/events",
      "html_url": "https://github.com/apple/swift/pull/10551",
      "id": 238269030,
      "number": 10551,
      "title": "[overlay] Introducing INParameter",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-06-23T22:38:05Z",
      "updated_at": "2017-06-26T21:28:02Z",
      "closed_at": "2017-06-26T21:28:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10551",
        "html_url": "https://github.com/apple/swift/pull/10551",
        "diff_url": "https://github.com/apple/swift/pull/10551.diff",
        "patch_url": "https://github.com/apple/swift/pull/10551.patch"
      },
      "body": "<rdar://problem/32409847>\r\n",
      "score": 1.2668886
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10552",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10552/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10552/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10552/events",
      "html_url": "https://github.com/apple/swift/pull/10552",
      "id": 238269630,
      "number": 10552,
      "title": "[swift-4.0-branch][overlay] Introducing INParameter",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 11,
      "created_at": "2017-06-23T22:42:42Z",
      "updated_at": "2017-06-26T21:28:46Z",
      "closed_at": "2017-06-26T21:28:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10552",
        "html_url": "https://github.com/apple/swift/pull/10552",
        "diff_url": "https://github.com/apple/swift/pull/10552.diff",
        "patch_url": "https://github.com/apple/swift/pull/10552.patch"
      },
      "body": "* Explanation: Adds keyPath property to INParameter\r\n* Scope of Issue: Additive\r\n* Risk: Minimal\r\n* Reviewed By: Willem Mattelaer\r\n* Testing: Automated test suite + special test case\r\n* Directions for QA: N/A\r\n* Radar: <rdar://problem/32957861>",
      "score": 1.2669195
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10553",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10553/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10553/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10553/events",
      "html_url": "https://github.com/apple/swift/pull/10553",
      "id": 238270223,
      "number": 10553,
      "title": "[4.0] Encode Decimal as a numeric value in JSON",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-23T22:47:26Z",
      "updated_at": "2017-06-27T16:24:58Z",
      "closed_at": "2017-06-27T00:55:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10553",
        "html_url": "https://github.com/apple/swift/pull/10553",
        "diff_url": "https://github.com/apple/swift/pull/10553.diff",
        "patch_url": "https://github.com/apple/swift/pull/10553.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10539 to `swift-4.0-branch`.\r\n\r\n**Explanation:** Allow `JSONEncoder`/`JSONDecoder` to intercept `Decimal` values so they get a numeric representation in `JSON` (instead of their default keyed implementation).\r\n**Scope:** Affects those who want to read large decimal values representable by `Decimal` natively from JSON.\r\n**Radar:** rdar://problem/32926804\r\n**Risk:** Low\r\n**Testing:** Adds unit tests to confirm expected behavior.",
      "score": 1.2717963
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10555",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10555/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10555/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10555/events",
      "html_url": "https://github.com/apple/swift/pull/10555",
      "id": 238276370,
      "number": 10555,
      "title": "[Migrator] Make sure to lowercase properties in SetterToProperty",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-23T23:37:44Z",
      "updated_at": "2017-06-24T00:49:32Z",
      "closed_at": "2017-06-24T00:49:30Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10555",
        "html_url": "https://github.com/apple/swift/pull/10555",
        "diff_url": "https://github.com/apple/swift/pull/10555.diff",
        "patch_url": "https://github.com/apple/swift/pull/10555.patch"
      },
      "body": "Previously we were only stripping `set` from the name and not\r\nlowercasing the property.\r\n\r\nrdar://problem/32845968",
      "score": 1.249936
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10556",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10556/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10556/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10556/events",
      "html_url": "https://github.com/apple/swift/pull/10556",
      "id": 238278472,
      "number": 10556,
      "title": "KeyPaths: Add support for optional chaining/forcing components.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-23T23:59:18Z",
      "updated_at": "2017-06-26T22:57:43Z",
      "closed_at": "2017-06-26T22:57:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10556",
        "html_url": "https://github.com/apple/swift/pull/10556",
        "diff_url": "https://github.com/apple/swift/pull/10556.diff",
        "patch_url": "https://github.com/apple/swift/pull/10556.patch"
      },
      "body": "rdar://problem/31768715",
      "score": 1.267759
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10557",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10557/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10557/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10557/events",
      "html_url": "https://github.com/apple/swift/pull/10557",
      "id": 238279859,
      "number": 10557,
      "title": "[GSB] Concrete conformances and recursion",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-24T00:13:37Z",
      "updated_at": "2017-06-24T05:19:34Z",
      "closed_at": "2017-06-24T04:45:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10557",
        "html_url": "https://github.com/apple/swift/pull/10557",
        "diff_url": "https://github.com/apple/swift/pull/10557.diff",
        "patch_url": "https://github.com/apple/swift/pull/10557.patch"
      },
      "body": "Centralize and simplify the handling of conformance requirements\r\nresolved by same-type-to-concrete requirements in a few ways:\r\n\r\n* Always store a ProtocolConformanceRef in via-superclass and\r\n  via-concrete requirement sources, so we never lose this information.\r\n\r\n* When concretizing a nested type based on its parent, use the\r\n  via-concrete conformance information rather than performing lookup\r\n  again, simplifying this operation considerably and avoiding\r\n  redundant lookups.\r\n\r\n* When adding a conformance requirement to a potential archetype that\r\n  is equivalent to a concrete type, attempt to find and record the\r\n  conformance.\r\n\r\nThat work exposed the problem of infinitely-recursive potential archetypes that we knew existed (SR-4757) but were lacking a small test case, so this addresses that as well.\r\n\r\nFixes SR-4295 / rdar://problem/31372308, SR-4757 / rdar://problem/31912838, fixes 5 crashers, and (I believe) resolves a handful of other GSB bugs sitting on me that need more verification.",
      "score": 1.2512747
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10559",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10559/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10559/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10559/events",
      "html_url": "https://github.com/apple/swift/pull/10559",
      "id": 238281837,
      "number": 10559,
      "title": "[GSB] Consistent handling of same-type constraints and type aliases",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-24T00:37:23Z",
      "updated_at": "2017-06-24T04:45:33Z",
      "closed_at": "2017-06-24T04:45:30Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10559",
        "html_url": "https://github.com/apple/swift/pull/10559",
        "diff_url": "https://github.com/apple/swift/pull/10559.diff",
        "patch_url": "https://github.com/apple/swift/pull/10559.patch"
      },
      "body": "",
      "score": 1.2512761
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10560",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10560/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10560/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10560/events",
      "html_url": "https://github.com/apple/swift/pull/10560",
      "id": 238282760,
      "number": 10560,
      "title": "[Migrator] Make sure to lowercase properties in SetterToProperty",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-24T00:51:03Z",
      "updated_at": "2017-06-27T00:16:59Z",
      "closed_at": "2017-06-27T00:16:56Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10560",
        "html_url": "https://github.com/apple/swift/pull/10560",
        "diff_url": "https://github.com/apple/swift/pull/10560.diff",
        "patch_url": "https://github.com/apple/swift/pull/10560.patch"
      },
      "body": "Previously we were only stripping `set` from the name and not\r\nlowercasing the property.\r\n\r\nrdar://problem/32845968",
      "score": 1.2684077
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10561",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10561/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10561/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10561/events",
      "html_url": "https://github.com/apple/swift/pull/10561",
      "id": 238286228,
      "number": 10561,
      "title": "[runtime] swift_getObjectType() must ignore KVO's artificial subclasses.",
      "user": {
        "login": "gparker42",
        "id": 992218,
        "avatar_url": "https://avatars2.githubusercontent.com/u/992218?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gparker42",
        "html_url": "https://github.com/gparker42",
        "followers_url": "https://api.github.com/users/gparker42/followers",
        "following_url": "https://api.github.com/users/gparker42/following{/other_user}",
        "gists_url": "https://api.github.com/users/gparker42/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gparker42/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gparker42/subscriptions",
        "organizations_url": "https://api.github.com/users/gparker42/orgs",
        "repos_url": "https://api.github.com/users/gparker42/repos",
        "events_url": "https://api.github.com/users/gparker42/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gparker42/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-24T01:54:08Z",
      "updated_at": "2017-07-28T18:17:15Z",
      "closed_at": "2017-07-13T03:37:21Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10561",
        "html_url": "https://github.com/apple/swift/pull/10561",
        "diff_url": "https://github.com/apple/swift/pull/10561.diff",
        "patch_url": "https://github.com/apple/swift/pull/10561.patch"
      },
      "body": "Fixes SR-4363 and <rdar://problem/31275541> ",
      "score": 1.4913087
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10562",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10562/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10562/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10562/events",
      "html_url": "https://github.com/apple/swift/pull/10562",
      "id": 238296694,
      "number": 10562,
      "title": "[GSB] Don't add invalid concrete requirements.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-24T05:32:24Z",
      "updated_at": "2017-06-24T05:54:03Z",
      "closed_at": "2017-06-24T05:51:22Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10562",
        "html_url": "https://github.com/apple/swift/pull/10562",
        "diff_url": "https://github.com/apple/swift/pull/10562.diff",
        "patch_url": "https://github.com/apple/swift/pull/10562.patch"
      },
      "body": "When a concrete requirement is invalid due to the concrete type\r\nlacking a conformance to a particular, required protocol, don't emit\r\nthat incorrect requirement---it causes invalid states further down the\r\nline.\r\n\r\nFixes SR-5014 / rdar://problem/32402482. Also, pull in test cases recently fixed for SR-4786 / rdar://problem/31955862 and SR-4737 / rdar://problem/31905232.",
      "score": 1.2533295
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10563",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10563/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10563/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10563/events",
      "html_url": "https://github.com/apple/swift/pull/10563",
      "id": 238297049,
      "number": 10563,
      "title": "Add Swift 3 backward compatibility apinotes for ScreenSaver.",
      "user": {
        "login": "tkremenek",
        "id": 3087023,
        "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tkremenek",
        "html_url": "https://github.com/tkremenek",
        "followers_url": "https://api.github.com/users/tkremenek/followers",
        "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
        "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
        "organizations_url": "https://api.github.com/users/tkremenek/orgs",
        "repos_url": "https://api.github.com/users/tkremenek/repos",
        "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tkremenek/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-24T05:39:55Z",
      "updated_at": "2017-06-24T06:39:56Z",
      "closed_at": "2017-06-24T06:39:56Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10563",
        "html_url": "https://github.com/apple/swift/pull/10563",
        "diff_url": "https://github.com/apple/swift/pull/10563.diff",
        "patch_url": "https://github.com/apple/swift/pull/10563.patch"
      },
      "body": "",
      "score": 1.2535771
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10564",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10564/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10564/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10564/events",
      "html_url": "https://github.com/apple/swift/pull/10564",
      "id": 238297120,
      "number": 10564,
      "title": "Add Swift 3 backward compatibility apinotes for ScreenSaver.",
      "user": {
        "login": "tkremenek",
        "id": 3087023,
        "avatar_url": "https://avatars0.githubusercontent.com/u/3087023?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tkremenek",
        "html_url": "https://github.com/tkremenek",
        "followers_url": "https://api.github.com/users/tkremenek/followers",
        "following_url": "https://api.github.com/users/tkremenek/following{/other_user}",
        "gists_url": "https://api.github.com/users/tkremenek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tkremenek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tkremenek/subscriptions",
        "organizations_url": "https://api.github.com/users/tkremenek/orgs",
        "repos_url": "https://api.github.com/users/tkremenek/repos",
        "events_url": "https://api.github.com/users/tkremenek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tkremenek/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-24T05:41:27Z",
      "updated_at": "2017-06-24T14:50:57Z",
      "closed_at": "2017-06-24T06:40:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10564",
        "html_url": "https://github.com/apple/swift/pull/10564",
        "diff_url": "https://github.com/apple/swift/pull/10564.diff",
        "patch_url": "https://github.com/apple/swift/pull/10564.patch"
      },
      "body": "Explanation: Adds apinotes for ScreenSaver framework to roll back API changes for Swift 3\r\nScope of Issue: Uses of ScreenSaver framework in Swift 3 mode\r\nRisk: Minimal\r\nTesting: Tested in Xcode on project broken by original API changes\r\nDirections for QA: N/A\r\nRadar: rdar://problem/32967031",
      "score": 1.255633
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10565",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10565/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10565/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10565/events",
      "html_url": "https://github.com/apple/swift/pull/10565",
      "id": 238297991,
      "number": 10565,
      "title": "[4.0] [GSB] Improve handling of concrete types, type aliases, recursion",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 11,
      "created_at": "2017-06-24T06:01:44Z",
      "updated_at": "2017-06-26T22:32:39Z",
      "closed_at": "2017-06-26T22:23:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10565",
        "html_url": "https://github.com/apple/swift/pull/10565",
        "diff_url": "https://github.com/apple/swift/pull/10565.diff",
        "patch_url": "https://github.com/apple/swift/pull/10565.patch"
      },
      "body": "**Explanation**: Improves our handling of concrete conformances, type aliases in protocols, and same-type-to-concrete constraints in the generic signature builder to make them all more consistent and robust.\r\n**Scope**: Affects many uses of generic code; will reject a number of ill-formed cases that would previously crash the compiler.\r\n**Radar**: SR-4295 / rdar://problem/31372308, SR-4757 / rdar://problem/31912838, SR-4786 / rdar://problem/31955862, SR-5014 / rdar://problem/32402482, SR-4737 / rdar://problem/31905232, plus a few other dupes.\r\n**Risk**: Low-ish. The generic signature builder is key to all generics handling in Swift, so changes there can cause breakage... but it's also fairly well-tested via the standard library, so it's likely we'd have caught regressions.\r\n**Testing**: Compiler regression testing, plus lots of new tests from the various fixed radars.",
      "score": 1.2697984
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10567",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10567/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10567/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10567/events",
      "html_url": "https://github.com/apple/swift/pull/10567",
      "id": 238332214,
      "number": 10567,
      "title": "disable new large types test on 32-bit platforms to unblock the bots",
      "user": {
        "login": "shajrawi",
        "id": 17753158,
        "avatar_url": "https://avatars3.githubusercontent.com/u/17753158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shajrawi",
        "html_url": "https://github.com/shajrawi",
        "followers_url": "https://api.github.com/users/shajrawi/followers",
        "following_url": "https://api.github.com/users/shajrawi/following{/other_user}",
        "gists_url": "https://api.github.com/users/shajrawi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shajrawi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shajrawi/subscriptions",
        "organizations_url": "https://api.github.com/users/shajrawi/orgs",
        "repos_url": "https://api.github.com/users/shajrawi/repos",
        "events_url": "https://api.github.com/users/shajrawi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shajrawi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-24T17:58:57Z",
      "updated_at": "2017-06-27T02:18:50Z",
      "closed_at": "2017-06-24T19:10:06Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10567",
        "html_url": "https://github.com/apple/swift/pull/10567",
        "diff_url": "https://github.com/apple/swift/pull/10567.diff",
        "patch_url": "https://github.com/apple/swift/pull/10567.patch"
      },
      "body": "workaround for this error on the bots:\r\n```\r\n******************** TEST 'Swift(watchsimulator-i386) :: IRGen/big_types_corner_cases.swift' FAILED ********************\r\n06:45:12 Script:\r\n06:45:12 --\r\n06:45:12 /Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64/bin/swiftc -frontend -target i386-apple-watchos2.0  -module-cache-path '/var/folders/_8/79jmzf2142z2xydc_01btlx00000gn/T/swift-testsuite-clang-module-cachejTXIk2' -sdk /Applications/Xcode-beta.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/SDKs/WatchSimulator4.0.sdk -swift-version 3 -assume-parsing-unqualified-ownership-sil -enable-large-loadable-types /Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/test/IRGen/big_types_corner_cases.swift -emit-ir | /Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/utils/PathSanitizingFileCheck --sanitize 'BUILD_DIR=/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/swift-macosx-x86_64' --sanitize 'SOURCE_DIR=/Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift' --use-filecheck '/Users/buildnode/jenkins/workspace/oss-swift-package-osx/build/buildbot_osx/llvm-macosx-x86_64/./bin/FileCheck' /Users/buildnode/jenkins/workspace/oss-swift-package-osx/swift/test/IRGen/big_types_corner_cases.swift\r\n06:45:12 --\r\n```",
      "score": 1.2751539
    }
  ]
}

