{
  "total_count": 445,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10813",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10813/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10813/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10813/events",
      "html_url": "https://github.com/apple/swift/pull/10813",
      "id": 241352193,
      "number": 10813,
      "title": "Fix the swap_refcnt test on linux.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-07-07T19:02:32Z",
      "updated_at": "2017-07-07T23:07:50Z",
      "closed_at": "2017-07-07T20:17:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10813",
        "html_url": "https://github.com/apple/swift/pull/10813",
        "diff_url": "https://github.com/apple/swift/pull/10813.diff",
        "patch_url": "https://github.com/apple/swift/pull/10813.patch"
      },
      "body": "Fix the swap_refcnt test on linux.\r\n\r\nThe problem here is that we were performing a naive negative FileCheck test for\r\nretain/release. In certain modes, we would not have any retains/releases along\r\nnormal control paths but would have retains on unreachable paths. This test only\r\nis trying to test if normal code paths have this issue.\r\n\r\nTo work around this issue, I created a small utility pass that prunes all\r\nnon-unreachable instructions from blocks with an unreachable terminator. This is\r\nuseful functionality in general when analyzing SIL since often times one will\r\nhave large fatal error blocks that disguise the true behavior of the\r\nfunction. In this specific case, I just pipe in the normal sil output and run it\r\nthrough sil-opt. sil-opt then runs just the utility pass and I then FileCheck\r\nthat sil-opt output.\r\n\r\nrdar://30181104\r\n",
      "score": 1.4715225
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10814",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10814/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10814/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10814/events",
      "html_url": "https://github.com/apple/swift/pull/10814",
      "id": 241352949,
      "number": 10814,
      "title": "Index interchange",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-07T19:05:45Z",
      "updated_at": "2017-07-21T19:23:30Z",
      "closed_at": "2017-07-07T22:01:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10814",
        "html_url": "https://github.com/apple/swift/pull/10814",
        "diff_url": "https://github.com/apple/swift/pull/10814.diff",
        "patch_url": "https://github.com/apple/swift/pull/10814.patch"
      },
      "body": "Please see  #9806 for details and more test results.  I failed to merge the [changes to swift-corelibs-foundation](apple/swift-corelibs-foundation#1096) at the same time as I merged that PR, and it broke on linux.  This PR is merely getting the merge done correctly.",
      "score": 1.4720324
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10815",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10815/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10815/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10815/events",
      "html_url": "https://github.com/apple/swift/pull/10815",
      "id": 241352968,
      "number": 10815,
      "title": "Fix sys::Cache for ref-counted values which caused memory leaks in SourceKit",
      "user": {
        "login": "benlangmuir",
        "id": 3412956,
        "avatar_url": "https://avatars2.githubusercontent.com/u/3412956?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benlangmuir",
        "html_url": "https://github.com/benlangmuir",
        "followers_url": "https://api.github.com/users/benlangmuir/followers",
        "following_url": "https://api.github.com/users/benlangmuir/following{/other_user}",
        "gists_url": "https://api.github.com/users/benlangmuir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/benlangmuir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/benlangmuir/subscriptions",
        "organizations_url": "https://api.github.com/users/benlangmuir/orgs",
        "repos_url": "https://api.github.com/users/benlangmuir/repos",
        "events_url": "https://api.github.com/users/benlangmuir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/benlangmuir/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-07T19:05:49Z",
      "updated_at": "2017-07-07T20:34:36Z",
      "closed_at": "2017-07-07T20:17:10Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10815",
        "html_url": "https://github.com/apple/swift/pull/10815",
        "diff_url": "https://github.com/apple/swift/pull/10815.diff",
        "patch_url": "https://github.com/apple/swift/pull/10815.patch"
      },
      "body": "Our libcache implementation of swift::sys::Cache was broken for\r\nref-counted values (which are used by e.g. the SourceKit ASTManager).\r\nIt would always `retain(value)` in `set(key, value)`, but under the hood\r\nlibcache shares values, so we would only get one `release(value)` if the\r\nsame value was used across multiple keys, or if the same value *and* key\r\nwere set multiple times.\r\n\r\nThis was causing us to never release ASTs cached by SourceKit even when\r\nthe underlying libcache purged itself under memory pressure.\r\n\r\nrdar://problem/21619189\r\n",
      "score": 1.4715481
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10816",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10816/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10816/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10816/events",
      "html_url": "https://github.com/apple/swift/pull/10816",
      "id": 241359392,
      "number": 10816,
      "title": "[NFC] Remove dead lowering path for inout elements of tuple parameters",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-07T19:34:19Z",
      "updated_at": "2017-07-07T21:25:10Z",
      "closed_at": "2017-07-07T21:25:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10816",
        "html_url": "https://github.com/apple/swift/pull/10816",
        "diff_url": "https://github.com/apple/swift/pull/10816.diff",
        "patch_url": "https://github.com/apple/swift/pull/10816.patch"
      },
      "body": "As far as I can tell, this code hasn't been relevant for quite some time.  But we'll let the test suite be the judge of that.",
      "score": 1.4720799
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10817",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10817/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10817/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10817/events",
      "html_url": "https://github.com/apple/swift/pull/10817",
      "id": 241364749,
      "number": 10817,
      "title": "[stdlib] Attaching document comment properly to AnyObject. NFC",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-07T19:57:26Z",
      "updated_at": "2017-07-07T23:01:50Z",
      "closed_at": "2017-07-07T23:01:48Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10817",
        "html_url": "https://github.com/apple/swift/pull/10817",
        "diff_url": "https://github.com/apple/swift/pull/10817.diff",
        "patch_url": "https://github.com/apple/swift/pull/10817.patch"
      },
      "body": "Resolving rdar://33155670",
      "score": 1.4727048
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10818",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10818/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10818/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10818/events",
      "html_url": "https://github.com/apple/swift/pull/10818",
      "id": 241373083,
      "number": 10818,
      "title": "[4.0] JSONEncoder conditional conformance workarounds",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-07T20:33:39Z",
      "updated_at": "2017-07-10T15:52:35Z",
      "closed_at": "2017-07-10T15:52:35Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10818",
        "html_url": "https://github.com/apple/swift/pull/10818",
        "diff_url": "https://github.com/apple/swift/pull/10818.diff",
        "patch_url": "https://github.com/apple/swift/pull/10818.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10766 to `swift-4.0-branch`.\r\n\r\n**Explanation:** One of the limitations of not having conditional conformance at the moment is that the implementation of `init(from:)` and `encode(to:)` on types which require it is that failure to cast dependent types to `Encodable` or `Decodable` is a runtime failure. There is no way to statically guarantee that the wrapped type is `Encodable` or `Decodable`.\r\n\r\nAs such, in those implementations, at best we can directly call `(element as! Encodable).encode(to: encoder)`, or similar. However, this encodes the element directly into an encoder, without giving the encoder a chance to intercept the type. This is problematic for `JSONEncoder` because it cannot apply a strategy if it doesn't get to intercept the type.\r\n\r\nThis gives a temporary workaround for JSON strategies because of internal Foundation knowledge.\r\n**Scope:** Affects anyone encoding and decoding `Date`s, `Data`, `URL`s, and `Decimal`s with `JSONEncoder` and `JSONDecoder`\r\n**Radar:** rdar://problem/32535991\r\n**Risk:** Low\r\n**Testing:** Updates unit tests to confirm expected behavior.",
      "score": 1.4913098
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10819",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10819/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10819/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10819/events",
      "html_url": "https://github.com/apple/swift/pull/10819",
      "id": 241375650,
      "number": 10819,
      "title": "Remove overlapping exclusive accesses in encoders",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-07T20:45:41Z",
      "updated_at": "2017-07-29T00:33:17Z",
      "closed_at": "2017-07-07T23:08:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10819",
        "html_url": "https://github.com/apple/swift/pull/10819",
        "diff_url": "https://github.com/apple/swift/pull/10819.diff",
        "patch_url": "https://github.com/apple/swift/pull/10819.patch"
      },
      "body": "**What's in this pull request?**\r\n{JSON,Plist}{Encoder,Decoder} had overlapping accesses which were supposed to be mutually exclusive in their `with(pushedKey:)` methods.\r\n\r\nRemoves those methods and the overlapping accesses.",
      "score": 1.6274115
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10820",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10820/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10820/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10820/events",
      "html_url": "https://github.com/apple/swift/pull/10820",
      "id": 241382142,
      "number": 10820,
      "title": "[4.0] Support keypaths with dependently-generic computed components.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-07T21:14:25Z",
      "updated_at": "2017-07-10T20:28:37Z",
      "closed_at": "2017-07-10T20:28:37Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10820",
        "html_url": "https://github.com/apple/swift/pull/10820",
        "diff_url": "https://github.com/apple/swift/pull/10820.diff",
        "patch_url": "https://github.com/apple/swift/pull/10820.patch"
      },
      "body": "Explanation: Adds support for keypaths that reference computed properties requiring the capture of generic context.\r\n\r\nScope: Completes the support for property references in key paths. The previous restriction here is difficult to explain to users otherwise.\r\n\r\nIssue: rdar://problem/31768590\r\n\r\nRisk: Low. Additive improvement to key paths, should be almost no impact on the rest of the compiler.\r\n\r\nTesting: Swift CI",
      "score": 1.4929342
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10821",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10821/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10821/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10821/events",
      "html_url": "https://github.com/apple/swift/pull/10821",
      "id": 241402560,
      "number": 10821,
      "title": "[4.0] Remove overlapping exclusive accesses in encoders",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-07T23:11:09Z",
      "updated_at": "2017-07-10T16:47:50Z",
      "closed_at": "2017-07-10T16:47:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10821",
        "html_url": "https://github.com/apple/swift/pull/10821",
        "diff_url": "https://github.com/apple/swift/pull/10821.diff",
        "patch_url": "https://github.com/apple/swift/pull/10821.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10819 to `swift-4.0-branch`.\r\n\r\n**Explanation:** {JSON,Plist}{Encoder,Decoder} had overlapping accesses which were supposed to be mutually exclusive in their `with(pushedKey:)` methods. This Removes those methods and the overlapping accesses.\r\n**Scope:** Affects anyone trying to use these classes as we're not invoking undefined behavior.\r\n**Radar:** rdar://problem/33146339\r\n**Risk:** Low\r\n**Testing:** All existing unit test pass; warnings for this no longer produced.",
      "score": 1.4927651
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10822",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10822/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10822/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10822/events",
      "html_url": "https://github.com/apple/swift/pull/10822",
      "id": 241406083,
      "number": 10822,
      "title": "Fix sys::Cache for ref-counted values which caused memory leaks in SourceKit",
      "user": {
        "login": "benlangmuir",
        "id": 3412956,
        "avatar_url": "https://avatars2.githubusercontent.com/u/3412956?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benlangmuir",
        "html_url": "https://github.com/benlangmuir",
        "followers_url": "https://api.github.com/users/benlangmuir/followers",
        "following_url": "https://api.github.com/users/benlangmuir/following{/other_user}",
        "gists_url": "https://api.github.com/users/benlangmuir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/benlangmuir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/benlangmuir/subscriptions",
        "organizations_url": "https://api.github.com/users/benlangmuir/orgs",
        "repos_url": "https://api.github.com/users/benlangmuir/repos",
        "events_url": "https://api.github.com/users/benlangmuir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/benlangmuir/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-07T23:39:52Z",
      "updated_at": "2017-07-10T15:42:23Z",
      "closed_at": "2017-07-10T15:42:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10822",
        "html_url": "https://github.com/apple/swift/pull/10822",
        "diff_url": "https://github.com/apple/swift/pull/10822.diff",
        "patch_url": "https://github.com/apple/swift/pull/10822.patch"
      },
      "body": "* **Explanation**: Our libcache implementation of swift::sys::Cache was broken for ref-counted values (which are used by e.g. the SourceKit ASTManager). This was causing us to never release ASTs cached by SourceKit even when the underlying libcache purged itself under memory pressure.\r\n* **Scope**: Affects memory usage under high system load on macOS.\r\n* **Radar**: rdar://problem/21619189\r\n* **Testing**: Unit tests added.\r\n",
      "score": 1.4926709
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10823",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10823/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10823/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10823/events",
      "html_url": "https://github.com/apple/swift/pull/10823",
      "id": 241413257,
      "number": 10823,
      "title": "Fix the swap_refcnt test on linux.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-07-08T00:59:09Z",
      "updated_at": "2017-07-08T17:09:08Z",
      "closed_at": "2017-07-08T17:09:08Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10823",
        "html_url": "https://github.com/apple/swift/pull/10823",
        "diff_url": "https://github.com/apple/swift/pull/10823.diff",
        "patch_url": "https://github.com/apple/swift/pull/10823.patch"
      },
      "body": "Fix the swap_refcnt test on linux.\r\n\r\nThe problem here is that we were performing a naive negative FileCheck test for\r\nretain/release. In certain modes, we would not have any retains/releases along\r\nnormal control paths but would have retains on unreachable paths. This test only\r\nis trying to test if normal code paths have this issue.\r\n\r\nTo work around this issue, I created a small utility pass that prunes all\r\nnon-unreachable instructions from blocks with an unreachable terminator. This is\r\nuseful functionality in general when analyzing SIL since often times one will\r\nhave large fatal error blocks that disguise the true behavior of the\r\nfunction. In this specific case, I just pipe in the normal sil output and run it\r\nthrough sil-opt. sil-opt then runs just the utility pass and I then FileCheck\r\nthat sil-opt output.\r\n\r\nrdar://30181104\r\n(cherry picked from commit 9933f0f3b225b71b06d614c903ea626bdadedfa5)",
      "score": 1.4800715
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10827",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10827/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10827/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10827/events",
      "html_url": "https://github.com/apple/swift/pull/10827",
      "id": 241492940,
      "number": 10827,
      "title": "Minor enhancements in libBasic",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-09T01:40:06Z",
      "updated_at": "2017-07-09T02:47:11Z",
      "closed_at": "2017-07-09T02:16:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10827",
        "html_url": "https://github.com/apple/swift/pull/10827",
        "diff_url": "https://github.com/apple/swift/pull/10827.diff",
        "patch_url": "https://github.com/apple/swift/pull/10827.patch"
      },
      "body": "Supporting some work in progress.",
      "score": 1.4939737
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10828",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10828/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10828/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10828/events",
      "html_url": "https://github.com/apple/swift/pull/10828",
      "id": 241500607,
      "number": 10828,
      "title": "[silgenpattern] Perform a copy if we have a borrowed cast operand, before we store it.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-09T04:56:44Z",
      "updated_at": "2017-07-09T05:20:14Z",
      "closed_at": "2017-07-09T05:20:10Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10828",
        "html_url": "https://github.com/apple/swift/pull/10828",
        "diff_url": "https://github.com/apple/swift/pull/10828.diff",
        "patch_url": "https://github.com/apple/swift/pull/10828.patch"
      },
      "body": "[silgenpattern] Perform a copy if we have a borrowed cast operand, before we store it.\r\n\r\nSometimes in SILGenPattern, we need use an indirect cast on object that does\r\nnot require re-abstraction as an optimization. A notable case where this happens\r\nare various casts related to NSError. In such a case, if we have a borrowed cast\r\noperand, perform a copy before the store to preserve semantic sil invariants.\r\n\r\nrdar://31880847",
      "score": 1.4963559
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10829",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10829/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10829/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10829/events",
      "html_url": "https://github.com/apple/swift/pull/10829",
      "id": 241500998,
      "number": 10829,
      "title": "Build fix on systems without std::is_trivially_copyable",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-09T05:06:53Z",
      "updated_at": "2017-07-09T06:27:48Z",
      "closed_at": "2017-07-09T06:27:45Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10829",
        "html_url": "https://github.com/apple/swift/pull/10829",
        "diff_url": "https://github.com/apple/swift/pull/10829.diff",
        "patch_url": "https://github.com/apple/swift/pull/10829.patch"
      },
      "body": "",
      "score": 1.4967526
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10830",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10830/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10830/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10830/events",
      "html_url": "https://github.com/apple/swift/pull/10830",
      "id": 241501144,
      "number": 10830,
      "title": "[sil-ownership-verifier] Allow class_method to take a metatype or a non-trivial type.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-09T05:10:55Z",
      "updated_at": "2017-07-09T06:32:54Z",
      "closed_at": "2017-07-09T06:31:44Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10830",
        "html_url": "https://github.com/apple/swift/pull/10830",
        "diff_url": "https://github.com/apple/swift/pull/10830.diff",
        "patch_url": "https://github.com/apple/swift/pull/10830.patch"
      },
      "body": "[sil-ownership-verifier] Allow class_method to take a metatype or a non-trivial type.\r\n\r\nrdar://31880847\r\n",
      "score": 1.4968026
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10831",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10831/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10831/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10831/events",
      "html_url": "https://github.com/apple/swift/pull/10831",
      "id": 241502673,
      "number": 10831,
      "title": "[silgen] Fix createUnsafeCopyUnownedValue to be correct from an ownership perspective.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-09T05:44:54Z",
      "updated_at": "2017-07-09T06:46:06Z",
      "closed_at": "2017-07-09T06:45:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10831",
        "html_url": "https://github.com/apple/swift/pull/10831",
        "diff_url": "https://github.com/apple/swift/pull/10831.diff",
        "patch_url": "https://github.com/apple/swift/pull/10831.patch"
      },
      "body": "[silgen] Fix createUnsafeCopyUnownedValue to be correct from an ownership perspective.\r\n\r\nWhen I originally implemented this, I did not understand why an unowned(unsafe)\r\nvalue was unsafe. I thought it was unsafe since the value was not meant to be\r\npaired with (which is why I used the unmanaged_retain_value). Instead it just\r\nmeans that we perform an unconditional copy without checking if the unowned\r\nvalue is actually live. In contrast, an unowned(safe) value, we use\r\ncopy_unowned_value which performs an assert that the unowned value is still\r\nalive before copying.\r\n\r\nFrom a non-semantic sil perspective, since I still was retaining the value\r\nproperly, there was not a bug by using the unmanaged_retain_value instruction.\r\n\r\nrdar://31880847\r\n",
      "score": 1.4971285
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10832",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10832/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10832/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10832/events",
      "html_url": "https://github.com/apple/swift/pull/10832",
      "id": 241504511,
      "number": 10832,
      "title": "Bridge types during import only if we are in a fully-bridgeable context.",
      "user": {
        "login": "rjmccall",
        "id": 793869,
        "avatar_url": "https://avatars1.githubusercontent.com/u/793869?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjmccall",
        "html_url": "https://github.com/rjmccall",
        "followers_url": "https://api.github.com/users/rjmccall/followers",
        "following_url": "https://api.github.com/users/rjmccall/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjmccall/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjmccall/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjmccall/subscriptions",
        "organizations_url": "https://api.github.com/users/rjmccall/orgs",
        "repos_url": "https://api.github.com/users/rjmccall/repos",
        "events_url": "https://api.github.com/users/rjmccall/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjmccall/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2017-07-09T06:29:27Z",
      "updated_at": "2017-07-11T20:03:52Z",
      "closed_at": "2017-07-09T20:47:01Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10832",
        "html_url": "https://github.com/apple/swift/pull/10832",
        "diff_url": "https://github.com/apple/swift/pull/10832.diff",
        "patch_url": "https://github.com/apple/swift/pull/10832.patch"
      },
      "body": "Somehow the logic had slipped so that we were basing this decision purely\r\non the ImportTypeKind and not on whether the broader context is bridgeable.\r\nThis was allowing us to use bridged types when e.g. importing the results and\r\nparameters of C function pointer types, which is really bad.\r\n\r\nAlso, when importing a reference to a typedef of block type, do not use\r\nthe typedef in a non-bridgeable context.  We import typedefs of block type\r\nas fully-bridged types, but this means that it is invalid to import a type\r\nusing the typedef in a context where the original C type must be used.\r\nSimilarly, make sure we use a properly-imported underlying type of the\r\ntypedef when the typedef itself is unavailable.\r\n\r\nAlso, extend the special behavior of block typedefs to abstract-function\r\ntypedefs, which seems to be consistent with the expected behavior of the\r\ntests.\r\n\r\nFinally, I changed importType to take a new Bridgeability enum instead of\r\na raw canFullyBridgeTypes bool.  At the time, I was doing that because I\r\nwas going to make it tri-valued; that turned out to be unnecessary, but I\r\nthink it's an improvement anyway.",
      "score": 1.5149848
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10833",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10833/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10833/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10833/events",
      "html_url": "https://github.com/apple/swift/pull/10833",
      "id": 241513480,
      "number": 10833,
      "title": "[semantic-sil] Teach the verifier that an enum return value is a ValueOwnershipKind erasure point.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-09T09:46:42Z",
      "updated_at": "2017-07-09T10:43:19Z",
      "closed_at": "2017-07-09T10:24:02Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10833",
        "html_url": "https://github.com/apple/swift/pull/10833",
        "diff_url": "https://github.com/apple/swift/pull/10833.diff",
        "patch_url": "https://github.com/apple/swift/pull/10833.patch"
      },
      "body": "[semantic-sil] Teach the verifier that an enum return value is a ValueOwnershipKind erasure point.\r\n\r\nThis means that a trivial enum case of a non-trivial enum can be returned @owned\r\neven though it is trivial. We already follow this pattern with bb arguments.\r\n\r\nrdar://31880847",
      "score": 1.5000339
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10834",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10834/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10834/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10834/events",
      "html_url": "https://github.com/apple/swift/pull/10834",
      "id": 241540000,
      "number": 10834,
      "title": "[Constraint system] Begin refactoring type variable binding selection.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-07-09T17:33:21Z",
      "updated_at": "2017-07-09T20:09:52Z",
      "closed_at": "2017-07-09T20:09:45Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10834",
        "html_url": "https://github.com/apple/swift/pull/10834",
        "diff_url": "https://github.com/apple/swift/pull/10834.diff",
        "patch_url": "https://github.com/apple/swift/pull/10834.patch"
      },
      "body": "Split out the code for selecting potential bindings into a separate file\r\nas a first step before refactoring it for improved clarity and ease of\r\nmodification.\r\n",
      "score": 1.5064315
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10837",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10837/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10837/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10837/events",
      "html_url": "https://github.com/apple/swift/pull/10837",
      "id": 241580478,
      "number": 10837,
      "title": "[semantic-sil] The return value from init_block_storage_header is not an address, it is an unowned object.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-10T02:05:26Z",
      "updated_at": "2017-07-10T02:30:47Z",
      "closed_at": "2017-07-10T02:30:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10837",
        "html_url": "https://github.com/apple/swift/pull/10837",
        "diff_url": "https://github.com/apple/swift/pull/10837.diff",
        "patch_url": "https://github.com/apple/swift/pull/10837.patch"
      },
      "body": "[semantic-sil] The return value from init_block_storage_header is not an address, it is an unowned object.\r\n\r\nrdar://31880847",
      "score": 1.5122429
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10838",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10838/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10838/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10838/events",
      "html_url": "https://github.com/apple/swift/pull/10838",
      "id": 241582403,
      "number": 10838,
      "title": "[QoI] Provide fix-it for missing \"try\" when calling throwing function",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-10T02:23:10Z",
      "updated_at": "2017-07-11T21:24:57Z",
      "closed_at": "2017-07-11T20:47:25Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10838",
        "html_url": "https://github.com/apple/swift/pull/10838",
        "diff_url": "https://github.com/apple/swift/pull/10838.diff",
        "patch_url": "https://github.com/apple/swift/pull/10838.patch"
      },
      "body": "When calling a throwing function without 'try', let's suggest multiple\r\npossibilities of note + fix-it for user to choose from.\r\n\r\nResolves: rdar://problem/33040113\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.52468
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10839",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10839/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10839/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10839/events",
      "html_url": "https://github.com/apple/swift/pull/10839",
      "id": 241604679,
      "number": 10839,
      "title": "fix minor mistake",
      "user": {
        "login": "RushingTwist",
        "id": 21056633,
        "avatar_url": "https://avatars3.githubusercontent.com/u/21056633?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RushingTwist",
        "html_url": "https://github.com/RushingTwist",
        "followers_url": "https://api.github.com/users/RushingTwist/followers",
        "following_url": "https://api.github.com/users/RushingTwist/following{/other_user}",
        "gists_url": "https://api.github.com/users/RushingTwist/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RushingTwist/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RushingTwist/subscriptions",
        "organizations_url": "https://api.github.com/users/RushingTwist/orgs",
        "repos_url": "https://api.github.com/users/RushingTwist/repos",
        "events_url": "https://api.github.com/users/RushingTwist/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RushingTwist/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-10T05:38:16Z",
      "updated_at": "2017-07-11T07:46:34Z",
      "closed_at": "2017-07-11T07:46:34Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10839",
        "html_url": "https://github.com/apple/swift/pull/10839",
        "diff_url": "https://github.com/apple/swift/pull/10839.diff",
        "patch_url": "https://github.com/apple/swift/pull/10839.patch"
      },
      "body": "Use the `flatMap` method. Parameter transform: A closure that takes the unwrapped value, right?\r\nand the example's result is 1764, not 1746.",
      "score": 1.5222836
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10840",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10840/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10840/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10840/events",
      "html_url": "https://github.com/apple/swift/pull/10840",
      "id": 241714646,
      "number": 10840,
      "title": "Use `id` explicitly instead of `auto` to avoid warnings.",
      "user": {
        "login": "giginet",
        "id": 147051,
        "avatar_url": "https://avatars3.githubusercontent.com/u/147051?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/giginet",
        "html_url": "https://github.com/giginet",
        "followers_url": "https://api.github.com/users/giginet/followers",
        "following_url": "https://api.github.com/users/giginet/following{/other_user}",
        "gists_url": "https://api.github.com/users/giginet/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/giginet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/giginet/subscriptions",
        "organizations_url": "https://api.github.com/users/giginet/orgs",
        "repos_url": "https://api.github.com/users/giginet/repos",
        "events_url": "https://api.github.com/users/giginet/events{/privacy}",
        "received_events_url": "https://api.github.com/users/giginet/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-10T13:37:09Z",
      "updated_at": "2017-07-11T02:07:43Z",
      "closed_at": "2017-07-10T21:28:22Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10840",
        "html_url": "https://github.com/apple/swift/pull/10840",
        "diff_url": "https://github.com/apple/swift/pull/10840.diff",
        "patch_url": "https://github.com/apple/swift/pull/10840.patch"
      },
      "body": "On Xcode 9 beta 2, a warning is raised when I built `swiftXCTest-macosx-x86_64`.\r\n\r\n<img width=\"1143\" alt=\"screen shot 2017-07-10 at 22 32 11\" src=\"https://user-images.githubusercontent.com/147051/28020579-e7a9c932-65bf-11e7-802e-fd5c273dc329.png\">",
      "score": 1.5231047
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10842",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10842/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10842/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10842/events",
      "html_url": "https://github.com/apple/swift/pull/10842",
      "id": 241786274,
      "number": 10842,
      "title": "[4.0][stdlib] Attaching document comment properly to AnyObject. rdar://33155670",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/apple/swift/milestones/9",
        "html_url": "https://github.com/apple/swift/milestone/9",
        "labels_url": "https://api.github.com/repos/apple/swift/milestones/9/labels",
        "id": 2501670,
        "number": 9,
        "title": "Swift 4.0",
        "description": null,
        "creator": {
          "login": "shahmishal",
          "id": 2727770,
          "avatar_url": "https://avatars2.githubusercontent.com/u/2727770?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shahmishal",
          "html_url": "https://github.com/shahmishal",
          "followers_url": "https://api.github.com/users/shahmishal/followers",
          "following_url": "https://api.github.com/users/shahmishal/following{/other_user}",
          "gists_url": "https://api.github.com/users/shahmishal/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shahmishal/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shahmishal/subscriptions",
          "organizations_url": "https://api.github.com/users/shahmishal/orgs",
          "repos_url": "https://api.github.com/users/shahmishal/repos",
          "events_url": "https://api.github.com/users/shahmishal/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shahmishal/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 0,
        "closed_issues": 83,
        "state": "open",
        "created_at": "2017-05-05T05:40:40Z",
        "updated_at": "2017-07-31T22:11:56Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2017-07-10T17:22:31Z",
      "updated_at": "2017-07-10T19:43:49Z",
      "closed_at": "2017-07-10T19:43:46Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10842",
        "html_url": "https://github.com/apple/swift/pull/10842",
        "diff_url": "https://github.com/apple/swift/pull/10842.diff",
        "patch_url": "https://github.com/apple/swift/pull/10842.patch"
      },
      "body": "- Explanation: This change will allow SourceKitd to generate documentation for AnyObject properly.\r\n- Scope: Documentation for Swift stdlib\r\n- Radar: rdar://33155670\r\n- Risk: Almost none\r\n- Testing: Since this change is non-functional, existing tests will cover the behavior.",
      "score": 1.5243903
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10843",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10843/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10843/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10843/events",
      "html_url": "https://github.com/apple/swift/pull/10843",
      "id": 241789956,
      "number": 10843,
      "title": "[docs] Use `` around @noescape and @autoclosure like we do in other places in SIL.rst.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-10T17:36:40Z",
      "updated_at": "2017-07-10T19:50:58Z",
      "closed_at": "2017-07-10T18:58:30Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10843",
        "html_url": "https://github.com/apple/swift/pull/10843",
        "diff_url": "https://github.com/apple/swift/pull/10843.diff",
        "patch_url": "https://github.com/apple/swift/pull/10843.patch"
      },
      "body": "NFC.",
      "score": 1.5242866
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10844",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10844/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10844/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10844/events",
      "html_url": "https://github.com/apple/swift/pull/10844",
      "id": 241799546,
      "number": 10844,
      "title": "[Driver] Remove built-in `run` subcommand",
      "user": {
        "login": "aciidb0mb3r",
        "id": 4136295,
        "avatar_url": "https://avatars0.githubusercontent.com/u/4136295?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aciidb0mb3r",
        "html_url": "https://github.com/aciidb0mb3r",
        "followers_url": "https://api.github.com/users/aciidb0mb3r/followers",
        "following_url": "https://api.github.com/users/aciidb0mb3r/following{/other_user}",
        "gists_url": "https://api.github.com/users/aciidb0mb3r/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aciidb0mb3r/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aciidb0mb3r/subscriptions",
        "organizations_url": "https://api.github.com/users/aciidb0mb3r/orgs",
        "repos_url": "https://api.github.com/users/aciidb0mb3r/repos",
        "events_url": "https://api.github.com/users/aciidb0mb3r/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aciidb0mb3r/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "DougGregor",
          "id": 989428,
          "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DougGregor",
          "html_url": "https://github.com/DougGregor",
          "followers_url": "https://api.github.com/users/DougGregor/followers",
          "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
          "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
          "organizations_url": "https://api.github.com/users/DougGregor/orgs",
          "repos_url": "https://api.github.com/users/DougGregor/repos",
          "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DougGregor/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-10T18:12:40Z",
      "updated_at": "2017-07-10T22:35:41Z",
      "closed_at": "2017-07-10T22:35:41Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10844",
        "html_url": "https://github.com/apple/swift/pull/10844",
        "diff_url": "https://github.com/apple/swift/pull/10844.diff",
        "patch_url": "https://github.com/apple/swift/pull/10844.patch"
      },
      "body": "This is as per discussion in https://bugs.swift.org/browse/SR-5332\r\n<rdar://problem/33216628> Remove built-in `run` subcommand\r\n\r\nExplanation: Remove built-in `run` subcommand.\r\n\r\nScope: we need to remove the built-in `run` subcommand to allow the package manager's new swift-run tool to execute. The package manager has implemented support for running run command with a file name for backwards compatibility: `swift run file.swift`.\r\n\r\nSR Issue: SR-5332, <rdar://problem/33216628>\r\n\r\nRisk: Low risk as this command is not well known and we are providing some backwards compatibility.\r\n\r\nTesting: Manually tested that package manager's swift-run is executed instead of the built-in command.",
      "score": 1.5256087
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10845",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10845/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10845/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10845/events",
      "html_url": "https://github.com/apple/swift/pull/10845",
      "id": 241803017,
      "number": 10845,
      "title": "[overlay] Change INBooleanResolutionResul.defaultProfile to .isDefaultProfile",
      "user": {
        "login": "moiseev",
        "id": 64011,
        "avatar_url": "https://avatars3.githubusercontent.com/u/64011?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moiseev",
        "html_url": "https://github.com/moiseev",
        "followers_url": "https://api.github.com/users/moiseev/followers",
        "following_url": "https://api.github.com/users/moiseev/following{/other_user}",
        "gists_url": "https://api.github.com/users/moiseev/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moiseev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moiseev/subscriptions",
        "organizations_url": "https://api.github.com/users/moiseev/orgs",
        "repos_url": "https://api.github.com/users/moiseev/repos",
        "events_url": "https://api.github.com/users/moiseev/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moiseev/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-10T18:25:45Z",
      "updated_at": "2017-07-10T23:48:14Z",
      "closed_at": "2017-07-10T23:34:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10845",
        "html_url": "https://github.com/apple/swift/pull/10845",
        "diff_url": "https://github.com/apple/swift/pull/10845.diff",
        "patch_url": "https://github.com/apple/swift/pull/10845.patch"
      },
      "body": "<rdar://problem/31816908>",
      "score": 1.5259941
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10847",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10847/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10847/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10847/events",
      "html_url": "https://github.com/apple/swift/pull/10847",
      "id": 241810495,
      "number": 10847,
      "title": "Fix another subtle SE-0110-related break.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-10T18:52:36Z",
      "updated_at": "2017-07-11T04:14:23Z",
      "closed_at": "2017-07-11T04:14:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10847",
        "html_url": "https://github.com/apple/swift/pull/10847",
        "diff_url": "https://github.com/apple/swift/pull/10847.diff",
        "patch_url": "https://github.com/apple/swift/pull/10847.patch"
      },
      "body": "The change to roll back a part of SE-0110 to allow multi-argument\r\nfunctions to be passed in places where functions taking a tuple are\r\nexpected resulted in a regression in some cases where the fix would\r\nstrip off the last ParenType from single-argument functions.\r\n\r\nInstead of stripping off parens from both function types we're trying to\r\nmatch when they both have them, strip off none. This ensures that we\r\ndon't get summarily rejected in the nested matchTypes call by other\r\nSE-0110-related code that bails if the two types do not have the same\r\n\"parenness\".\r\n\r\nFixes rdar://problem/33043106 / SR-5387.\r\n",
      "score": 1.5275443
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10848",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10848/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10848/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10848/events",
      "html_url": "https://github.com/apple/swift/pull/10848",
      "id": 241814126,
      "number": 10848,
      "title": "[4.0] Fix another subtle SE-0110-related break.",
      "user": {
        "login": "rudkx",
        "id": 162784,
        "avatar_url": "https://avatars1.githubusercontent.com/u/162784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rudkx",
        "html_url": "https://github.com/rudkx",
        "followers_url": "https://api.github.com/users/rudkx/followers",
        "following_url": "https://api.github.com/users/rudkx/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudkx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rudkx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudkx/subscriptions",
        "organizations_url": "https://api.github.com/users/rudkx/orgs",
        "repos_url": "https://api.github.com/users/rudkx/repos",
        "events_url": "https://api.github.com/users/rudkx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rudkx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-10T19:05:21Z",
      "updated_at": "2017-07-11T04:58:28Z",
      "closed_at": "2017-07-11T04:56:58Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10848",
        "html_url": "https://github.com/apple/swift/pull/10848",
        "diff_url": "https://github.com/apple/swift/pull/10848.diff",
        "patch_url": "https://github.com/apple/swift/pull/10848.patch"
      },
      "body": "The change to roll back a part of SE-0110 to allow multi-argument\r\nfunctions to be passed in places where functions taking a tuple are\r\nexpected resulted in a regression in some cases where the fix would\r\nstrip off the last ParenType from single-argument functions.\r\n\r\nInstead of stripping off parens from both function types we're trying to\r\nmatch when they both have them, strip off none. This ensures that we\r\ndon't get summarily rejected in the nested matchTypes call by other\r\nSE-0110-related code that bails if the two types do not have the same\r\n\"parenness\".\r\n\r\nFixes rdar://problem/33043106 / SR-5387.\r\n",
      "score": 1.5278494
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10849",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10849/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10849/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10849/events",
      "html_url": "https://github.com/apple/swift/pull/10849",
      "id": 241820984,
      "number": 10849,
      "title": "[ConstraintSolver] Fix `shrink` to use correct primary expression as a candidate",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-07-10T19:29:48Z",
      "updated_at": "2017-07-10T22:05:28Z",
      "closed_at": "2017-07-10T22:05:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10849",
        "html_url": "https://github.com/apple/swift/pull/10849",
        "diff_url": "https://github.com/apple/swift/pull/10849.diff",
        "patch_url": "https://github.com/apple/swift/pull/10849.patch"
      },
      "body": "When trying to identify candidates for shrinking we are missing the case\r\nwhen apply expression is a source of the assignment operator, which leads\r\nto incorrect results in some situations, because shrink is going to miss\r\nsome required contextual information about assignment.\r\n\r\nResolves: rdar://problem/33190087\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.5260767
    }
  ]
}

