{
  "total_count": 1407,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10707",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10707/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10707/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10707/events",
      "html_url": "https://github.com/apple/swift/pull/10707",
      "id": 239601467,
      "number": 10707,
      "title": "[ClangImporter] Make conformance loading lazier.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2017-06-29T20:27:39Z",
      "updated_at": "2017-06-30T01:03:36Z",
      "closed_at": "2017-06-30T01:03:13Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10707",
        "html_url": "https://github.com/apple/swift/pull/10707",
        "diff_url": "https://github.com/apple/swift/pull/10707.diff",
        "patch_url": "https://github.com/apple/swift/pull/10707.patch"
      },
      "body": "Previously, the importer queued up conformances to complete once it was done importing the current batch of declarations. However, if there was a serialized Swift module that extended an imported type to add a conformance in exactly the wrong way, the importer could end up asking for that conformance later—even before the reference to the imported type was resolved. This led to a crash in the deserializer \"while reading conformance for type X\".\r\n\r\nInstead of this \"pending actions\" queue, we can just use the mechanisms already in place for lazily loading conformances. That way they'll get filled out on demand, which is better all around anyway. This does mean putting the requirement signature into the \"lazy\" part of the conformance, though.\r\n\r\nThis does as a side effect mean that *all* of the witnesses for the imported conformance may be opaque—that is, they will never be devirtualized to a particular implementation. However, they previously would have referred to methods implemented in Objective-C anyway, which are always dispatched with objc_msgSend. So this should have no practical effect.\r\n\r\nThere's also a second commit that makes deserialization of Swift conformances a little lazier as well, now that we have that ability. This isn't critical to this fix and we could easily leave it for later.\r\n\r\nrdar://problem/32346184\r\n",
      "score": 1.3401453
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10708",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10708/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10708/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10708/events",
      "html_url": "https://github.com/apple/swift/pull/10708",
      "id": 239604507,
      "number": 10708,
      "title": "Benchmarks for memory exclusivity enforcement.",
      "user": {
        "login": "atrick",
        "id": 2165663,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2165663?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atrick",
        "html_url": "https://github.com/atrick",
        "followers_url": "https://api.github.com/users/atrick/followers",
        "following_url": "https://api.github.com/users/atrick/following{/other_user}",
        "gists_url": "https://api.github.com/users/atrick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atrick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atrick/subscriptions",
        "organizations_url": "https://api.github.com/users/atrick/orgs",
        "repos_url": "https://api.github.com/users/atrick/repos",
        "events_url": "https://api.github.com/users/atrick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atrick/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-29T20:39:47Z",
      "updated_at": "2017-07-06T23:50:25Z",
      "closed_at": "2017-06-29T21:31:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10708",
        "html_url": "https://github.com/apple/swift/pull/10708",
        "diff_url": "https://github.com/apple/swift/pull/10708.diff",
        "patch_url": "https://github.com/apple/swift/pull/10708.patch"
      },
      "body": "Three blind microbenchmarks:\r\n- global access\r\n- materializeForSet class property\r\n- nested independent access\r\n",
      "score": 1.3851826
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10709",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10709/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10709/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10709/events",
      "html_url": "https://github.com/apple/swift/pull/10709",
      "id": 239606147,
      "number": 10709,
      "title": "Remove an old diagnostic for 'var' in param position",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-29T20:46:42Z",
      "updated_at": "2017-06-29T23:02:05Z",
      "closed_at": "2017-06-29T21:35:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10709",
        "html_url": "https://github.com/apple/swift/pull/10709",
        "diff_url": "https://github.com/apple/swift/pull/10709.diff",
        "patch_url": "https://github.com/apple/swift/pull/10709.patch"
      },
      "body": "Using the attribute in this position is a relic from the Swift 2\r\ndays, and fixing it required letting invalid code fall through to\r\nSema instead of being diagnosed in Parse proper.  Treat 'var'\r\nin this position like 'let' by simply offering to remove it\r\ninstead of extracting it into a separate variable.\r\n\r\nThis simplifies our model by making the mapping between parsed parameter specifiers and parameter declaration specifiers one-to-one.  In a future commit, these two representations will merge.\r\n\r\nThis is currently blocking #10695.",
      "score": 1.3397415
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10711",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10711/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10711/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10711/events",
      "html_url": "https://github.com/apple/swift/pull/10711",
      "id": 239616657,
      "number": 10711,
      "title": "Never use a protocol's requirement signature as a generic signature",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-29T21:29:38Z",
      "updated_at": "2017-06-29T22:04:52Z",
      "closed_at": "2017-06-29T22:00:41Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10711",
        "html_url": "https://github.com/apple/swift/pull/10711",
        "diff_url": "https://github.com/apple/swift/pull/10711.diff",
        "patch_url": "https://github.com/apple/swift/pull/10711.patch"
      },
      "body": "The protocol's requirement signature is not suitable for use as a complete generic signature, because it (intentionally) omits the root `Self: MyProtocol` requirement that makes the set of requirements sensible. Stop using generic signatures for requirement signatures---it's just a flat set of requirements.\r\n\r\nThe only nontrivial change here is to conformance access paths. When we didn't have a requirement signature to use when constructing a requirement source (i.e., due to recursive protocols), we need to recanonicalize the path based on the now-computed requirement signature.  This was canonicalizing using the generic signature formed from the requirement signature; use the protocol's generic signature instead, with a slight adjustment at the root of the requirement source.\r\n\r\nAll of this to eliminate the penultimate use of `ArchetypeResolutionKind::AlwaysPartial`.",
      "score": 1.3397584
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10712",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10712/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10712/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10712/events",
      "html_url": "https://github.com/apple/swift/pull/10712",
      "id": 239621881,
      "number": 10712,
      "title": "Remove the hash function from the runtime's exclusive access checks.",
      "user": {
        "login": "atrick",
        "id": 2165663,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2165663?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/atrick",
        "html_url": "https://github.com/atrick",
        "followers_url": "https://api.github.com/users/atrick/followers",
        "following_url": "https://api.github.com/users/atrick/following{/other_user}",
        "gists_url": "https://api.github.com/users/atrick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/atrick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atrick/subscriptions",
        "organizations_url": "https://api.github.com/users/atrick/orgs",
        "repos_url": "https://api.github.com/users/atrick/repos",
        "events_url": "https://api.github.com/users/atrick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/atrick/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-29T21:52:44Z",
      "updated_at": "2017-07-05T21:20:49Z",
      "closed_at": "2017-06-29T23:32:36Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10712",
        "html_url": "https://github.com/apple/swift/pull/10712",
        "diff_url": "https://github.com/apple/swift/pull/10712.diff",
        "patch_url": "https://github.com/apple/swift/pull/10712.patch"
      },
      "body": "I expect this to improve the following Onone benchmarks:\r\n- 1.09x accessGlobal\r\n- 1.08x accessInMatSet\r\n- 1.06x accessIndependent\r\n\r\nAnd the preexisting benchmarks:\r\n\r\n```\r\n| TEST                    | DELTA | SPEEDUP   |\r\n|                         |       |           |\r\n| Random                  | -7.9% | **1.09x** |\r\n| MatMul                  | -7.6% | **1.08x** |\r\n| XorShift                | -7.2% | **1.08x** |\r\n| PolymorphicCalls        | -6.2% | **1.07x** |\r\n| NopDeinit               | -6.1% | **1.06x** |\r\n| Ary                     | -6.0% | **1.06x** |\r\n| Integrate               | -5.8% | **1.06x** |\r\n| StringWalk              | -5.5% | **1.06x** |\r\n| ArrayInClass            | -5.2% | **1.06x** |\r\n| MultiFileTogether       | -5.2% | **1.06x** |\r\n| DictionaryHashableClass | -5.2% | **1.05x** |\r\n| MultiFileSeparate       | -4.9% | **1.05x** |\r\n\r\n```",
      "score": 1.3421103
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10714",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10714/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10714/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10714/events",
      "html_url": "https://github.com/apple/swift/pull/10714",
      "id": 239642615,
      "number": 10714,
      "title": "[GSB] Stop creating unresolved potential archetypes.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-06-29T23:57:19Z",
      "updated_at": "2017-06-30T16:59:39Z",
      "closed_at": "2017-06-30T16:51:18Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10714",
        "html_url": "https://github.com/apple/swift/pull/10714",
        "diff_url": "https://github.com/apple/swift/pull/10714.diff",
        "patch_url": "https://github.com/apple/swift/pull/10714.patch"
      },
      "body": "Stop creating \"unresolved\" potential archetypes in the `GenericSignatureBuilder`. This means we only form a new potential archetype when we already know what associated type or concrete type it refers to, so we know that it is well-formed. If we are unable to resolve a type, delay the corresponding requirement so we can process it later.\r\n\r\nMove the typo correction logic for unresolved potential archetypes from the `GenericSignatureBuilder` to the type checker proper, where we can reuse common infrastructure. This improves diagnostics (e.g., when we're trying to typo-correct to a type in a superclass found via a superclass constraint) and avoids some DRY violations.\r\n\r\nOverall, we get to rip out a big pile of dodgy code.\r\n\r\nFixes SR-2796 / rdar://problem/28544316.",
      "score": 1.3456849
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10715",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10715/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10715/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10715/events",
      "html_url": "https://github.com/apple/swift/pull/10715",
      "id": 239650079,
      "number": 10715,
      "title": "Avoid building conformance lookup tables when we don't have to.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2017-06-30T00:55:04Z",
      "updated_at": "2017-07-05T20:22:27Z",
      "closed_at": "2017-07-05T20:22:20Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10715",
        "html_url": "https://github.com/apple/swift/pull/10715",
        "diff_url": "https://github.com/apple/swift/pull/10715.diff",
        "patch_url": "https://github.com/apple/swift/pull/10715.patch"
      },
      "body": "- Deinitializers never get a custom Objective-C name.\r\n- Classes and protocols are never bridged themselves; that only matters for structs and enums.\r\n\r\nThis avoids another circularity issue like the one in #10707, where the Clang importer ends up importing a class and hands it to the type checker, which then asks about conformances. The conformance lookup table goes to add the extension from the Swift module, except that the Swift module is what asked for the import in the first place.\r\n\r\nIt's possible there's a more general solution here, but this particular change is good even in the non-crashy cases, and definitely safe for Swift 4.0. Even if the test case is even more idiosyncratic than the last one.\r\n\r\n[SR-5330](https://bugs.swift.org/browse/SR-5330) / rdar://problem/32677610",
      "score": 1.3792949
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10716",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10716/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10716/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10716/events",
      "html_url": "https://github.com/apple/swift/pull/10716",
      "id": 239650867,
      "number": 10716,
      "title": "[index/build] Upstream indexing while building changes",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T01:01:23Z",
      "updated_at": "2017-06-30T21:19:55Z",
      "closed_at": "2017-06-30T19:02:06Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10716",
        "html_url": "https://github.com/apple/swift/pull/10716",
        "diff_url": "https://github.com/apple/swift/pull/10716.diff",
        "patch_url": "https://github.com/apple/swift/pull/10716.patch"
      },
      "body": "This patch upstreams previously AppleInternal changes for\r\nindexing while building.",
      "score": 1.3472906
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10717",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10717/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10717/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10717/events",
      "html_url": "https://github.com/apple/swift/pull/10717",
      "id": 239686130,
      "number": 10717,
      "title": "[QoI] Don't assume that contextual type is always present for trailing closure diagnostics",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-06-30T06:11:09Z",
      "updated_at": "2017-06-30T06:32:50Z",
      "closed_at": "2017-06-30T06:32:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10717",
        "html_url": "https://github.com/apple/swift/pull/10717",
        "diff_url": "https://github.com/apple/swift/pull/10717.diff",
        "patch_url": "https://github.com/apple/swift/pull/10717.patch"
      },
      "body": "Fixes crasher in diagnostics related to the fact that contextual type\r\nis not always available when trying to diagnose problems related to\r\ncalls with trailing closures.\r\n\r\nResolves: rdar://problem/33067102\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.3454648
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10718",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10718/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10718/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10718/events",
      "html_url": "https://github.com/apple/swift/pull/10718",
      "id": 239692151,
      "number": 10718,
      "title": "[4.0] [QoI] Don't assume that contextual type is always present for trailing closure diagnostics",
      "user": {
        "login": "xedin",
        "id": 21240,
        "avatar_url": "https://avatars1.githubusercontent.com/u/21240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xedin",
        "html_url": "https://github.com/xedin",
        "followers_url": "https://api.github.com/users/xedin/followers",
        "following_url": "https://api.github.com/users/xedin/following{/other_user}",
        "gists_url": "https://api.github.com/users/xedin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xedin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xedin/subscriptions",
        "organizations_url": "https://api.github.com/users/xedin/orgs",
        "repos_url": "https://api.github.com/users/xedin/repos",
        "events_url": "https://api.github.com/users/xedin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xedin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T06:51:54Z",
      "updated_at": "2017-06-30T15:37:06Z",
      "closed_at": "2017-06-30T15:37:06Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10718",
        "html_url": "https://github.com/apple/swift/pull/10718",
        "diff_url": "https://github.com/apple/swift/pull/10718.diff",
        "patch_url": "https://github.com/apple/swift/pull/10718.patch"
      },
      "body": "* Description: Fixes crasher in diagnostics related to the fact that contextual type\r\nis not always available when trying to diagnose problems related to\r\ncalls with trailing closures.\r\n\r\n* Scope of the issue: fixes crasher in diagnostics related to calls with trailing closures.\r\n\r\n* Risk: Low.\r\n\r\n* Tested: New test cases added, Swift CI.\r\n\r\n* Reviewed by: Mark Lacey.\r\n\r\n* Resolves: rdar://problem/33067102\r\n\r\n<!--\r\nBefore merging this pull request, you must run the Swift continuous integration tests.\r\nFor information about triggering CI builds via @swift-ci, see:\r\nhttps://github.com/apple/swift/blob/master/docs/ContinuousIntegration.md#swift-ci\r\n\r\nThank you for your contribution to Swift!\r\n-->\r\n",
      "score": 1.3481208
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10719",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10719/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10719/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10719/events",
      "html_url": "https://github.com/apple/swift/pull/10719",
      "id": 239819573,
      "number": 10719,
      "title": "Fix Lazy.swift.gyb in optimize test mode",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T15:51:09Z",
      "updated_at": "2017-06-30T18:35:39Z",
      "closed_at": "2017-06-30T18:35:39Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10719",
        "html_url": "https://github.com/apple/swift/pull/10719",
        "diff_url": "https://github.com/apple/swift/pull/10719.diff",
        "patch_url": "https://github.com/apple/swift/pull/10719.patch"
      },
      "body": "EmptyCollection was changed a while ago to use _debugPrecondition checks in the\r\naccesses being tested that fail in optimize mode. Change the test to only expect\r\na failure in debug mode.\r\n\r\nrdar://31897334\r\n",
      "score": 1.3525159
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10721",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10721/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10721/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10721/events",
      "html_url": "https://github.com/apple/swift/pull/10721",
      "id": 239841293,
      "number": 10721,
      "title": "[NFC] Switch some more of the frontend to params",
      "user": {
        "login": "CodaFi",
        "id": 1896383,
        "avatar_url": "https://avatars3.githubusercontent.com/u/1896383?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodaFi",
        "html_url": "https://github.com/CodaFi",
        "followers_url": "https://api.github.com/users/CodaFi/followers",
        "following_url": "https://api.github.com/users/CodaFi/following{/other_user}",
        "gists_url": "https://api.github.com/users/CodaFi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CodaFi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CodaFi/subscriptions",
        "organizations_url": "https://api.github.com/users/CodaFi/orgs",
        "repos_url": "https://api.github.com/users/CodaFi/repos",
        "events_url": "https://api.github.com/users/CodaFi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CodaFi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T17:25:13Z",
      "updated_at": "2017-06-30T18:25:15Z",
      "closed_at": "2017-06-30T17:50:09Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10721",
        "html_url": "https://github.com/apple/swift/pull/10721",
        "diff_url": "https://github.com/apple/swift/pull/10721.diff",
        "patch_url": "https://github.com/apple/swift/pull/10721.patch"
      },
      "body": "",
      "score": 1.3529484
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10722",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10722/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10722/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10722/events",
      "html_url": "https://github.com/apple/swift/pull/10722",
      "id": 239841748,
      "number": 10722,
      "title": "IRGen: Sort the target-features string",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-30T17:27:30Z",
      "updated_at": "2017-06-30T19:57:07Z",
      "closed_at": "2017-06-30T19:57:07Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10722",
        "html_url": "https://github.com/apple/swift/pull/10722",
        "diff_url": "https://github.com/apple/swift/pull/10722.diff",
        "patch_url": "https://github.com/apple/swift/pull/10722.patch"
      },
      "body": "Function merging will not identify two otherwise equivalent if the order of the target-features list differs.\r\n\r\nrdar://33057710",
      "score": 1.3535215
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10724",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10724/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10724/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10724/events",
      "html_url": "https://github.com/apple/swift/pull/10724",
      "id": 239853640,
      "number": 10724,
      "title": "Yet more TBD.",
      "user": {
        "login": "huonw",
        "id": 1203825,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1203825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/huonw",
        "html_url": "https://github.com/huonw",
        "followers_url": "https://api.github.com/users/huonw/followers",
        "following_url": "https://api.github.com/users/huonw/following{/other_user}",
        "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/huonw/subscriptions",
        "organizations_url": "https://api.github.com/users/huonw/orgs",
        "repos_url": "https://api.github.com/users/huonw/repos",
        "events_url": "https://api.github.com/users/huonw/events{/privacy}",
        "received_events_url": "https://api.github.com/users/huonw/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T18:19:43Z",
      "updated_at": "2017-07-28T18:37:55Z",
      "closed_at": "2017-06-30T23:09:19Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10724",
        "html_url": "https://github.com/apple/swift/pull/10724",
        "diff_url": "https://github.com/apple/swift/pull/10724.diff",
        "patch_url": "https://github.com/apple/swift/pull/10724.patch"
      },
      "body": "rdar://problem/32254773",
      "score": 1.5527159
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10725",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10725/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10725/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10725/events",
      "html_url": "https://github.com/apple/swift/pull/10725",
      "id": 239856406,
      "number": 10725,
      "title": "[4.0] IRGen: Sort the target-features string",
      "user": {
        "login": "aschwaighofer",
        "id": 15268288,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15268288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aschwaighofer",
        "html_url": "https://github.com/aschwaighofer",
        "followers_url": "https://api.github.com/users/aschwaighofer/followers",
        "following_url": "https://api.github.com/users/aschwaighofer/following{/other_user}",
        "gists_url": "https://api.github.com/users/aschwaighofer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aschwaighofer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aschwaighofer/subscriptions",
        "organizations_url": "https://api.github.com/users/aschwaighofer/orgs",
        "repos_url": "https://api.github.com/users/aschwaighofer/repos",
        "events_url": "https://api.github.com/users/aschwaighofer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aschwaighofer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T18:31:59Z",
      "updated_at": "2017-07-07T18:44:38Z",
      "closed_at": "2017-07-07T18:44:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10725",
        "html_url": "https://github.com/apple/swift/pull/10725",
        "diff_url": "https://github.com/apple/swift/pull/10725.diff",
        "patch_url": "https://github.com/apple/swift/pull/10725.patch"
      },
      "body": "Function merging will not identify two otherwise equivalent if the order of the target-features list differs.\r\n\r\n• Explanation: We perform an optimization that merge function bodies if they are determined to be indentical. This some times gets foiled today because the order of entries in the target features string is different leading to otherwise identical functions not to get merged. This means in WMO mode identical implementations of array operations don’t always get merged.\r\n\r\n• Scope of Issue: Code size impact. Identical functions don’t get merged.\r\n\r\n• Origination: Unknown.\r\n\r\n• Risk: Low. The order of the target features string should not affect many transformations in LLVM.\r\n\r\nrdar://33057710\r\n",
      "score": 1.3992083
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10726",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10726/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10726/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10726/events",
      "html_url": "https://github.com/apple/swift/pull/10726",
      "id": 239863576,
      "number": 10726,
      "title": "[index/build] Upstream indexing while building changes",
      "user": {
        "login": "bitjammer",
        "id": 693829,
        "avatar_url": "https://avatars1.githubusercontent.com/u/693829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitjammer",
        "html_url": "https://github.com/bitjammer",
        "followers_url": "https://api.github.com/users/bitjammer/followers",
        "following_url": "https://api.github.com/users/bitjammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitjammer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitjammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitjammer/subscriptions",
        "organizations_url": "https://api.github.com/users/bitjammer/orgs",
        "repos_url": "https://api.github.com/users/bitjammer/repos",
        "events_url": "https://api.github.com/users/bitjammer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitjammer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T19:04:02Z",
      "updated_at": "2017-06-30T21:04:06Z",
      "closed_at": "2017-06-30T21:04:04Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10726",
        "html_url": "https://github.com/apple/swift/pull/10726",
        "diff_url": "https://github.com/apple/swift/pull/10726.diff",
        "patch_url": "https://github.com/apple/swift/pull/10726.patch"
      },
      "body": "This patch upstreams previously AppleInternal changes for\r\nindexing while building.",
      "score": 1.3544652
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10727",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10727/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10727/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10727/events",
      "html_url": "https://github.com/apple/swift/pull/10727",
      "id": 239868592,
      "number": 10727,
      "title": "[4.0] GSB] Stop creating unresolved potential archetypes.",
      "user": {
        "login": "DougGregor",
        "id": 989428,
        "avatar_url": "https://avatars3.githubusercontent.com/u/989428?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DougGregor",
        "html_url": "https://github.com/DougGregor",
        "followers_url": "https://api.github.com/users/DougGregor/followers",
        "following_url": "https://api.github.com/users/DougGregor/following{/other_user}",
        "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions",
        "organizations_url": "https://api.github.com/users/DougGregor/orgs",
        "repos_url": "https://api.github.com/users/DougGregor/repos",
        "events_url": "https://api.github.com/users/DougGregor/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DougGregor/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-06-30T19:27:15Z",
      "updated_at": "2017-07-08T16:08:22Z",
      "closed_at": "2017-07-08T16:08:14Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10727",
        "html_url": "https://github.com/apple/swift/pull/10727",
        "diff_url": "https://github.com/apple/swift/pull/10727.diff",
        "patch_url": "https://github.com/apple/swift/pull/10727.patch"
      },
      "body": "**Explanation**: Stop creating \"unresolved\" potential archetypes in the `GenericSignatureBuilder`, which eliminates an class of invalid states that led to crashes in the `GenericSignatureBuilder`.\r\n**Scope**: This change will affect all generic code. It will make us reject (rather than crash on) some invalid code (the awfully opaque SR-2796 crasher is one such example), provide better typo corrections for some invalid code using generics, but otherwise should not actually change the externally-visible behavior of any well-formed code.\r\n**Radar**: SR-2796 / rdar://problem/28544316\r\n**Risk**: Moderately low. It's a significant change to the `GenericSignatureBuilder`, which is where the risk comes from because it's so ubiquitous. On the other hand, the `GenericSignatureBuilder` is fairly well tested, and we've simplified the code considerably with this change, so I suspect it's less likely to actually fail in the real world after this change.\r\n**Testing**: Compiler regression tests.",
      "score": 1.4055748
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10728",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10728/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10728/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10728/events",
      "html_url": "https://github.com/apple/swift/pull/10728",
      "id": 239876957,
      "number": 10728,
      "title": "Make coding paths non-optional [DO NOT MERGE]",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2017-06-30T20:08:17Z",
      "updated_at": "2017-07-01T21:34:44Z",
      "closed_at": "2017-07-01T21:34:41Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10728",
        "html_url": "https://github.com/apple/swift/pull/10728",
        "diff_url": "https://github.com/apple/swift/pull/10728.diff",
        "patch_url": "https://github.com/apple/swift/pull/10728.patch"
      },
      "body": "**What's in this pull request?**\r\nAs laid out in a [proposed update to SE-0166 and SE-0167](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170619/037672.html), there are changes to unkeyed containers and coding paths that we want to introduce to the Codable API. This implements the remainder of those updates which had not yet been implemented:\r\n\r\n* For the benefit of unkeyed containers, coding paths currently contain optional `CodingKey`s — unkeyed containers are allowed to report a `nil` key in a path. However, this is unhelpful for debugging purposes, or inspecting the coding path for context, since any unkeyed container simply reports `nil`, whether it’s at index 1 or 1000\r\n\r\n  Now all containers are required to report a non-optional CodingKey for their segment of the coding path, and coding paths are now exposed as `[CodingKey]`\r\n* To support this, `UnkeyedEncodingContainer`s now expose their `count` and `UnkeyedDecodingContainer`s expose their `currentIndex`\r\n\r\n**This PR should not be merged on its own.** This must be merged simultaneously with #10729 and apple/swift-corelibs-foundation#1091 to avoid breaking the build.",
      "score": 1.3613889
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10729",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10729/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10729/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10729/events",
      "html_url": "https://github.com/apple/swift/pull/10729",
      "id": 239877876,
      "number": 10729,
      "title": "[4.0] Make coding paths non-optional [DO NOT MERGE]",
      "user": {
        "login": "itaiferber",
        "id": 33716,
        "avatar_url": "https://avatars3.githubusercontent.com/u/33716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/itaiferber",
        "html_url": "https://github.com/itaiferber",
        "followers_url": "https://api.github.com/users/itaiferber/followers",
        "following_url": "https://api.github.com/users/itaiferber/following{/other_user}",
        "gists_url": "https://api.github.com/users/itaiferber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/itaiferber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/itaiferber/subscriptions",
        "organizations_url": "https://api.github.com/users/itaiferber/orgs",
        "repos_url": "https://api.github.com/users/itaiferber/repos",
        "events_url": "https://api.github.com/users/itaiferber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/itaiferber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-06-30T20:12:33Z",
      "updated_at": "2017-07-01T21:34:51Z",
      "closed_at": "2017-07-01T21:34:38Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10729",
        "html_url": "https://github.com/apple/swift/pull/10729",
        "diff_url": "https://github.com/apple/swift/pull/10729.diff",
        "patch_url": "https://github.com/apple/swift/pull/10729.patch"
      },
      "body": "**What's in this pull request?**\r\nCherry-picks #10728 to `swift-4.0-branch`.\r\n\r\n**Explanation:** As laid out in a [proposed update to SE-0166 and SE-0167](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170619/037672.html), there are changes to unkeyed containers and coding paths that we want to introduce to the Codable API. This implements the remainder of those updates which had not yet been implemented:\r\n\r\n* For the benefit of unkeyed containers, coding paths currently contain optional `CodingKey`s — unkeyed containers are allowed to report a `nil` key in a path. However, this is unhelpful for debugging purposes, or inspecting the coding path for context, since any unkeyed container simply reports `nil`, whether it’s at index 1 or 1000\r\n\r\n  Now all containers are required to report a non-optional CodingKey for their segment of the coding path, and coding paths are now exposed as `[CodingKey]`\r\n* To support this, `UnkeyedEncodingContainer`s now expose their `count` and `UnkeyedDecodingContainer`s expose their `currentIndex`\r\n\r\n**Scope:** Affects writers of `Encoder`s/`Decoder`s and consumers of the new Codable API.\r\n**Radars:**\r\n\r\n  * rdar://problem/32512602\r\n  * rdar://problem/32512692\r\n\r\n**Risk:** Low\r\n**Testing:** Updates existing unit tests to confirm expected behavior.\r\n\r\n**This PR should not be merged on its own.** This must be merged simultaneously with #10728 and apple/swift-corelibs-foundation#1091 to avoid breaking the build.",
      "score": 1.3614174
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10730",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10730/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10730/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10730/events",
      "html_url": "https://github.com/apple/swift/pull/10730",
      "id": 239878257,
      "number": 10730,
      "title": "[silgen] Fix 5b7b6d0b5ed2b49fe14534da16d9263622f162c6 to work with semantic sil.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T20:14:22Z",
      "updated_at": "2017-06-30T21:53:03Z",
      "closed_at": "2017-06-30T21:45:02Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10730",
        "html_url": "https://github.com/apple/swift/pull/10730",
        "diff_url": "https://github.com/apple/swift/pull/10730.diff",
        "patch_url": "https://github.com/apple/swift/pull/10730.patch"
      },
      "body": "[silgen] Fix 5b7b6d0b5ed2b49fe14534da16d9263622f162c6 to work with semantic sil.\r\n\r\nI tried to do a more complex fix, but it will take more time than I have now.\r\nThis change at least ensures that we maintain correctness both in terms of the\r\nsuper types and in terms of the semantic sil verifier.\r\n\r\nrdar://31880847\r\n",
      "score": 1.3551191
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10731",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10731/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10731/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10731/events",
      "html_url": "https://github.com/apple/swift/pull/10731",
      "id": 239881542,
      "number": 10731,
      "title": "[sil-ownership-verifier] Ignore end_borrow that are post-dominated by unreachable code.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T20:30:50Z",
      "updated_at": "2017-06-30T21:20:16Z",
      "closed_at": "2017-06-30T21:09:47Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10731",
        "html_url": "https://github.com/apple/swift/pull/10731",
        "diff_url": "https://github.com/apple/swift/pull/10731.diff",
        "patch_url": "https://github.com/apple/swift/pull/10731.patch"
      },
      "body": "[sil-ownership-verifier] Ignore end_borrow that are post-dominated by unreachable code.\r\n\r\nrdar://31880847",
      "score": 1.3550751
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10732",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10732/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10732/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10732/events",
      "html_url": "https://github.com/apple/swift/pull/10732",
      "id": 239887125,
      "number": 10732,
      "title": "[sil-ownership-verifier] We can pass unowned, owned, and guaranteed callees to a call site that uses its callee as unowned.",
      "user": {
        "login": "gottesmm",
        "id": 499423,
        "avatar_url": "https://avatars1.githubusercontent.com/u/499423?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gottesmm",
        "html_url": "https://github.com/gottesmm",
        "followers_url": "https://api.github.com/users/gottesmm/followers",
        "following_url": "https://api.github.com/users/gottesmm/following{/other_user}",
        "gists_url": "https://api.github.com/users/gottesmm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gottesmm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gottesmm/subscriptions",
        "organizations_url": "https://api.github.com/users/gottesmm/orgs",
        "repos_url": "https://api.github.com/users/gottesmm/repos",
        "events_url": "https://api.github.com/users/gottesmm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gottesmm/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2017-06-30T20:57:34Z",
      "updated_at": "2017-06-30T21:31:40Z",
      "closed_at": "2017-06-30T21:27:50Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10732",
        "html_url": "https://github.com/apple/swift/pull/10732",
        "diff_url": "https://github.com/apple/swift/pull/10732.diff",
        "patch_url": "https://github.com/apple/swift/pull/10732.patch"
      },
      "body": "[sil-ownership-verifier] We can pass unowned, owned, and guaranteed callees to a call site that uses its callee as unowned.\r\n\r\nrdar://31880847\r\n",
      "score": 1.3553346
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10733",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10733/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10733/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10733/events",
      "html_url": "https://github.com/apple/swift/pull/10733",
      "id": 239902918,
      "number": 10733,
      "title": "[Bridging PCH] Move dependency-on-bridging-PCH to -emit-bc JobAction itself",
      "user": {
        "login": "graydon",
        "id": 14097,
        "avatar_url": "https://avatars3.githubusercontent.com/u/14097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/graydon",
        "html_url": "https://github.com/graydon",
        "followers_url": "https://api.github.com/users/graydon/followers",
        "following_url": "https://api.github.com/users/graydon/following{/other_user}",
        "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/graydon/subscriptions",
        "organizations_url": "https://api.github.com/users/graydon/orgs",
        "repos_url": "https://api.github.com/users/graydon/repos",
        "events_url": "https://api.github.com/users/graydon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/graydon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T22:30:25Z",
      "updated_at": "2017-06-30T23:06:17Z",
      "closed_at": "2017-06-30T23:06:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10733",
        "html_url": "https://github.com/apple/swift/pull/10733",
        "diff_url": "https://github.com/apple/swift/pull/10733.diff",
        "patch_url": "https://github.com/apple/swift/pull/10733.patch"
      },
      "body": "Fix a bug in the swift driver concerning the dependency edge between an -emit-bc compile job and a bridging PCH file that it requires. The previous edge was attached to the backend job that _follows_ the -emit-bc job, not the -emit-bc job itself. This was a benign flaw in the first iteration of bridging PCH but it becomes a build-breaking flaw on archive jobs (with embedded bitcode) when combined with persistent bridging PCH.\r\n\r\nrdar://32984579",
      "score": 1.3563938
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10735",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10735/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10735/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10735/events",
      "html_url": "https://github.com/apple/swift/pull/10735",
      "id": 239905807,
      "number": 10735,
      "title": "[Bridging PCH] Move dependency-on-bridging-PCH to -emit-bc JobAction itself.",
      "user": {
        "login": "graydon",
        "id": 14097,
        "avatar_url": "https://avatars3.githubusercontent.com/u/14097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/graydon",
        "html_url": "https://github.com/graydon",
        "followers_url": "https://api.github.com/users/graydon/followers",
        "following_url": "https://api.github.com/users/graydon/following{/other_user}",
        "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/graydon/subscriptions",
        "organizations_url": "https://api.github.com/users/graydon/orgs",
        "repos_url": "https://api.github.com/users/graydon/repos",
        "events_url": "https://api.github.com/users/graydon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/graydon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-06-30T22:53:29Z",
      "updated_at": "2017-07-01T00:16:43Z",
      "closed_at": "2017-07-01T00:16:43Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10735",
        "html_url": "https://github.com/apple/swift/pull/10735",
        "diff_url": "https://github.com/apple/swift/pull/10735.diff",
        "patch_url": "https://github.com/apple/swift/pull/10735.patch"
      },
      "body": "\r\n**Explanation**: Fix a misplaced dependency edge in bridging PCH driver logic.\r\n\r\n**Scope**: Causes a \"missing PCH\" error in certain cases when doing an\r\n  \"Archive\" build in Xcode on a target that includes embedded LLVM\r\n  bitcode. The root cause was a misplaced dependency edge in the swift\r\n  driver logic, which was benign in the first iteration of bridging PCH, but\r\n  which becomes a serious error when combined with recent changes to make\r\n  bridging PCH files persist between compilations.\r\n\r\n**Radar**: 32984579\r\n\r\n**Risk**: Low, the change only moves a dependency edge in the driver a step\r\n  earlier, making the driver graph strictly more-conservative in the order\r\n  it runs things.\r\n\r\n**Testing**: A testcase was added to the existing testsuite which exhibits the\r\n  required dependency edge. Plus usual run of testsuite.\r\n",
      "score": 1.3568593
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10736",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10736/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10736/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10736/events",
      "html_url": "https://github.com/apple/swift/pull/10736",
      "id": 239912445,
      "number": 10736,
      "title": "[Bridging PCH] Move dependency-on-bridging-PCH to -emit-bc JobAction …",
      "user": {
        "login": "graydon",
        "id": 14097,
        "avatar_url": "https://avatars3.githubusercontent.com/u/14097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/graydon",
        "html_url": "https://github.com/graydon",
        "followers_url": "https://api.github.com/users/graydon/followers",
        "following_url": "https://api.github.com/users/graydon/following{/other_user}",
        "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/graydon/subscriptions",
        "organizations_url": "https://api.github.com/users/graydon/orgs",
        "repos_url": "https://api.github.com/users/graydon/repos",
        "events_url": "https://api.github.com/users/graydon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/graydon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2017-06-30T23:57:07Z",
      "updated_at": "2017-07-01T03:43:40Z",
      "closed_at": "2017-07-01T03:43:40Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10736",
        "html_url": "https://github.com/apple/swift/pull/10736",
        "diff_url": "https://github.com/apple/swift/pull/10736.diff",
        "patch_url": "https://github.com/apple/swift/pull/10736.patch"
      },
      "body": "Beta 3 branch variant of https://github.com/apple/swift/pull/10735\r\n\r\n**Explanation**: Fix a misplaced dependency edge in bridging PCH driver logic.\r\n\r\n**Scope**: Causes a \"missing PCH\" error in certain cases when doing an\r\n  \"Archive\" build in Xcode on a target that includes embedded LLVM\r\n  bitcode. The root cause was a misplaced dependency edge in the swift\r\n  driver logic, which was benign in the first iteration of bridging PCH, but\r\n  which becomes a serious error when combined with recent changes to make\r\n  bridging PCH files persist between compilations.\r\n\r\n**Radar**: 32984579\r\n\r\n**Risk**: Low, the change only moves a dependency edge in the driver a step\r\n  earlier, making the driver graph strictly more-conservative in the order\r\n  it runs things.\r\n\r\n**Testing**: A testcase was added to the existing testsuite which exhibits the\r\n  required dependency edge. Plus usual run of testsuite.\r\n",
      "score": 1.3582002
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10737",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10737/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10737/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10737/events",
      "html_url": "https://github.com/apple/swift/pull/10737",
      "id": 239914294,
      "number": 10737,
      "title": "[4.0] [ClangImporter] Make conformance loading lazier.",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-01T00:20:01Z",
      "updated_at": "2017-07-01T02:53:19Z",
      "closed_at": "2017-07-01T02:53:17Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10737",
        "html_url": "https://github.com/apple/swift/pull/10737",
        "diff_url": "https://github.com/apple/swift/pull/10737.diff",
        "patch_url": "https://github.com/apple/swift/pull/10737.patch"
      },
      "body": "- **Explanation**: If a serialized Swift module added a protocol conformance to an imported Objective-C class in exactly the wrong way, the Clang importer could end up asking for that conformance even before the serialized reference to the imported type was resolved. This led to a crash in the deserializer \"while reading conformance for type X\". The fix is to make conformances imported from Objective-C lazier, using a mechanism that's already in place.\r\n- **Scope**: Affects all conformances created by the Clang importer for protocols on imported types.\r\n- **Radar**: rdar://problem/32346184\r\n- **Reviewed by**: @DougGregor  \r\n- **Risk**: Medium. While this is using an existing mechanism, it's still possible we were relying on these conformances being completed up front, and now they won't be. However, the usual Apple-internal qualifications for a release should offer sufficient testing.\r\n- **Testing**: Verified that the original test case succeeded, passed source compatibility suite on master.",
      "score": 1.358133
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10738",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10738/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10738/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10738/events",
      "html_url": "https://github.com/apple/swift/pull/10738",
      "id": 239914581,
      "number": 10738,
      "title": "[SourceKit] When Cursor infor resolves to the start of an expression,  we always get the outermost expression.",
      "user": {
        "login": "nkcsgexi",
        "id": 2191945,
        "avatar_url": "https://avatars0.githubusercontent.com/u/2191945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkcsgexi",
        "html_url": "https://github.com/nkcsgexi",
        "followers_url": "https://api.github.com/users/nkcsgexi/followers",
        "following_url": "https://api.github.com/users/nkcsgexi/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkcsgexi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkcsgexi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkcsgexi/subscriptions",
        "organizations_url": "https://api.github.com/users/nkcsgexi/orgs",
        "repos_url": "https://api.github.com/users/nkcsgexi/repos",
        "events_url": "https://api.github.com/users/nkcsgexi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkcsgexi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2017-07-01T00:23:24Z",
      "updated_at": "2017-07-01T00:57:39Z",
      "closed_at": "2017-07-01T00:57:37Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10738",
        "html_url": "https://github.com/apple/swift/pull/10738",
        "diff_url": "https://github.com/apple/swift/pull/10738.diff",
        "patch_url": "https://github.com/apple/swift/pull/10738.patch"
      },
      "body": "The reason is that for clients, getting the offspring of an expression is\r\nmuch easier that getting parents.\r\n",
      "score": 1.3576466
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10739",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10739/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10739/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10739/events",
      "html_url": "https://github.com/apple/swift/pull/10739",
      "id": 239914933,
      "number": 10739,
      "title": "[4.0] Do stricter checking of -D command line arguments",
      "user": {
        "login": "jrose-apple",
        "id": 15097531,
        "avatar_url": "https://avatars2.githubusercontent.com/u/15097531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrose-apple",
        "html_url": "https://github.com/jrose-apple",
        "followers_url": "https://api.github.com/users/jrose-apple/followers",
        "following_url": "https://api.github.com/users/jrose-apple/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrose-apple/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrose-apple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrose-apple/subscriptions",
        "organizations_url": "https://api.github.com/users/jrose-apple/orgs",
        "repos_url": "https://api.github.com/users/jrose-apple/repos",
        "events_url": "https://api.github.com/users/jrose-apple/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrose-apple/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2017-07-01T00:28:18Z",
      "updated_at": "2017-07-01T02:55:04Z",
      "closed_at": "2017-07-01T02:55:00Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10739",
        "html_url": "https://github.com/apple/swift/pull/10739",
        "diff_url": "https://github.com/apple/swift/pull/10739.diff",
        "patch_url": "https://github.com/apple/swift/pull/10739.patch"
      },
      "body": "- **Explanation**: Unlike C, Swift only accepts simple identifiers for its -D flags, which are either present or absent. Previously we just silently let these options by; this patch makes the driver emit a warning.\r\n- **Scope**: Only people passing invalid options.\r\n- **Issue**: [SR-2404](https://bugs.swift.org/browse/SR-2404) / rdar://problem/22157790\r\n- **Reviewed by**: me (patch by @erikjv and @CodaFi)\r\n- **Risk**: Low. It's just a warning.\r\n- **Testing**: Added a compiler regression test.",
      "score": 1.3581965
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10740",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10740/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10740/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10740/events",
      "html_url": "https://github.com/apple/swift/pull/10740",
      "id": 239921468,
      "number": 10740,
      "title": "[stdlib] Correct UnsafeBufferPointer._copyContents",
      "user": {
        "login": "dabrahams",
        "id": 44065,
        "avatar_url": "https://avatars1.githubusercontent.com/u/44065?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dabrahams",
        "html_url": "https://github.com/dabrahams",
        "followers_url": "https://api.github.com/users/dabrahams/followers",
        "following_url": "https://api.github.com/users/dabrahams/following{/other_user}",
        "gists_url": "https://api.github.com/users/dabrahams/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dabrahams/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dabrahams/subscriptions",
        "organizations_url": "https://api.github.com/users/dabrahams/orgs",
        "repos_url": "https://api.github.com/users/dabrahams/repos",
        "events_url": "https://api.github.com/users/dabrahams/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dabrahams/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2017-07-01T02:29:02Z",
      "updated_at": "2017-07-07T17:39:31Z",
      "closed_at": "2017-07-07T17:39:23Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10740",
        "html_url": "https://github.com/apple/swift/pull/10740",
        "diff_url": "https://github.com/apple/swift/pull/10740.diff",
        "patch_url": "https://github.com/apple/swift/pull/10740.patch"
      },
      "body": "The implementation imposed stricter requirements on its inputs than those allowed by Sequence\r\n",
      "score": 1.4021243
    },
    {
      "url": "https://api.github.com/repos/apple/swift/issues/10741",
      "repository_url": "https://api.github.com/repos/apple/swift",
      "labels_url": "https://api.github.com/repos/apple/swift/issues/10741/labels{/name}",
      "comments_url": "https://api.github.com/repos/apple/swift/issues/10741/comments",
      "events_url": "https://api.github.com/repos/apple/swift/issues/10741/events",
      "html_url": "https://github.com/apple/swift/pull/10741",
      "id": 239921494,
      "number": 10741,
      "title": "Handle generic computed properties in key paths.",
      "user": {
        "login": "jckarter",
        "id": 147281,
        "avatar_url": "https://avatars0.githubusercontent.com/u/147281?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jckarter",
        "html_url": "https://github.com/jckarter",
        "followers_url": "https://api.github.com/users/jckarter/followers",
        "following_url": "https://api.github.com/users/jckarter/following{/other_user}",
        "gists_url": "https://api.github.com/users/jckarter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jckarter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jckarter/subscriptions",
        "organizations_url": "https://api.github.com/users/jckarter/orgs",
        "repos_url": "https://api.github.com/users/jckarter/repos",
        "events_url": "https://api.github.com/users/jckarter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jckarter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2017-07-01T02:29:42Z",
      "updated_at": "2017-07-07T20:50:28Z",
      "closed_at": "2017-07-07T20:50:28Z",
      "pull_request": {
        "url": "https://api.github.com/repos/apple/swift/pulls/10741",
        "html_url": "https://github.com/apple/swift/pull/10741",
        "diff_url": "https://github.com/apple/swift/pull/10741.diff",
        "patch_url": "https://github.com/apple/swift/pull/10741.patch"
      },
      "body": "rdar://problem/31768590",
      "score": 1.403018
    }
  ]
}

